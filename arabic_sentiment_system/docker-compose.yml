# Docker Compose لنظام تحليل المشاعر العربي
# Arabic Sentiment Analysis System - Docker Compose

version: '3.8'

networks:
  sentiment_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  clickhouse_data:
    driver: local
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local
  sentiment_models:
    driver: local
  sentiment_logs:
    driver: local

services:
  # قاعدة البيانات الرئيسية - PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: sentiment_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sentiment_db
      POSTGRES_USER: sentiment_user
      POSTGRES_PASSWORD: sentiment_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    ports:
      - "5432:5432"
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sentiment_user -d sentiment_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres 
      -c shared_preload_libraries=pg_stat_statements
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  # التخزين المؤقت - Redis
  redis:
    image: redis:7-alpine
    container_name: sentiment_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.11
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    command: >
      redis-server /usr/local/etc/redis/redis.conf
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000

  # قاعدة بيانات التحليلات - ClickHouse
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: sentiment_clickhouse
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "8123:8123"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./config/clickhouse-config.xml:/etc/clickhouse-server/config.xml:ro
      - ./scripts/init_clickhouse.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.12
    environment:
      CLICKHOUSE_DB: sentiment_analytics
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Apache Zookeeper (مطلوب لـ Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: sentiment_zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.13
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Apache Kafka - معالجة الأحداث
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: sentiment_kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.14
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # تطبيق تحليل المشاعر الرئيسي
  sentiment_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sentiment_api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://sentiment_user:sentiment_pass@postgres:5432/sentiment_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=9000
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - DEBUG=false
      - LOG_LEVEL=INFO
      - ENABLE_CACHING=true
      - MAX_CONCURRENT_REQUESTS=100
    volumes:
      - sentiment_models:/app/models
      - sentiment_logs:/app/logs
      - ./data:/app/data:ro
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.20
    healthcheck:
      test: ["CMD", "python", "/app/health_check.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # خدمة معالجة الأحداث
  sentiment_processor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sentiment_processor
    restart: unless-stopped
    depends_on:
      sentiment_api:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://sentiment_user:sentiment_pass@postgres:5432/sentiment_db
      - REDIS_HOST=redis
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - PROCESSOR_MODE=true
      - LOG_LEVEL=INFO
    volumes:
      - sentiment_models:/app/models
      - sentiment_logs:/app/logs
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.21
    command: ["python", "-m", "services.event_processor"]
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  # خدمة التحليلات المتقدمة
  sentiment_analytics:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sentiment_analytics
    restart: unless-stopped
    depends_on:
      sentiment_api:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://sentiment_user:sentiment_pass@postgres:5432/sentiment_db
      - REDIS_HOST=redis
      - CLICKHOUSE_HOST=clickhouse
      - ANALYTICS_MODE=true
      - LOG_LEVEL=INFO
    volumes:
      - sentiment_logs:/app/logs
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.22
    command: ["python", "-m", "services.analytics_worker"]
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # Nginx - موازن التحميل والخادم الأمامي
  nginx:
    image: nginx:alpine
    container_name: sentiment_nginx
    restart: unless-stopped
    depends_on:
      - sentiment_api
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/ssl:/etc/nginx/ssl:ro
      - sentiment_logs:/var/log/nginx
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.30
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus - مراقبة الأداء
  prometheus:
    image: prom/prometheus:latest
    container_name: sentiment_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.31
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana - لوحة معلومات المراقبة
  grafana:
    image: grafana/grafana:latest
    container_name: sentiment_grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./data/grafana:/var/lib/grafana
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.32

  # محرر البيانات - Adminer
  adminer:
    image: adminer:latest
    container_name: sentiment_adminer
    restart: unless-stopped
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=galkaev
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.33

  # Redis Commander - إدارة Redis
  redis_commander:
    image: rediscommander/redis-commander:latest
    container_name: sentiment_redis_commander
    restart: unless-stopped
    depends_on:
      - redis
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.34

  # خدمة التنظيف التلقائي
  cleanup_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sentiment_cleanup
    restart: unless-stopped
    depends_on:
      - sentiment_api
    environment:
      - DATABASE_URL=postgresql://sentiment_user:sentiment_pass@postgres:5432/sentiment_db
      - REDIS_HOST=redis
      - CLEANUP_MODE=true
      - LOG_LEVEL=INFO
    volumes:
      - sentiment_logs:/app/logs
    networks:
      sentiment_network:
        ipv4_address: 172.20.0.35
    command: ["python", "-m", "services.cleanup_worker"]
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'

# إعدادات إضافية
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

# تطبيق إعدادات السجلات على جميع الخدمات
services:
  postgres:
    logging: *default-logging
  redis:
    logging: *default-logging
  clickhouse:
    logging: *default-logging
  kafka:
    logging: *default-logging
  zookeeper:
    logging: *default-logging
  sentiment_api:
    logging: *default-logging
  sentiment_processor:
    logging: *default-logging
  sentiment_analytics:
    logging: *default-logging
  nginx:
    logging: *default-logging
  prometheus:
    logging: *default-logging
  grafana:
    logging: *default-logging
  adminer:
    logging: *default-logging
  redis_commander:
    logging: *default-logging
  cleanup_service:
    logging: *default-logging
