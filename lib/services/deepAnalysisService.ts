import OpenAI from 'openai';
import { 
  GenerateAnalysisRequest, 
  GenerateAnalysisResponse,
  AnalysisContent,
  ContentSection,
  DataPoint
} from '@/types/deep-analysis';

// ุฅุนุฏุงุฏ OpenAI client
let openaiClient: OpenAI | null = null;

export function initializeOpenAI(apiKey: string) {
  openaiClient = new OpenAI({
    apiKey: apiKey,
    dangerouslyAllowBrowser: false // ุณูุชู ุงุณุชุฎุฏุงูู ูู ุงูุฎุงุฏู ููุท
  });
}

// ุงูุจุฑููุจุชุงุช ุงูุฃุณุงุณูุฉ ููุชุญููู
const ANALYSIS_PROMPTS = {
  fromArticle: `ุฃูุช ูุญุฑุฑ ุชุญูููู ูุญุชุฑู ูู ุตุญููุฉ ุณุจู. ุงูุฑุฃ ุงูุฎุจุฑ ุงูุชุงูู ุจุนูุงูุฉุ ุซู ูู ุจุฅูุดุงุก ุชุญููู ุนููู ูุงุณุชุฑุงุชูุฌู.

ุงููุทููุจ: ูุต ุชุญูููู ุตุญูู ููุชูุจ ุจูุบุฉ ุนุฑุจูุฉ ูุตุญู ุงุญุชุฑุงููุฉุ ููุณู ุจุนูุงููู ูููุฑุงุชุ ุจุฏูู ุฃู ุฃููุงุฏ ุฃู ุฑููุฒ ุจุฑูุฌูุฉ.

ูุฌุจ ุฃู ูุชุถูู ุงูุชุญููู:

1. **ููุฏูุฉ ุชุญููููุฉ**: ุชูููุฏ ููุถุญ ุฃูููุฉ ุงูููุถูุน ูุณูุงูู
2. **ุฎูููุฉ ุงูุญุฏุซ**: ุงูุณูุงู ุงูุชุงุฑูุฎู ูุงูุธุฑูู ุงููุญูุทุฉ
3. **ุงูุฃุซุฑ ุงููุญูู ูุงูุนุงููู**: ุงูุชุฃุซูุฑุงุช ุงููุจุงุดุฑุฉ ูุบูุฑ ุงููุจุงุดุฑุฉ
4. **ุงูุจูุงูุงุช ูุงูุฃุฑูุงู**: ุฅุญุตุงุฆูุงุช ููุคุดุฑุงุช ุฐุงุช ุตูุฉ
5. **ุงูุชุฏุงุนูุงุช ุงููุณุชูุจููุฉ**: ุงูุณููุงุฑูููุงุช ุงููุญุชููุฉ
6. **ุงูุชุญุฏูุงุช ูุงููุฑุต**: ุงูุนูุจุงุช ุงููุชููุนุฉ ูุงูุฅููุงููุงุช ุงููุชุงุญุฉ
7. **ุฎูุงุตุฉ ูุชูุตูุงุช**: ููุงุท ุฎุชุงููุฉ ูุชูุตูุงุช ุงุณุชุฑุงุชูุฌูุฉ ุนูููุฉ

ูุนุงููุฑ ุงูุฌูุฏุฉ:
- ูุบุฉ ุตุญููุฉ ุงุญุชุฑุงููุฉ ูุณูุณุฉ
- ุชูุธูู ููุทูู ุจุนูุงููู ูุฑุนูุฉ ูุงุถุญุฉ
- ุชุญููู ูุฏุนูู ุจุงูุญูุงุฆู ูุงูููุทู
- ูุชุฑุงูุญ ุจูู 1500-2500 ูููุฉ

ุงูุฎุจุฑ:
{articleContent}`,

  fromTopic: `ุฃูุช ูุญุฑุฑ ุชุญูููู ูุญุชุฑู ูู ุตุญููุฉ ุณุจู. ูู ุจุฅูุดุงุก ุชุญููู ุนููู ุญูู ุงูููุถูุน ุงููุญุฏุฏ.

ุงููุทููุจ: ูุต ุชุญูููู ุตุญูู ููุชูุจ ุจูุบุฉ ุนุฑุจูุฉ ูุตุญู ุงุญุชุฑุงููุฉุ ููุณู ุจุนูุงููู ูููุฑุงุชุ ุจุฏูู ุฃู ุฃููุงุฏ ุฃู ุฑููุฒ ุจุฑูุฌูุฉ.

ุงูููุถูุน: {topic}
ุงูุชุตููู: {category}

๐ฏ ูุฏู ุงูุฌูุฏุฉ: ุชุญููู ุดุงูู ูุญูู ุชูููู 90% ุฃู ุฃูุซุฑ

ูุฌุจ ุฃู ูุชุถูู ุงูุชุญููู ุงูุฃูุณุงู ุงูุชุงููุฉ ุจุงูุชุฑุชูุจ (ูู ูุณู ุจุนููุงู ูุงุถุญ):

## 1. ููุฏูุฉ ุดุงููุฉ (300-400 ูููุฉ)
- ุชุนุฑูู ุจุงูููุถูุน ูุฃูููุชู ุงูุงุณุชุฑุงุชูุฌูุฉ
- ุงูุณูุงู ุงูุชุงุฑูุฎู ูุงูุชุทูุฑุงุช ุงูุฃุฎูุฑุฉ
- ุฃุณุจุงุจ ุฃูููุฉ ุงูููุถูุน ูู ุงูููุช ุงูุญุงูู
- ูุธุฑุฉ ุนุงูุฉ ุนูู ูุง ุณูุชู ุชูุงููู ูู ุงูุชุญููู

## 2. ุงููุถุน ุงูุญุงูู ูุงููุงูุน ุงูุฑุงูู (400-500 ูููุฉ)
- ุชุญููู ููุตู ูููุถุน ุงูุญุงูู ูู ุงูุณุนูุฏูุฉ
- ุงูุฅุญุตุงุฆูุงุช ูุงูุฃุฑูุงู ุงูุญุฏูุซุฉ (ูุน ุฐูุฑ ุงููุตุงุฏุฑ)
- ููุงุฑูุงุช ูุญููุฉ (ุจูู ุงููุฏู ุงูุณุนูุฏูุฉ) ูุฅูููููุฉ (ุฏูู ุงูุฎููุฌ)
- ุฃูุซูุฉ ูุงูุนูุฉ ูู ุงูุณูู ุงูุณุนูุฏู

## 3. ุงูุชุญุฏูุงุช ุงูุฑุฆูุณูุฉ ูุงูุนูุจุงุช (300-400 ูููุฉ)
- ุงูุนูุจุงุช ุงูุชูููุฉ ูุงูุชุดุบูููุฉ
- ุงูุชุญุฏูุงุช ุงูุชูุธูููุฉ ูุงููุงููููุฉ
- ุงููุฎุงุทุฑ ุงูุงูุชุตุงุฏูุฉ ูุงูุงุฌุชูุงุนูุฉ
- ุงูุนูุงุฆู ุงูุซูุงููุฉ ุฃู ุงูุณููููุฉ ุฅู ูุฌุฏุช

## 4. ุงููุฑุต ูุงูุฅููุงููุงุช ุงููุชุงุญุฉ (300-400 ูููุฉ)
- ุงูุขูุงู ุงูุฅูุฌุงุจูุฉ ูุงููุฑุต ุงููุงุนุฏุฉ
- ุงูููุงุฆุฏ ุงููุชููุนุฉ ูุตูุฑุฉ ููุชูุณุทุฉ ูุทูููุฉ ุงููุฏู
- ุงูููุฒุงุช ุงูุชูุงูุณูุฉ ููุณุนูุฏูุฉ ูู ูุฐุง ุงููุฌุงู
- ุงูุงุณุชุซูุงุฑุงุช ูุงููุจุงุฏุฑุงุช ุงูุญููููุฉ ุงูุฏุงุนูุฉ

## 5. ุฏุฑุงุณุฉ ุญุงูุฉ ูููุงุฑูุงุช ุนูููุฉ (400-500 ูููุฉ)
- ูุซุงู ุชูุตููู ูุดุฑูุฉ/ูุดุฑูุน ุณุนูุฏู ูุงุฌุญ ูู ุงููุฌุงู
- ููุงุฑูุฉ ูุน ุชุฌุฑุจุฉ ุฏููุฉ ุฃุฎุฑู (ูุซู ุงูุฅูุงุฑุงุช ุฃู ุณูุบุงููุฑุฉ)
- ุงูุฏุฑูุณ ุงููุณุชูุงุฏุฉ ูู ุงูุชุฌุงุฑุจ ุงููุญููุฉ ูุงูุนุงูููุฉ
- ุฃูุถู ุงูููุงุฑุณุงุช ุงููุงุจูุฉ ููุชุทุจูู

## 6. ุงูุชุฃุซูุฑ ุนูู ุฑุคูุฉ ุงูุณุนูุฏูุฉ 2030 (300-400 ูููุฉ)
- ุงูุงุฑุชุจุงุท ุงููุจุงุดุฑ ุจุฃูุฏุงู ููุญุงูุฑ ุงูุฑุคูุฉ
- ุงููุณุงููุฉ ูู ุงูุชูููุน ุงูุงูุชุตุงุฏู ูุชูููู ุงูุงุนุชูุงุฏ ุนูู ุงูููุท
- ุงูุชุฃุซูุฑ ุนูู ุฌูุฏุฉ ุงูุญูุงุฉ ูุชูููู ุงูููุงุทููู
- ุฏูุฑ ุงููุทุงุน ุงูุฎุงุต ูุงูุดุฑุงูุงุช ุงูุงุณุชุฑุงุชูุฌูุฉ

## 7. ุงูุชุฃุซูุฑ ุนูู ุณููู ุงููุณุชููู ูุงููุฌุชูุน (300-400 ูููุฉ)
- ููู ุณูุบูุฑ ูุฐุง ุงูููุถูุน ูู ุณููู ุงูููุงุทููู ูุงููููููู
- ุงูุชุฃุซูุฑ ุนูู ุฃููุงุท ุงูุงุณุชููุงู ูุงูุญูุงุฉ ุงูููููุฉ
- ุงูุชุญุฏูุงุช ุงูุงุฌุชูุงุนูุฉ ูุงูุซูุงููุฉ ุงููุชููุนุฉ
- ุงููุฑุต ูุฎูู ูุธุงุฆู ุฌุฏูุฏุฉ ูุชุทููุฑ ุงูููุงุฑุงุช

## 8. ุฑุคูุฉ ูุณุชูุจููุฉ ูุณููุงุฑูููุงุช ูุญุชููุฉ (300-400 ูููุฉ)
- ุงูุณููุงุฑูู ุงููุชูุงุฆู: ูุงุฐุง ูู ูุฌุญุช ูู ุงูุฎุทุทุ
- ุงูุณููุงุฑูู ุงููุงูุนู: ุงูุชููุนุงุช ุงูุฃูุซุฑ ุงุญุชูุงูุงู
- ุงูุณููุงุฑูู ุงูุชุญุฐูุฑู: ุงููุฎุงุทุฑ ุงูุชู ูุฌุจ ุชุฌูุจูุง
- ุงููุคุดุฑุงุช ุงูุฑุฆูุณูุฉ ูููุงุณ ุงููุฌุงุญ

## 9. ุชูุตูุงุช ุนูููุฉ ูุฎุทุฉ ุชูููุฐูุฉ (ููุงุท ูุญุฏุฏุฉ)
### ููุญูููุฉ:
- 3-4 ุชูุตูุงุช ุชูุธูููุฉ ูุชุดุฑูุนูุฉ ูุญุฏุฏุฉ
- ูุจุงุฏุฑุงุช ุฏุนู ูุชุญููุฒ ููุชุฑุญุฉ

### ูููุทุงุน ุงูุฎุงุต:
- 3-4 ูุฑุต ุงุณุชุซูุงุฑูุฉ ูุงุถุญุฉ
- ููุงุฐุฌ ุฃุนูุงู ูุจุชูุฑุฉ ููุชุฑุญุฉ

### ููุฃูุฑุงุฏ ูุงููุฌุชูุน:
- 2-3 ูุตุงุฆุญ ุนูููุฉ ููุงุณุชูุงุฏุฉ ูู ุงูุชุทูุฑุงุช
- ุงูููุงุฑุงุช ุงููุทููุจ ุชุทููุฑูุง

## 10. ุฎุงุชูุฉ ูุฎูุงุตุฉ (200-300 ูููุฉ)
- ุชูุฎูุต ุฃูู ุงูููุงุท ุงููุทุฑูุญุฉ
- ุงูุชุฃููุฏ ุนูู ุงููุฑุต ุงูุฑุฆูุณูุฉ
- ุฏุนูุฉ ููุนูู ูุงููุดุงุฑูุฉ ุงููุนุงูุฉ
- ูุธุฑุฉ ุชูุงุคููุฉ ูุฏุฑูุณุฉ ูููุณุชูุจู

๐ ูุชุทูุจุงุช ุฅุถุงููุฉ ูุถูุงู ุงูุฌูุฏุฉ:
- ุงุณุชุฎุฏู ุฃุฑูุงู ูุฅุญุตุงุฆูุงุช ุญููููุฉ ูู ูุตุงุฏุฑ ููุซููุฉ (ุงูููุฆุฉ ุงูุนุงูุฉ ููุฅุญุตุงุกุ ูุฒุงุฑุงุชุ ุชูุงุฑูุฑ ุฏูููุฉ)
- ุงุฐูุฑ ุฃุณูุงุก ุดุฑูุงุช ุณุนูุฏูุฉ ุญููููุฉ ูุฃูุซูุฉ (ูุฑุณููุ ุฌุงูุฒุ ูููุ stcุ ุฃุฑุงูููุ ุณุงุจู)
- ุงุฑุจุท ุจูุจุงุฏุฑุงุช ุญููููุฉ (ููููุ ุงูุจุญุฑ ุงูุฃุญูุฑุ ุงููุฏูุฉุ ุฑูุดู)
- ุงุณุชุฎุฏู ุงูุชุจุงุณุงุช ููุทููุฉ ูู ูุณุคูููู ุฃู ุฎุจุฑุงุก
- ูููุน ุจูู ุงูููุฑุงุช ุงูุณุฑุฏูุฉ ูุงูููุงุฆู ุงูููุทูุฉ ูุงูุฃุฑูุงู
- ุงุฌุนู ูู ูุณู ูุชุฑุงุจุทุงู ูุน ุงูุฐู ูููู ุจุงูุณูุงุจูุฉ

ุงูุทูู ุงููุณุชูุฏู: 3000-3500 ูููุฉ`,

  fromExternal: `ุฃูุช ูุญุฑุฑ ุชุญูููู ูุญุชุฑู ูู ุตุญููุฉ ุณุจู. ุจูุงุกู ุนูู ุงููุญุชูู ูู ุงููุตุฏุฑ ุงูุฎุงุฑุฌูุ ูู ุจุฅูุดุงุก ุชุญููู ุนููู.

ุงููุทููุจ: ูุต ุชุญูููู ุตุญูู ููุชูุจ ุจูุบุฉ ุนุฑุจูุฉ ูุตุญู ุงุญุชุฑุงููุฉุ ููุณู ุจุนูุงููู ูููุฑุงุชุ ุจุฏูู ุฃู ุฃููุงุฏ ุฃู ุฑููุฒ ุจุฑูุฌูุฉ.

ุงููุตุฏุฑ: {externalUrl}
ุงููุญุชูู:
{externalContent}

ูู ุจุฅูุดุงุก ุชุญููู ูุชุถูู:
1. **ุชูุฎูุต ุชุญูููู**: ุนุฑุถ ุงูููุงุท ุงูุฑุฆูุณูุฉ ุจุดูู ููุฏู
2. **ุงูุฃูููุฉ ูุงูุชุฃุซูุฑ**: ุชุญููู ุงูุฃุจุนุงุฏ ูุงูุชุฏุงุนูุงุช
3. **ุงูุณูุงู ุงููุญูู**: ุฑุจุท ุงูููุถูุน ุจุงููุงูุน ุงูุณุนูุฏู/ุงูุนุฑุจู
4. **ูุฌูุงุช ูุธุฑ ูุชุนุฏุฏุฉ**: ุนุฑุถ ุฒูุงูุง ูุฎุชููุฉ ููููุถูุน
5. **ุฏุฑูุณ ูุณุชูุงุฏุฉ**: ุงุณุชุฎูุงุต ุงูุนุจุฑ ูุงูููุงุฆุฏ
6. **ุฎุทูุงุช ูุณุชูุจููุฉ**: ุชูุตูุงุช ูุฅุฌุฑุงุกุงุช ููุชุฑุญุฉ

ุชุฃูุฏ ูู:
- ุนุฏู ูุณุฎ ุงููุญุชูู ุญุฑููุงู
- ุฅุถุงูุฉ ูููุฉ ุชุญููููุฉ ุญููููุฉ
- ุงูุญูุงุธ ุนูู ุงูููุถูุนูุฉ ูุงูููููุฉ
- ูุชุงุจุฉ ูุต ุตุญูู ุฃุตูู ููุชููุฒ`
};

// ุฏุงูุฉ ุชูููุฏ ุงูุชุญููู
export async function generateDeepAnalysis(
  request: GenerateAnalysisRequest
): Promise<GenerateAnalysisResponse> {
  if (!openaiClient) {
    return {
      success: false,
      error: 'OpenAI client not initialized'
    };
  }

  try {
    // ุจูุงุก ุงูุจุฑููุจุช ุญุณุจ ููุน ุงููุตุฏุฑ
    let prompt = '';
    
    switch (request.sourceType) {
      case 'article':
        prompt = ANALYSIS_PROMPTS.fromArticle.replace('{articleContent}', request.sourceId || '');
        break;
      case 'topic':
        prompt = ANALYSIS_PROMPTS.fromTopic
          .replace('{topic}', request.topic || '')
          .replace('{category}', request.category || '');
        break;
      case 'external':
        prompt = ANALYSIS_PROMPTS.fromExternal
          .replace('{externalUrl}', request.externalUrl || '')
          .replace('{externalContent}', ''); // ุณูุชู ุฌูุจ ุงููุญุชูู
        break;
    }

    // ุฅุถุงูุฉ ุชุนูููุงุช ุฎุงุตุฉ ุฅู ูุฌุฏุช
    if (request.customPrompt) {
      prompt += `\n\nุชุนูููุงุช ุฅุถุงููุฉ:\n${request.customPrompt}`;
    }

    // ุฅุถุงูุฉ ุชุนูููุงุช ุงูุทูู
    if (request.length) {
      const lengthInstructions = {
        short: 'ุงุฌุนู ุงูุชุญููู ูุฎุชุตุฑุงู (800-1200 ูููุฉ)',
        medium: 'ุงุฌุนู ุงูุชุญููู ูุชูุณุท ุงูุทูู (1500-2000 ูููุฉ)',
        long: 'ุงุฌุนู ุงูุชุญููู ููุตูุงู (2500-3500 ูููุฉ)'
      };
      prompt += `\n\n${lengthInstructions[request.length]}`;
    }

    // ุงุณุชุฏุนุงุก OpenAI
    const completion = await openaiClient.chat.completions.create({
      model: 'gpt-4o',
      messages: [
        {
          role: 'system',
          content: `ุฃูุช ูุญุฑุฑ ุชุญูููู ูุญุชุฑู ูู ุตุญููุฉ ุณุจู ุงูุฅุฎุจุงุฑูุฉ. 
          ูููุชู: ูุชุงุจุฉ ุชุญููู ุนููู ุจูุบุฉ ุนุฑุจูุฉ ุตุญููุฉ ุงุญุชุฑุงููุฉ.
          
          ุงูุชูุณูู ุงููุทููุจ:
          - ูุต ุชุญุฑูุฑู ููุณู ุจุนูุงููู ูููุฑุงุช
          - ุจุฏูู ุฃู ุฃููุงุฏ ุจุฑูุฌูุฉ ุฃู ุฑููุฒ JSON
          - ููุณู ุฅูู: ููุฏูุฉุ ูุญุงูุฑ ุชุญููููุฉุ ููุงุท ุฎุชุงููุฉุ ูุชูุตูุงุช
          - ุงุณุชุฎุฏู ุงูุนูุงููู ุงููุฑุนูุฉ ูุชูุธูู ุงููุญุชูู
          
          ูุนุงููุฑ ุงูุฌูุฏุฉ ุงููุทููุจุฉ:
          - ุนูู ุงูุฃูู 7 ุฃูุณุงู ุฑุฆูุณูุฉ ุจุนูุงููู ูุงุถุญุฉ
          - ูู ูุณู ูุญุชูู ุนูู 200-400 ูููุฉ
          - ุชุถููู ุฃุฑูุงู ูุฅุญุตุงุฆูุงุช ุญููููุฉ (5 ููุงุท ุจูุงูุงุช ุนูู ุงูุฃูู)
          - ุชูุฏูู 5-7 ุชูุตูุงุช ุนูููุฉ ูุงุจูุฉ ููุชุทุจูู
          - ุงุณุชุฎูุงุต 5-7 ุฑุคู ุฑุฆูุณูุฉ ูู ุงูุชุญููู
          - ุงุณุชุฎุฏุงู ููุงุฆู ููุทูุฉ ูุชุฑููู ุนูุฏ ุงูุญุงุฌุฉ
          - ุชูููุน ุงูุฃุณููุจ ุจูู ุงูุณุฑุฏ ูุงูุชุญููู ูุงูููุงุฑูุฉ
          
          ูุฌุจ ุฃู ูููู ุงูุฅุฎุฑุงุฌ ุจุตูุบุฉ JSON ุชุญุชูู ุนูู:
          {
            "title": "ุนููุงู ุงูุชุญููู",
            "summary": "ููุฎุต ุชูููุฐู (100-150 ูููุฉ)",
            "sections": [
              {
                "title": "ุนููุงู ุงููุณู",
                "content": "ูุญุชูู ุงููุณู ููุต ุตุญูู ููุณู (200-400 ูููุฉ)"
              }
            ],
            "recommendations": ["ุชูุตูุฉ ุนูููุฉ 1", "ุชูุตูุฉ ุนูููุฉ 2", "..."],
            "keyInsights": ["ุฑุคูุฉ ุฑุฆูุณูุฉ 1", "ุฑุคูุฉ ุฑุฆูุณูุฉ 2", "..."],
            "dataPoints": [
              {
                "label": "ุงุณู ุงููุคุดุฑ",
                "value": "ุงููููุฉ",
                "unit": "ุงููุญุฏุฉ",
                "description": "ูุตู ูุฎุชุตุฑ"
              }
            ]
          }`
        },
        {
          role: 'user',
          content: prompt
        }
      ],
      temperature: 0.8, // ุฑูุน ุฏุฑุฌุฉ ุงูุฅุจุฏุงุน
      max_tokens: 4000,
      response_format: { type: "json_object" }
    });

    const response = completion.choices[0].message.content;
    if (!response) {
      throw new Error('No response from OpenAI');
    }

    // ุชุญููู ุงูุงุณุชุฌุงุจุฉ
    const parsedResponse = JSON.parse(response);
    
    // ุงูุชุญูู ูู ุฃู ุงูุงุณุชุฌุงุจุฉ ููุณุช ูุงุฑุบุฉ
    if (typeof parsedResponse === 'object' && Object.keys(parsedResponse).length === 0) {
      throw new Error('ุฑุฏ ูุงุฑุบ ูู GPT - ุงูุฑุฌุงุก ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู');
    }
    
    // ุงูุชุญูู ูู ูุฌูุฏ ุงููุญุชูู ุงูุฃุณุงุณู
    if (!parsedResponse.title || !parsedResponse.sections || parsedResponse.sections.length === 0) {
      throw new Error('ุงูุฑุฏ ูู GPT ูุง ูุญุชูู ุนูู ูุญุชูู ูุงูู ููุชุญููู');
    }
    
    // ุจูุงุก ูุญุชูู ุงูุชุญููู
    const content = parseAnalysisResponse(parsedResponse);
    
    // ุญุณุงุจ ุฌูุฏุฉ ุงููุญุชูู
    const qualityScore = calculateQualityScore(content);
    
    // ุญุณุงุจ ููุช ุงููุฑุงุกุฉ (250 ูููุฉ ูู ุงูุฏูููุฉ)
    // ุญุณุงุจ ูุฌููุน ุงููููุงุช ูู ุฌููุน ุงูุฃูุณุงู
    const totalWords = content.sections.reduce((total, section) => {
      return total + countWords(section.content);
    }, 0);
    const estimatedReadingTime = Math.ceil(totalWords / 250);

    return {
      success: true,
      analysis: {
        title: parsedResponse.title,
        summary: parsedResponse.summary,
        content: content,
        qualityScore: qualityScore,
        estimatedReadingTime: estimatedReadingTime
      },
      tokensUsed: completion.usage?.total_tokens,
      cost: calculateCost(completion.usage?.total_tokens || 0)
    };

  } catch (error) {
    console.error('Error generating analysis:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error occurred'
    };
  }
}

// ุฏุงูุฉ ุชุญููู ุงุณุชุฌุงุจุฉ GPT ูุชุญููููุง ููุญุชูู ููุธู
function parseAnalysisResponse(response: any): AnalysisContent {
  const sections: ContentSection[] = [];
  const dataPoints: DataPoint[] = [];
  
  // ุงุณุชุฎุฑุงุฌ ุงูุฃูุณุงู
  if (response.sections && Array.isArray(response.sections)) {
    response.sections.forEach((section: any, index: number) => {
      sections.push({
        id: `section-${index + 1}`,
        title: section.title,
        content: section.content,
        order: index + 1,
        type: section.type || 'text',
        metadata: section.metadata || {}
      });
    });
  }

  // ุงุณุชุฎุฑุงุฌ ููุงุท ุงูุจูุงูุงุช
  if (response.dataPoints && Array.isArray(response.dataPoints)) {
    response.dataPoints.forEach((point: any) => {
      dataPoints.push({
        label: point.label,
        value: point.value,
        unit: point.unit,
        trend: point.trend,
        description: point.description
      });
    });
  }

  // ุจูุงุก ุฌุฏูู ุงููุญุชููุงุช
  const tableOfContents = sections.map(section => ({
    id: `toc-${section.id}`,
    title: section.title,
    level: 1,
    sectionId: section.id
  }));

  return {
    sections,
    tableOfContents,
    recommendations: response.recommendations || [],
    keyInsights: response.keyInsights || [],
    dataPoints
  };
}

// ุฏุงูุฉ ุญุณุงุจ ุฌูุฏุฉ ุงููุญุชูู
function calculateQualityScore(content: AnalysisContent): number {
  let score = 0;
  
  // 1. ูุฌูุฏ ุฃูุณุงู ูุชููุนูุง (15%)
  if (content.sections.length >= 10) {
    score += 15;
  } else if (content.sections.length >= 8) {
    score += 12;
  } else if (content.sections.length >= 6) {
    score += 9;
  } else if (content.sections.length >= 4) {
    score += 6;
  } else if (content.sections.length > 0) {
    score += 3;
  }
  
  // 2. ุทูู ุงููุญุชูู ุงูุฅุฌูุงูู (25%)
  const totalWords = content.sections.reduce((total, section) => {
    return total + countWords(section.content);
  }, 0);
  
  if (totalWords >= 3000) {
    score += 25;
  } else if (totalWords >= 2500) {
    score += 20;
  } else if (totalWords >= 2000) {
    score += 15;
  } else if (totalWords >= 1500) {
    score += 10;
  } else if (totalWords >= 1000) {
    score += 5;
  }
  
  // 3. ูุฌูุฏ ุนูุงููู ููุธูุฉ (15%)
  const hasWellStructuredTitles = content.sections.every(s => 
    s.title && s.title.length > 5 && !s.title.includes('undefined')
  );
  const hasNumberedSections = content.sections.some(s => 
    /^\d+\./.test(s.title) || /^##/.test(s.title)
  );
  
  if (hasWellStructuredTitles && hasNumberedSections) {
    score += 15;
  } else if (hasWellStructuredTitles) {
    score += 10;
  } else {
    score += 5;
  }
  
  // 4. ูุฌูุฏ ุจูุงูุงุช ูุฅุญุตุงุฆูุงุช (10%)
  if (content.dataPoints && content.dataPoints.length >= 7) {
    score += 10;
  } else if (content.dataPoints && content.dataPoints.length >= 5) {
    score += 8;
  } else if (content.dataPoints && content.dataPoints.length >= 3) {
    score += 5;
  } else if (content.dataPoints && content.dataPoints.length > 0) {
    score += 3;
  }
  
  // 5. ูุฌูุฏ ุชูุตูุงุช ุนูููุฉ (10%)
  if (content.recommendations && content.recommendations.length >= 8) {
    score += 10;
  } else if (content.recommendations && content.recommendations.length >= 6) {
    score += 8;
  } else if (content.recommendations && content.recommendations.length >= 4) {
    score += 5;
  } else if (content.recommendations && content.recommendations.length > 0) {
    score += 3;
  }
  
  // 6. ูุฌูุฏ ุฑุคู ุฑุฆูุณูุฉ (10%)
  if (content.keyInsights && content.keyInsights.length >= 7) {
    score += 10;
  } else if (content.keyInsights && content.keyInsights.length >= 5) {
    score += 8;
  } else if (content.keyInsights && content.keyInsights.length >= 3) {
    score += 5;
  } else if (content.keyInsights && content.keyInsights.length > 0) {
    score += 3;
  }
  
  // 7. ุชููุน ูุซุฑุงุก ุงููุญุชูู (15%)
  let contentRichness = 0;
  
  // ุชุญูู ูู ูุฌูุฏ ุฃูุณุงู ุทูููุฉ ูููุตูุฉ
  const hasDetailedSections = content.sections.filter(s => countWords(s.content) >= 300).length >= 5;
  if (hasDetailedSections) contentRichness += 5;
  
  // ุชุญูู ูู ูุฌูุฏ ููุงุฆู ูุชูุณูู
  const hasLists = content.sections.some(s => 
    s.content.includes('โข') || s.content.includes('-') || s.content.includes('1.')
  );
  if (hasLists) contentRichness += 3;
  
  // ุชุญูู ูู ูุฌูุฏ ุฃุฑูุงู ูุฅุญุตุงุฆูุงุช ูู ุงููุต
  const hasNumbers = content.sections.filter(s => 
    /\d+%|\d+\s*(ููููู|ูููุงุฑ|ุฃูู)|\d{4}/.test(s.content)
  ).length >= 3;
  if (hasNumbers) contentRichness += 4;
  
  // ุชุญูู ูู ุฐูุฑ ุดุฑูุงุช ุฃู ูุจุงุฏุฑุงุช ุณุนูุฏูุฉ
  const hasSaudiContext = content.sections.some(s => 
    /(ูุฑุณูู|ุฌุงูุฒ|ููู|stc|ุฃุฑุงููู|ุณุงุจู|ูููู|ุงูุจุญุฑ ุงูุฃุญูุฑ|ุงููุฏูุฉ|ุฑูุดู|ุฑุคูุฉ 2030)/i.test(s.content)
  );
  if (hasSaudiContext) contentRichness += 3;
  
  score += contentRichness;
  
  return Math.min(score, 100); // ุงูุชุฃูุฏ ูู ุนุฏู ุชุฌุงูุฒ 100
}

// ุฏุงูุฉ ุญุณุงุจ ุนุฏุฏ ุงููููุงุช
function countWords(text: string): number {
  // ุฅุฒุงูุฉ HTML tags ุฅู ูุฌุฏุช
  const cleanText = text.replace(/<[^>]*>/g, '');
  // ุญุณุงุจ ุงููููุงุช ุงูุนุฑุจูุฉ ูุงูุฅูุฌููุฒูุฉ
  const words = cleanText.match(/[\u0600-\u06FF]+|\w+/g);
  return words ? words.length : 0;
}

// ุฏุงูุฉ ุญุณุงุจ ุงูุชูููุฉ (ุชูุฏูุฑูุฉ)
function calculateCost(tokens: number): number {
  // GPT-4 pricing: $0.03 per 1K input tokens, $0.06 per 1K output tokens
  // ููุชุฑุถ ูุชูุณุท 50/50 ููุฅุฏุฎุงู ูุงูุฅุฎุฑุงุฌ
  const avgPricePerToken = 0.045 / 1000;
  return Math.round(tokens * avgPricePerToken * 100) / 100;
}

// ุฏุงูุฉ ุชุญุณูู ุชุญููู ููุฌูุฏ
export async function improveAnalysis(
  currentAnalysis: string,
  improvementType: 'expand' | 'summarize' | 'update',
  additionalContext?: string
): Promise<GenerateAnalysisResponse> {
  if (!openaiClient) {
    return {
      success: false,
      error: 'OpenAI client not initialized'
    };
  }

  try {
    let prompt = '';
    
    switch (improvementType) {
      case 'expand':
        prompt = `ูู ุจุชูุณูุน ุงูุชุญููู ุงูุชุงูู ุจุฅุถุงูุฉ ุงููุฒูุฏ ูู ุงูุชูุงุตูู ูุงูุฃูุซูุฉ:\n\n${currentAnalysis}`;
        break;
      case 'summarize':
        prompt = `ูู ุจุชูุฎูุต ุงูุชุญููู ุงูุชุงูู ูุน ุงูุญูุงุธ ุนูู ุงูููุงุท ุงูุฑุฆูุณูุฉ:\n\n${currentAnalysis}`;
        break;
      case 'update':
        prompt = `ูู ุจุชุญุฏูุซ ุงูุชุญููู ุงูุชุงูู ุจูุงุกู ุนูู ุงููุนูููุงุช ุงูุฌุฏูุฏุฉ:\n\nุงูุชุญููู ุงูุญุงูู:\n${currentAnalysis}\n\nุงููุนูููุงุช ุงูุฌุฏูุฏุฉ:\n${additionalContext}`;
        break;
    }

    const completion = await openaiClient.chat.completions.create({
      model: 'gpt-4o',
      messages: [
        {
          role: 'system',
          content: 'ุฃูุช ูุญุฑุฑ ุชุญูููู ูุญุชุฑู. ูู ุจุชุญุณูู ุงูุชุญููู ุงูููุฏู ุญุณุจ ุงูุชุนูููุงุช.'
        },
        {
          role: 'user',
          content: prompt
        }
      ],
      temperature: 0.7,
      max_tokens: 3000
    });

    const improvedContent = completion.choices[0].message.content || '';
    
    return {
      success: true,
      analysis: {
        title: 'ุชุญููู ูุญุณูู',
        summary: 'ุชู ุชุญุณูู ูุฐุง ุงูุชุญููู ุจุงุณุชุฎุฏุงู ุงูุฐูุงุก ุงูุงุตุทูุงุนู',
        content: parseAnalysisResponse({ content: improvedContent, sections: [] }),
        qualityScore: 0.8,
        estimatedReadingTime: Math.ceil(countWords(improvedContent) / 250)
      },
      tokensUsed: completion.usage?.total_tokens,
      cost: calculateCost(completion.usage?.total_tokens || 0)
    };

  } catch (error) {
    console.error('Error improving analysis:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error occurred'
    };
  }
}

// ุฏุงูุฉ ุชูููู ุฌูุฏุฉ ุชุญููู ููุฌูุฏ
export async function evaluateAnalysisQuality(
  analysis: string
): Promise<{ score: number; feedback: string[] }> {
  if (!openaiClient) {
    return { score: 0, feedback: ['OpenAI client not initialized'] };
  }

  try {
    const completion = await openaiClient.chat.completions.create({
      model: 'gpt-4o',
      messages: [
        {
          role: 'system',
          content: 'ุฃูุช ุฎุจูุฑ ูู ุชูููู ุฌูุฏุฉ ุงูุชุญูููุงุช ุงูุตุญููุฉ. ูู ุจุชูููู ุงูุชุญููู ุงูููุฏู ูุฅุนุทุงุก ููุงุท ุงูููุฉ ูุงูุถุนู. ูุฌุจ ุฃู ูููู ุงูุฅุฎุฑุงุฌ ุจุตูุบุฉ JSON ุตุญูุญุฉ.'
        },
        {
          role: 'user',
          content: `ูู ุจุชูููู ุฌูุฏุฉ ุงูุชุญููู ุงูุชุงูู ุนูู ูููุงุณ ูู 0 ุฅูู 100ุ ููุฏู ููุงุญุธุงุช ุชูุตูููุฉ:

${analysis}`
        }
      ],
      temperature: 0.3,
      max_tokens: 1000,
      response_format: { type: "json_object" }
    });

    const evaluation = JSON.parse(completion.choices[0].message.content || '{}');
    
    return {
      score: evaluation.score / 100 || 0,
      feedback: evaluation.feedback || []
    };

  } catch (error) {
    console.error('Error evaluating analysis:', error);
    return { score: 0, feedback: ['Error during evaluation'] };
  }
}
