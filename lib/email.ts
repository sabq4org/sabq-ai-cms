import nodemailer from 'nodemailer';
import { Transporter } from 'nodemailer';
import { emailConfig } from '@/config/email.config';
import { getCorrectEmailConfig } from './email-config-fix';

// ุฅูุดุงุก transporter ููุจุฑูุฏ ุงูุฅููุชุฑููู
let transporter: Transporter | null = null;

// ุชููุฆุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
export function initializeEmail() {
  // ุชุฎุทู ุงูุชููุฆุฉ ุฃุซูุงุก ุงูุจูุงุก ุฃู ุฅุฐุง ูุงู ูุทููุจุงู
  if (process.env.SKIP_EMAIL_VERIFICATION === 'true' || process.env.NODE_ENV === 'test') {
    console.log('โญ๏ธ  ุชุฎุทู ุชููุฆุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู');
    return;
  }

  try {
    // ุงุณุชุฎุฏุงู ุงูุฅุนุฏุงุฏุงุช ุงููุตุญุญุฉ
    const smtpConfig = getCorrectEmailConfig();

    transporter = nodemailer.createTransport(smtpConfig as any);

    // ุงูุชุญูู ูู ุงูุงุชุตุงู
    if (transporter) {
      transporter.verify((error) => {
        if (error) {
          console.error('โ ุฎุทุฃ ูู ุฅุนุฏุงุฏุงุช ุงูุจุฑูุฏ ุงูุฅููุชุฑููู:', error);
          console.error('๐ง ุงูุฅุนุฏุงุฏุงุช ุงููุณุชุฎุฏูุฉ:', {
            host: smtpConfig.host,
            port: smtpConfig.port,
            secure: smtpConfig.secure,
            user: smtpConfig.auth.user,
          });
        } else {
          console.log('โ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุฌุงูุฒ ููุฅุฑุณุงู');
          console.log(`๐ง ุงูุจุฑูุฏ ุงููุณุชุฎุฏู: ${smtpConfig.auth.user}`);
          console.log(`๐ฌ ุงูุฎุงุฏู: ${smtpConfig.host}:${smtpConfig.port}`);
        }
      });
    }
  } catch (error) {
    console.error('โ ูุดู ูู ุชููุฆุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู:', error);
  }
}

// ููุงูุจ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
const emailTemplates = {
  verification: (name: string, code: string) => ({
    subject: 'ุชุฃููุฏ ุจุฑูุฏู ุงูุฅููุชุฑููู - ุณุจู ุงูุฐููุฉ',
    html: `
      <div style="direction: rtl; font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <div style="text-align: center; margin-bottom: 30px;">
          <h1 style="color: #3B82F6;">ุณุจู ุงูุฐููุฉ</h1>
        </div>
        
        <h2 style="color: #1F2937;">ูุฑุญุจูุง ${name} ๐</h2>
        
        <p style="color: #4B5563; line-height: 1.8;">
          ูุดูุฑู ุนูู ุงูุถูุงูู ุฅูู ููุตุฉ ุณุจู ุงูุฐููุฉ โ<br>
          ูุฑุฌู ุชุฃููุฏ ุนููุงู ุจุฑูุฏู ุงูุฅููุชุฑููู ุจุงุณุชุฎุฏุงู ุงูุฑูุฒ ุงูุชุงูู:
        </p>
        
        <div style="background: #F3F4F6; border: 2px solid #E5E7EB; border-radius: 10px; padding: 20px; text-align: center; margin: 30px 0;">
          <h1 style="color: #3B82F6; font-size: 36px; letter-spacing: 5px; margin: 0;">${code}</h1>
          <p style="color: #6B7280; margin-top: 10px;">ุตุงูุญ ููุฏุฉ 10 ุฏูุงุฆู</p>
        </div>
        
        <p style="color: #6B7280; font-size: 14px;">
          ุฅุฐุง ูู ุชูู ุจุฅูุดุงุก ุญุณุงุจุ ุชุฌุงูู ูุฐู ุงูุฑุณุงูุฉ.
        </p>
        
        <hr style="border: none; border-top: 1px solid #E5E7EB; margin: 30px 0;">
        
        <p style="color: #9CA3AF; font-size: 12px; text-align: center;">
          ุชุญูุงุชูุงุ<br>
          ูุฑูู ุณุจู ุงูุฐูู
        </p>
      </div>
    `
  }),

  welcome: (name: string) => ({
    subject: 'ุฃููุงู ุจู ูู ุณุจู ุงูุฐููุฉ ๐',
    html: `
      <div style="direction: rtl; font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <div style="text-align: center; margin-bottom: 30px;">
          <h1 style="color: #3B82F6;">ุณุจู ุงูุฐููุฉ</h1>
        </div>
        
        <h2 style="color: #1F2937;">ุฃููุงู ุจู ูุง ${name}! ๐</h2>
        
        <p style="color: #4B5563; line-height: 1.8;">
          ุชู ุชูุนูู ุนุถููุชู ุจูุฌุงุญ.<br>
          ุฃูุช ุงูุขู ุถูู ููุตุฉ ุฅุนูุงููุฉ ุฐููุฉ ุชููุฏูู ูุญุชูู ูุตูู ุญุณุจ ุงูุชูุงูุงุชู ูุชูุงุนูู.
        </p>
        
        <div style="text-align: center; margin: 30px 0;">
          <a href="${process.env.NEXT_PUBLIC_APP_URL}/newspaper" 
             style="background: #3B82F6; color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; display: inline-block;">
            ุงุจุฏุฃ ุฑุญูุชู ุงูุขู ๐
          </a>
        </div>
        
        <div style="background: #F9FAFB; border-radius: 10px; padding: 20px; margin: 20px 0;">
          <h3 style="color: #1F2937; margin-top: 0;">ูุงุฐุง ููููู ูุนููุ</h3>
          <ul style="color: #4B5563; line-height: 1.8;">
            <li>๐ฐ ุชุงุจุน ุฃูู ุงูุฃุฎุจุงุฑ ุงููุฎุตุตุฉ ูู</li>
            <li>๐ ุงุญุตู ุนูู ููุงุท ุงูููุงุก ูุน ูู ุชูุงุนู</li>
            <li>๐ฏ ุฎุตุต ุงูุชูุงูุงุชู ููุญุตูู ุนูู ูุญุชูู ุฃูุถู</li>
            <li>๐ฌ ุดุงุฑู ูุชูุงุนู ูุน ุงููุฌุชูุน</li>
          </ul>
        </div>
        
        <hr style="border: none; border-top: 1px solid #E5E7EB; margin: 30px 0;">
        
        <p style="color: #9CA3AF; font-size: 12px; text-align: center;">
          ูุฑูู ุณุจู ุงูุฐูู โ๏ธ
        </p>
      </div>
    `
  }),

  passwordReset: (name: string, resetLink: string) => ({
    subject: 'ุงุณุชุฑุฌุงุน ูููุฉ ุงููุฑูุฑ - ุณุจู ุงูุฐููุฉ',
    html: `
      <div style="direction: rtl; font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <div style="text-align: center; margin-bottom: 30px;">
          <h1 style="color: #3B82F6;">ุณุจู ุงูุฐููุฉ</h1>
        </div>
        
        <h2 style="color: #1F2937;">ุงุณุชุฑุฌุงุน ูููุฉ ุงููุฑูุฑ</h2>
        
        <p style="color: #4B5563; line-height: 1.8;">
          ูุฑุญุจูุง ${name}ุ<br>
          ุชููููุง ุทูุจูุง ูุฅุนุงุฏุฉ ุชุนููู ูููุฉ ุงููุฑูุฑ ุงูุฎุงุตุฉ ุจู.
        </p>
        
        <div style="text-align: center; margin: 30px 0;">
          <a href="${resetLink}" 
             style="background: #EF4444; color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; display: inline-block;">
            ุฅุนุงุฏุฉ ุชุนููู ูููุฉ ุงููุฑูุฑ
          </a>
        </div>
        
        <p style="color: #6B7280; font-size: 14px;">
          ูุฐุง ุงูุฑุงุจุท ุตุงูุญ ููุฏุฉ ุณุงุนุฉ ูุงุญุฏุฉ ููุท.<br>
          ุฅุฐุง ูู ุชุทูุจ ุฅุนุงุฏุฉ ุชุนููู ูููุฉ ุงููุฑูุฑุ ุชุฌุงูู ูุฐู ุงูุฑุณุงูุฉ.
        </p>
        
        <hr style="border: none; border-top: 1px solid #E5E7EB; margin: 30px 0;">
        
        <p style="color: #9CA3AF; font-size: 12px; text-align: center;">
          ุชุญูุงุชูุงุ<br>
          ูุฑูู ุณุจู ุงูุฐูู
        </p>
      </div>
    `
  }),

  twoFactorCode: (code: string) => ({
    subject: 'ุฑูุฒ ุงูุชุญูู ุงูุซูุงุฆู - ุณุจู ุงูุฐููุฉ',
    html: `
      <div style="direction: rtl; font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
        <div style="text-align: center; margin-bottom: 30px;">
          <h1 style="color: #3B82F6;">ุณุจู ุงูุฐููุฉ</h1>
        </div>
        
        <h2 style="color: #1F2937;">ุฑูุฒ ุงูุชุญูู ุงูุซูุงุฆู ๐</h2>
        
        <p style="color: #4B5563; line-height: 1.8;">
          ุงุณุชุฎุฏู ุงูุฑูุฒ ุงูุชุงูู ูุฅููุงู ุชุณุฌูู ุงูุฏุฎูู:
        </p>
        
        <div style="background: #FEF3C7; border: 2px solid #FDE68A; border-radius: 10px; padding: 20px; text-align: center; margin: 30px 0;">
          <h1 style="color: #92400E; font-size: 36px; letter-spacing: 5px; margin: 0;">${code}</h1>
          <p style="color: #B45309; margin-top: 10px;">ุตุงูุญ ููุฏุฉ 10 ุฏูุงุฆู ููุท</p>
        </div>
        
        <p style="color: #6B7280; font-size: 14px;">
          ูู ุชุทูุจ ูุฐุง ุงูุฑูุฒุ ูุฏ ูุญุงูู ุดุฎุต ุขุฎุฑ ุงููุตูู ุฅูู ุญุณุงุจู.<br>
          ููุฑุฌู ุชุบููุฑ ูููุฉ ุงููุฑูุฑ ููุฑูุง.
        </p>
        
        <hr style="border: none; border-top: 1px solid #E5E7EB; margin: 30px 0;">
        
        <p style="color: #9CA3AF; font-size: 12px; text-align: center;">
          ุชุญูุงุชูุงุ<br>
          ูุฑูู ุณุจู ุงูุฐูู
        </p>
      </div>
    `
  })
};

// ุฅุฑุณุงู ุจุฑูุฏ ุงูุชุญูู
export async function sendVerificationEmail(to: string, name: string, code: string) {
  // ุฅุนุงุฏุฉ ุชููุฆุฉ ุงูุจุฑูุฏ ุฅุฐุง ูู ููู ูููุฃ
  if (!transporter) {
    console.log('๐ ุฅุนุงุฏุฉ ุชููุฆุฉ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู...');
    initializeEmail();
    // ุงูุชุธุงุฑ ููููุงู ููุชููุฆุฉ
    await new Promise(resolve => setTimeout(resolve, 1000));
  }

  if (!transporter) {
    console.error('โ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุบูุฑ ูููุฃ');
    return false;
  }

  try {
    const template = emailTemplates.verification(name, code);
    const fromEmail = process.env.SMTP_USER || emailConfig.smtp.auth.user;
    
    console.log(`๐ง ูุญุงููุฉ ุฅุฑุณุงู ุจุฑูุฏ ุงูุชุญูู ุฅูู ${to} ุจุฑูุฒ ${code}`);
    
    const info = await transporter.sendMail({
      from: `"ุตุญููุฉ ุณุจู ุงูุฅููุชุฑูููุฉ" <${fromEmail}>`,
      to,
      subject: template.subject,
      html: template.html,
    });
    
    console.log(`โ ุชู ุฅุฑุณุงู ุจุฑูุฏ ุงูุชุญูู ุฅูู ${to}`);
    console.log(`๐ฌ ูุนุฑู ุงูุฑุณุงูุฉ: ${info.messageId}`);
    console.log(`๐จ ุงูุฑุฏ ูู ุงูุฎุงุฏู: ${info.response}`);
    
    return true;
  } catch (error: any) {
    console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุจุฑูุฏ:', error);
    console.error('๐ง ุชูุงุตูู ุงูุฎุทุฃ:', {
      code: error.code,
      command: error.command,
      response: error.response,
      responseCode: error.responseCode,
    });
    
    // ูู ุญุงูุฉ ุงููุดูุ ุนุฑุถ ุงูุฑูุฒ ูู ุงููููุณูู ููุชุทููุฑ
    if (process.env.NODE_ENV === 'development' || process.env.EMAIL_DEBUG === 'true') {
      console.log(`๐ ุฑูุฒ ุงูุชุญูู ูููุณุชุฎุฏู ${to}: ${code}`);
    }
    
    return false;
  }
}

// ุฅุฑุณุงู ุจุฑูุฏ ุงูุชุฑุญูุจ
export async function sendWelcomeEmail(to: string, name: string) {
  if (!transporter) {
    console.error('โ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุบูุฑ ูููุฃ');
    return false;
  }

  try {
    const template = emailTemplates.welcome(name);
    await transporter.sendMail({
      from: `"ุณุจู ุงูุฐููุฉ" <${process.env.SMTP_USER}>`,
      to,
      subject: template.subject,
      html: template.html,
    });
    
    console.log(`โ ุชู ุฅุฑุณุงู ุจุฑูุฏ ุงูุชุฑุญูุจ ุฅูู ${to}`);
    return true;
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุจุฑูุฏ:', error);
    return false;
  }
}

// ุฅุฑุณุงู ุจุฑูุฏ ุงุณุชุฑุฌุงุน ูููุฉ ุงููุฑูุฑ
export async function sendPasswordResetEmail(to: string, name: string, resetToken: string) {
  if (!transporter) {
    console.error('โ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุบูุฑ ูููุฃ');
    return false;
  }

  try {
    const resetLink = `${process.env.NEXT_PUBLIC_APP_URL}/reset-password?token=${resetToken}`;
    const template = emailTemplates.passwordReset(name, resetLink);
    
    await transporter.sendMail({
      from: `"ุณุจู ุงูุฐููุฉ" <${process.env.SMTP_USER}>`,
      to,
      subject: template.subject,
      html: template.html,
    });
    
    console.log(`โ ุชู ุฅุฑุณุงู ุจุฑูุฏ ุงุณุชุฑุฌุงุน ูููุฉ ุงููุฑูุฑ ุฅูู ${to}`);
    return true;
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุจุฑูุฏ:', error);
    return false;
  }
}

// ุฅุฑุณุงู ุฑูุฒ ุงูุชุญูู ุงูุซูุงุฆู
export async function sendTwoFactorCode(to: string, code: string) {
  if (!transporter) {
    console.error('โ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุบูุฑ ูููุฃ');
    return false;
  }

  try {
    const template = emailTemplates.twoFactorCode(code);
    await transporter.sendMail({
      from: `"ุณุจู ุงูุฐููุฉ" <${process.env.SMTP_USER}>`,
      to,
      subject: template.subject,
      html: template.html,
    });
    
    console.log(`โ ุชู ุฅุฑุณุงู ุฑูุฒ ุงูุชุญูู ุงูุซูุงุฆู ุฅูู ${to}`);
    return true;
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุจุฑูุฏ:', error);
    return false;
  }
}

// ุชูููุฏ ุฑูุฒ ุชุญูู ุนุดูุงุฆู
export function generateVerificationCode(): string {
  return Math.floor(100000 + Math.random() * 900000).toString();
}

// ุชููุฆุฉ ุงูุจุฑูุฏ ุนูุฏ ุจุฏุก ุงูุชุทุจูู
initializeEmail(); 