/**
 * ๐๏ธ ูุธุงู ุงูุชุงุฑูุฎ ุงูููุญุฏ - ุณุจู ุงูุฐููุฉ
 * ุงูุชุงุฑูุฎ ุงููุนุชูุฏ ูู ุงููุงุฌูุฉ ูู ุงููููุงุฏู ููุทุ ุจุตูุบุฉ ุนุฑุจูุฉ (d MMMM yyyy)
 * ูุซุงู: 13 ููููู 2025
 */

/**
 * โ ุฏุงูุฉ ุชูุณูู ุงูุชุงุฑูุฎ ุงููููุงุฏู ุงูููุญุฏุฉ (ุจุงููุบุฉ ุงูุนุฑุจูุฉ)
 * ุชุนุฑุถ ุงูุชุงุฑูุฎ ุจุตูุบุฉ: "13 ููููู 2025" 
 */
export function formatDateGregorian(dateString: string | undefined): string {
  if (!dateString) return '';
  
  try {
    const date = new Date(dateString);
    
    // ุชุญูู ูู ุตุญุฉ ุงูุชุงุฑูุฎ
    if (isNaN(date.getTime())) {
      return '';
    }
    
    // ุฃุณูุงุก ุงูุฃุดูุฑ ุจุงููุบุฉ ุงูุนุฑุจูุฉ
    const months = [
      'ููุงูุฑ', 'ูุจุฑุงูุฑ', 'ูุงุฑุณ', 'ุฃุจุฑูู', 'ูุงูู', 'ููููู',
      'ููููู', 'ุฃุบุณุทุณ', 'ุณุจุชูุจุฑ', 'ุฃูุชูุจุฑ', 'ููููุจุฑ', 'ุฏูุณูุจุฑ'
    ];
    
    const day = date.getDate();
    const month = months[date.getMonth()];
    const year = date.getFullYear();
    
    return `${day} ${month} ${year}`;
  } catch (error) {
    console.error('ุฎุทุฃ ูู ุชูุณูู ุงูุชุงุฑูุฎ ุงููููุงุฏู:', error);
    return '';
  }
}

/**
 * ๐ ุฏุงูุฉ ุงูุชุงุฑูุฎ ุงููุงูู ููุงุณุชุฎุฏุงู ูู ูุงุฌูุฉ ุงูููุงูุงุช
 * ุชุนุฑุถ: "13 ููููู 2025"
 */
export function formatFullDate(dateString: string | undefined): string {
  return formatDateGregorian(dateString);
}

/**
 * โฐ ุฏุงูุฉ ุงูุชุงุฑูุฎ ุงููุณุจู ููุงุณุชุฎุฏุงู ูู ุงููุฑูุช
 * ุชุนุฑุถ: "ููุฐ ุณุงุนุชูู" ุฃู "13 ููููู 2025" ููุชูุงุฑูุฎ ุงููุฏููุฉ
 */
export function formatRelativeDate(dateString: string | undefined): string {
  if (!dateString) return '';
  
  try {
    const date = new Date(dateString);
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffHours = Math.floor(diffMs / 3600000);
    const diffDays = Math.floor(diffMs / 86400000);
    
    // ููุชูุงุฑูุฎ ุงูุญุฏูุซุฉ (ุฃูู ูู 24 ุณุงุนุฉ)
    if (diffHours < 1) return 'ููุฐ ุฃูู ูู ุณุงุนุฉ';
    if (diffHours < 24) return `ููุฐ ${diffHours} ${diffHours === 1 ? 'ุณุงุนุฉ' : 'ุณุงุนุงุช'}`;
    if (diffDays === 1) return 'ุฃูุณ';
    if (diffDays < 7) return `ููุฐ ${diffDays} ุฃูุงู`;
    
    // ููุชูุงุฑูุฎ ุงูุฃูุฏูุ ูุนุฑุถ ุงูุชุงุฑูุฎ ุงููุงูู
    return formatDateGregorian(dateString);
  } catch (error) {
    console.error('ุฎุทุฃ ูู ุชูุณูู ุงูุชุงุฑูุฎ ุงููุณุจู:', error);
    return formatDateGregorian(dateString);
  }
}

/**
 * โฑ๏ธ ุฏุงูุฉ ููุชุงุฑูุฎ ูุน ุงูููุช
 * ุชุนุฑุถ: "13 ููููู 2025 ุงูุณุงุนุฉ 14:30"
 */
export function formatDateTime(dateString: string | undefined): string {
  if (!dateString) return '';
  
  try {
    const date = new Date(dateString);
    
    if (isNaN(date.getTime())) {
      return '';
    }
    
    const formattedDate = formatDateGregorian(dateString);
    const hours = date.getHours().toString().padStart(2, '0');
    const minutes = date.getMinutes().toString().padStart(2, '0');
    
    return `${formattedDate} ุงูุณุงุนุฉ ${hours}:${minutes}`;
  } catch (error) {
    console.error('ุฎุทุฃ ูู ุชูุณูู ุงูุชุงุฑูุฎ ูุงูููุช:', error);
    return formatDateGregorian(dateString);
  }
}

/**
 * ๐ ุฏุงูุฉ ุชูุณูู ูุฎุชุตุฑ ููุชุงุฑูุฎ (ุจุฏูู ุงูุณูุฉ ุฅุฐุง ูุงูุช ููุณ ุงูุณูุฉ ุงูุญุงููุฉ)
 * ุชุนุฑุถ: "13 ููููู" ุฃู "13 ููููู 2024" 
 */
export function formatDateShort(dateString: string | undefined): string {
  if (!dateString) return '';
  
  try {
    const date = new Date(dateString);
    const now = new Date();
    
    if (isNaN(date.getTime())) {
      return '';
    }
    
    const months = [
      'ููุงูุฑ', 'ูุจุฑุงูุฑ', 'ูุงุฑุณ', 'ุฃุจุฑูู', 'ูุงูู', 'ููููู',
      'ููููู', 'ุฃุบุณุทุณ', 'ุณุจุชูุจุฑ', 'ุฃูุชูุจุฑ', 'ููููุจุฑ', 'ุฏูุณูุจุฑ'
    ];
    
    const day = date.getDate();
    const month = months[date.getMonth()];
    const year = date.getFullYear();
    
    // ุฅุฐุง ูุงูุช ููุณ ุงูุณูุฉ ุงูุญุงููุฉุ ูุง ูุนุฑุถ ุงูุณูุฉ
    if (year === now.getFullYear()) {
      return `${day} ${month}`;
    }
    
    return `${day} ${month} ${year}`;
  } catch (error) {
    console.error('ุฎุทุฃ ูู ุชูุณูู ุงูุชุงุฑูุฎ ุงููุฎุชุตุฑ:', error);
    return '';
  }
}

/**
 * โ๏ธ ูุญุต ุฅุฐุง ูุงู ุงูุชุงุฑูุฎ ุงูููู
 */
export function isToday(dateString: string): boolean {
  if (!dateString) return false;
  
  try {
    const date = new Date(dateString);
    const today = new Date();
    
    return date.toDateString() === today.toDateString();
  } catch {
    return false;
  }
}

/**
 * ๏ฟฝ ุฏุงูุฉ ููููุช ููุท
 * ุชุนุฑุถ: "14:30"
 */
export function formatTimeOnly(dateString: string | undefined): string {
  if (!dateString) return '';
  
  try {
    const date = new Date(dateString);
    
    if (isNaN(date.getTime())) {
      return '';
    }
    
    const hours = date.getHours().toString().padStart(2, '0');
    const minutes = date.getMinutes().toString().padStart(2, '0');
    
    return `${hours}:${minutes}`;
  } catch (error) {
    console.error('ุฎุทุฃ ูู ุชูุณูู ุงูููุช:', error);
    return '';
  }
}

/**
 * ๐ ูุญุต ุตุญุฉ ุงูุชุงุฑูุฎ
 */
export function isValidDate(dateString: string): boolean {
  if (!dateString) return false;
  const date = new Date(dateString);
  return !isNaN(date.getTime());
}
