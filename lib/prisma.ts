import { PrismaClient } from '@/lib/generated/prisma'

declare global {
  var prisma: PrismaClient | undefined
}

// ุฅูุดุงุก Prisma Client ูุน ุฅุนุฏุงุฏุงุช ูุญุณูุฉ
const prismaClientSingleton = () => {
  console.log('๐ ุฅูุดุงุก Prisma Client ุฌุฏูุฏ...')
  
  const client = new PrismaClient({
    log: process.env.NODE_ENV === 'development' 
      ? ['error', 'warn'] 
      : ['error'],
    datasources: {
      db: {
        url: process.env.DATABASE_URL,
      },
    },
    errorFormat: 'minimal',
  })

  // ุงูุงุชุตุงู ุงูุชููุงุฆู ุนูุฏ ุงูุฅูุดุงุก
  client.$connect()
    .then(() => console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช'))
    .catch((error) => console.error('โ ูุดู ุงูุงุชุตุงู ุงูุฃููู:', error))

  return client
}

// ุงูุชุฃูุฏ ูู ุฅูุดุงุก instance ูุงุญุฏ ููุท
const prisma = globalThis.prisma ?? prismaClientSingleton()

if (process.env.NODE_ENV !== 'production') {
  globalThis.prisma = prisma
}

// helper function ููุชุญูู ูู ุญุงูุฉ ุงูุงุชุตุงู ูุน ุฅุนุงุฏุฉ ุงููุญุงููุฉ
export async function ensureConnection() {
  try {
    // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจุนูููุฉ ุจุณูุทุฉ
    await prisma.$queryRaw`SELECT 1`
    return true
  } catch (error) {
    console.log('๐ ูุญุงููุฉ ุฅุนุงุฏุฉ ุงูุงุชุตุงู...')
    try {
      await prisma.$connect()
      return true
    } catch (connectError) {
      console.error('โ ูุดู ุฅุนุงุฏุฉ ุงูุงุชุตุงู:', connectError)
      return false
    }
  }
}

// helper function ููุชุญูู ูู ุญุงูุฉ ุงูุงุชุตุงู
export async function checkDatabaseConnection() {
  try {
    await prisma.$connect()
    console.log('โ ูุฌุญ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช')
    return true
  } catch (error) {
    console.error('โ ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', error)
    return false
  }
}

// helper function ูุฅุนุงุฏุฉ ุงูุงุชุตุงู
export async function reconnectDatabase() {
  try {
    await prisma.$disconnect()
    await prisma.$connect()
    console.log('๐ ุชู ุฅุนุงุฏุฉ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ')
    return true
  } catch (error) {
    console.error('โ ูุดู ุฅุนุงุฏุฉ ุงูุงุชุตุงู:', error)
    return false
  }
}

export { prisma }
