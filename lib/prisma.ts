import { PrismaClient } from '../lib/generated/prisma';

declare global {
  var prisma: PrismaClient | undefined;
}

// ุฏุงูุฉ ุฅูุดุงุก Prisma Client ุฌุฏูุฏ ูุน ูุนุงูุฌุฉ ุฃุฎุทุงุก ูุญุณูุฉ
function createPrismaClient(): PrismaClient {
  console.log('๐ง ุฅูุดุงุก Prisma Client ุฌุฏูุฏ...');
  
  const client = new PrismaClient({
    log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],
    datasources: {
      db: {
        url: process.env.DATABASE_URL,
      },
    },
    // ุฅุถุงูุฉ ุฎูุงุฑุงุช ุฅุถุงููุฉ ููุงุชุตุงู
    errorFormat: 'pretty',
  });

  // ูุญุงููุฉ ุงูุงุชุตุงู ูุน ุฅุนุงุฏุฉ ุงููุญุงููุฉ
  const connectWithRetry = async (retries = 3): Promise<void> => {
    for (let i = 0; i < retries; i++) {
      try {
        await client.$connect();
        console.log('โ ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ');
        return;
      } catch (error) {
        console.error(`โ ูุญุงููุฉ ุงูุงุชุตุงู ${i + 1}/${retries} ูุดูุช:`, error);
        if (i === retries - 1) {
          console.error('โ ูุดู ูู ุฌููุน ูุญุงููุงุช ุงูุงุชุตุงู');
          throw error;
        }
        // ุงูุชุธุงุฑ ุซุงููุฉ ูุจู ุฅุนุงุฏุฉ ุงููุญุงููุฉ
        await new Promise(resolve => setTimeout(resolve, 1000));
      }
    }
  };

  // ูุญุงููุฉ ุงูุงุชุตุงู
  connectWithRetry().catch((error: Error) => {
    console.error('โ ุฎุทุฃ ููุงุฆู ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
  });

  return client;
}

// ุฅูุดุงุก ุฃู ุฅุนุงุฏุฉ ุงุณุชุฎุฏุงู Prisma Client
if (!global.prisma) {
  global.prisma = createPrismaClient();

  // ุชูุธูู ุงูุงุชุตุงู ุนูุฏ ุฅุบูุงู ุงูุชุทุจูู
  process.on('beforeExit', async () => {
    console.log('๐ ุฅุบูุงู ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    await global.prisma?.$disconnect();
  });

  process.on('SIGINT', async () => {
    console.log('๐ ุฅุบูุงู ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช (SIGINT)...');
    await global.prisma?.$disconnect();
    process.exit(0);
  });

  process.on('SIGTERM', async () => {
    console.log('๐ ุฅุบูุงู ุงุชุตุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช (SIGTERM)...');
    await global.prisma?.$disconnect();
    process.exit(0);
  });
}

export const prisma = global.prisma;

// ุฏุงูุฉ ููุชุญูู ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
export async function ensureConnection(): Promise<boolean> {
  try {
    // ุงูุชุญูู ูู ูุชุบูุฑ ุงูุจูุฆุฉ
    if (!process.env.DATABASE_URL) {
      console.error('โ DATABASE_URL ุบูุฑ ูุญุฏุฏ');
      return false;
    }

    // ูุญุงููุฉ ุงูุงุชุตุงู
    await prisma.$connect();
    
    // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
    await prisma.$queryRaw`SELECT 1 as test`;
    
    return true;
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
    return false;
  }
}
