const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

/**
 * ููุตุญุญ ูุดููุฉ ุงูุฅุดุนุงุฑุงุช - ุฅุถุงูุฉ ูุณุชุฎุฏููู ููุชููู ุจุงูุชุตูููุงุช
 */
async function fixNotificationInterests() {
  console.log('๐ง ุฅุตูุงุญ ูุดููุฉ ุงูุฅุดุนุงุฑุงุช...\n');

  try {
    // 1. ุฌูุจ ุฌููุน ุงููุณุชุฎุฏููู ุงููุดุทูู
    const activeUsers = await prisma.users.findMany({
      where: { status: 'active' },
      select: { id: true, email: true, role: true, interests: true }
    });

    console.log(`๐ฅ ุนุฏุฏ ุงููุณุชุฎุฏููู ุงููุดุทูู: ${activeUsers.length}`);

    // 2. ุฌูุจ ุฌููุน ุงูุชุตูููุงุช
    const categories = await prisma.categories.findMany({
      select: { id: true, name: true, slug: true }
    });

    console.log(`๐ ุนุฏุฏ ุงูุชุตูููุงุช: ${categories.length}`);
    categories.forEach(cat => {
      console.log(`  - ${cat.name} (${cat.id})`);
    });

    // 3. ุฅุถุงูุฉ ุงูุชูุงูุงุช ูููุณุชุฎุฏููู
    console.log('\n๐ ุฅุถุงูุฉ ุงูุชูุงูุงุช ูููุณุชุฎุฏููู...');

    for (const user of activeUsers) {
      console.log(`\n๐ค ูุนุงูุฌุฉ ุงููุณุชุฎุฏู: ${user.email}`);
      
      // ุงูุงูุชูุงูุงุช ุงูุญุงููุฉ
      const currentInterests = user.interests || [];
      console.log(`  ุงูุงูุชูุงูุงุช ุงูุญุงููุฉ: ${JSON.stringify(currentInterests)}`);

      // ุฅุถุงูุฉ ุงูุชูุงูุงุช ุฃุณุงุณูุฉ ููุฌููุน
      const basicInterests = ['ูุญููุงุช', 'ุฃุฎุจุงุฑ', 'ุนุงู'];
      
      // ุงูุชูุงูุงุช ุฅุถุงููุฉ ูููุดุฑููู
      const adminInterests = user.role === 'admin' ? ['ุชูููุฉ', 'ุงูุชุตุงุฏ', 'ุฑูุงุถุฉ'] : [];
      
      const newInterests = [...new Set([...currentInterests, ...basicInterests, ...adminInterests])];

      // ุชุญุฏูุซ ุงูุชูุงูุงุช ุงููุณุชุฎุฏู
      await prisma.users.update({
        where: { id: user.id },
        data: { interests: newInterests }
      });

      console.log(`  โ ุชู ุชุญุฏูุซ ุงูุงูุชูุงูุงุช: ${JSON.stringify(newInterests)}`);

      // ุฅูุดุงุก user_interests ุตุฑูุญุฉ
      for (const category of categories) {
        // ุชุญูู ูู ูุฌูุฏ ุงูุงูุชูุงู ูุณุจูุงู
        const existingInterest = await prisma.user_interests.findUnique({
          where: {
            user_id_category_id: {
              user_id: user.id,
              category_id: category.id
            }
          }
        });

        if (!existingInterest) {
          // ุฅูุดุงุก ุงูุชูุงู ุฌุฏูุฏ
          await prisma.user_interests.create({
            data: {
              user_id: user.id,
              category_id: category.id,
              interest_level: user.role === 'admin' ? 'high' : 'medium',
              is_active: true,
              created_at: new Date(),
              updated_at: new Date()
            }
          });

          console.log(`    โ ุชู ุฑุจุท ุงูุชุตููู: ${category.name}`);
        }
      }
    }

    // 4. ุงุฎุชุจุงุฑ ุงูุจุญุซ ุนู ุงููุณุชุฎุฏููู ุงูููุชููู
    console.log('\n๐ ุงุฎุชุจุงุฑ ุงูุจุญุซ ุนู ุงููุณุชุฎุฏููู ุงูููุชููู...');
    
    const testCategoryId = 'category_local_news';
    
    // ุงูุจุญุซ ุงููุจุงุดุฑ ูู user_interests
    const directInterests = await prisma.user_interests.findMany({
      where: {
        category_id: testCategoryId,
        is_active: true
      },
      include: {
        users: { select: { email: true } }
      }
    });

    console.log(`๐ ุงููุณุชุฎุฏููู ุงูููุชููู ุจู ${testCategoryId}:`);
    directInterests.forEach(interest => {
      console.log(`  - ${interest.users.email} (${interest.interest_level})`);
    });

    // 5. ุฅูุดุงุก ุฅุดุนุงุฑ ุชุฌุฑูุจู
    console.log('\n๐ ุฅูุดุงุก ุฅุดุนุงุฑ ุชุฌุฑูุจู...');
    
    if (directInterests.length > 0) {
      const testUser = directInterests[0];
      
      const notification = await prisma.smartNotifications.create({
        data: {
          user_id: testUser.user_id,
          title: '๐งช ุงุฎุชุจุงุฑ ุงูุฅุดุนุงุฑุงุช ุจุนุฏ ุงูุฅุตูุงุญ',
          message: 'ุชู ุฅุตูุงุญ ูุธุงู ุงูุฅุดุนุงุฑุงุช ููู ูุนูู ุงูุขู ุจุดูู ุตุญูุญ',
          type: 'article_recommendation',
          priority: 'high',
          category: 'ุงุฎุชุจุงุฑ',
          data: {
            testMode: true,
            fixedAt: new Date().toISOString()
          },
          status: 'sent',
          delivery_channels: ['web'],
          ai_optimized: true,
          created_at: new Date(),
          sent_at: new Date()
        }
      });

      console.log(`โ ุชู ุฅูุดุงุก ุฅุดุนุงุฑ ุงุฎุชุจุงุฑู: ${notification.id}`);
    }

    // 6. ุฅุญุตุงุฆูุงุช ููุงุฆูุฉ
    const totalNotifications = await prisma.smartNotifications.count();
    const totalInterests = await prisma.user_interests.count();

    console.log('\n๐ ุงูุฅุญุตุงุฆูุงุช ุงูููุงุฆูุฉ:');
    console.log(`  - ุฅุฌูุงูู ุงูุฅุดุนุงุฑุงุช: ${totalNotifications}`);
    console.log(`  - ุฅุฌูุงูู ุงูุงูุชูุงูุงุช: ${totalInterests}`);
    console.log(`  - ุงููุณุชุฎุฏููู ุงููุดุทูู: ${activeUsers.length}`);
    console.log(`  - ุงูุชุตูููุงุช: ${categories.length}`);

    console.log('\nโ ุชู ุฅุตูุงุญ ูุธุงู ุงูุฅุดุนุงุฑุงุช ุจูุฌุงุญ!');
    console.log('\n๐ก ุงูุฎุทูุงุช ุงูุชุงููุฉ:');
    console.log('  1. ุงุฎุชุจุฑ ูุดุฑ ููุงู ุฌุฏูุฏ ูู ุงููุงุฌูุฉ');
    console.log('  2. ุชุญูู ูู ูุตูู ุงูุฅุดุนุงุฑุงุช');
    console.log('  3. ุฑุงูุจ logs ุงูุฎุงุฏู ููุชุฃูุฏ ูู ุนูู ุงููุญุฑู');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุฅุตูุงุญ:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// ุชุดุบูู ุงูุฅุตูุงุญ
fixNotificationInterests()
  .then(() => {
    console.log('\n๐ ุงูุชูุงุก ุนูููุฉ ุงูุฅุตูุงุญ');
    process.exit(0);
  })
  .catch((error) => {
    console.error('๐ฅ ูุดู ุงูุฅุตูุงุญ:', error);
    process.exit(1);
  });
