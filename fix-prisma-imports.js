#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// ุงูุจุญุซ ุนู ุฌููุน ูููุงุช API ุงูุชู ุชุญุชูู ุนูู ุงุณุชูุฑุงุฏ ุฎุงุทุฆ ูู prisma
const findFiles = () => {
  try {
    const result = execSync(`grep -r "import.*{.*prisma.*}.*from.*@/lib/prisma" app/api --include="*.ts"`, { encoding: 'utf8' });
    return result.split('\n').filter(line => line.trim()).map(line => line.split(':')[0]);
  } catch (error) {
    console.log('ูุง ุชูุฌุฏ ูููุงุช ุฃุฎุฑู ุชุญุชุงุฌ ุฅุตูุงุญ');
    return [];
  }
};

// ุฅุตูุงุญ ุงูุงุณุชูุฑุงุฏ ูู ููู ูุงุญุฏ
const fixFile = (filePath) => {
  try {
    const content = fs.readFileSync(filePath, 'utf8');
    
    // ุฅุตูุงุญ ุงุณุชูุฑุงุฏ prisma ูุน ุฏูุงู ุฃุฎุฑู
    let newContent = content.replace(
      /import\s*{\s*prisma\s*,\s*([^}]+)\s*}\s*from\s*'@\/lib\/prisma';?/g,
      "import prisma, { $1 } from '@/lib/prisma';"
    );
    
    // ุฅุตูุงุญ ุงุณุชูุฑุงุฏ prisma ููุท
    newContent = newContent.replace(
      /import\s*{\s*prisma\s*}\s*from\s*'@\/lib\/prisma';?/g,
      "import prisma from '@/lib/prisma';"
    );
    
    if (content !== newContent) {
      fs.writeFileSync(filePath, newContent);
      console.log(`โ ุชู ุฅุตูุงุญ: ${filePath}`);
      return true;
    }
    return false;
  } catch (error) {
    console.error(`โ ุฎุทุฃ ูู ุฅุตูุงุญ ${filePath}:`, error.message);
    return false;
  }
};

// ุชุดุบูู ุงูุณูุฑูุจุช
console.log('๐ง ุจุฏุก ุฅุตูุงุญ ุงุณุชูุฑุงุฏุงุช Prisma...');

const files = findFiles();
if (files.length === 0) {
  console.log('โ ุฌููุน ุงููููุงุช ูุญุฏุซุฉ ุจุงููุนู');
  process.exit(0);
}

console.log(`๐ ุชู ุงูุนุซูุฑ ุนูู ${files.length} ููู ูุญุชุงุฌ ุฅุตูุงุญ`);

let fixed = 0;
files.forEach(file => {
  if (fixFile(file)) {
    fixed++;
  }
});

console.log(`๐ ุชู ุฅุตูุงุญ ${fixed} ููู ูู ุฃุตู ${files.length}`);
