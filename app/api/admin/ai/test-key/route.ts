import { NextRequest, NextResponse } from 'next/server';
import { requireAuthFromRequest } from '@/app/lib/auth';
import { getOpenAIKey } from '@/lib/openai-config';
import OpenAI from 'openai';

export async function POST(request: NextRequest) {
  try {
    // ุงูุชุญูู ูู ุงููุตุงุฏูุฉ
    const authResult = await requireAuthFromRequest(request);
    
    if (!authResult || authResult.error) {
      console.error('๐ซ ูุญุงููุฉ ูุตูู ุบูุฑ ูุตุฑุญ ุจูุง ูุงุฎุชุจุงุฑ ููุชุงุญ OpenAI');
      return NextResponse.json(
        { error: 'ุบูุฑ ูุตุฑุญ ุจุงููุตูู' },
        { status: 401 }
      );
    }

    const user = authResult.user;
    
    // ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุณุชุฎุฏู (ูุฌุจ ุฃู ูููู ูุญุฑุฑ ุฃู ุฃุฏูู)
    if (!user.roles?.includes('admin') && !user.roles?.includes('editor') && !user.roles?.includes('author')) {
      console.error('๐ซ ุงููุณุชุฎุฏู ููุณ ูุฏูู ุตูุงุญูุงุช ุงุฎุชุจุงุฑ ุงูููุชุงุญ:', user.email);
      return NextResponse.json(
        { error: 'ููุณ ูุฏูู ุตูุงุญูุฉ ูุงุฎุชุจุงุฑ ููุชุงุญ OpenAI' },
        { status: 403 }
      );
    }

    console.log('๐ ุจุฏุก ุงุฎุชุจุงุฑ ููุชุงุญ OpenAI ูููุณุชุฎุฏู:', user.email);
    
    // ุงูุญุตูู ุนูู ููุชุงุญ OpenAI
    const apiKey = await getOpenAIKey();
    
    if (!apiKey || apiKey.trim() === '') {
      return NextResponse.json({
        valid: false,
        error: 'ูู ูุชู ุงูุนุซูุฑ ุนูู ููุชุงุญ OpenAI',
        details: 'ูุฑุฌู ุฅุถุงูุฉ ููุชุงุญ OpenAI ูู ุฅุนุฏุงุฏุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูู ููุญุฉ ุงูุชุญูู',
        message: 'ููุชุงุญ OpenAI ุบูุฑ ููุฌูุฏ'
      });
    }

    // ุงุฎุชุจุงุฑ ุงูููุชุงุญ ุจุทูุจ ุจุณูุท
    try {
      // ุฅูุดุงุก ุนููู ูุคูุช ููุงุฎุชุจุงุฑ - ุขูู ูู ูุฐุง ุงูุณูุงู
      const openai = new OpenAI({
        apiKey: apiKey.trim()
      });

      // ุทูุจ ุจุณูุท ูุงุฎุชุจุงุฑ ุตูุงุญูุฉ ุงูููุชุงุญ
      const response = await openai.models.list();
      
      // ุฅุฐุง ูุฌุญ ุงูุทูุจุ ุงูููุชุงุญ ุตุญูุญ
      console.log('โ ููุชุงุญ OpenAI ุตุญูุญุ ุนุฏุฏ ุงูููุงุฐุฌ ุงููุชุงุญุฉ:', response.data.length);
      
      return NextResponse.json({
        valid: true,
        message: 'ููุชุงุญ OpenAI ุตุญูุญ ูุฌุงูุฒ ููุงุณุชุฎุฏุงู',
        details: `ุชู ุงูุนุซูุฑ ุนูู ${response.data.length} ูููุฐุฌ ูุชุงุญ`,
        models: response.data.slice(0, 5).map(m => m.id) // ุฃูู 5 ููุงุฐุฌ ููุท
      });
      
    } catch (openaiError: any) {
      console.error('โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ููุชุงุญ OpenAI:', openaiError);
      
      // ุชุญููู ููุน ุงูุฎุทุฃ
      if (openaiError.status === 401) {
        return NextResponse.json({
          valid: false,
          error: 'ููุชุงุญ OpenAI ุบูุฑ ุตุญูุญ',
          details: 'ูุฑุฌู ุงูุชุญูู ูู ุตุญุฉ ุงูููุชุงุญ ุงููุฏุฎู',
          message: 'ููุชุงุญ ุบูุฑ ุตุญูุญ ุฃู ููุชูู ุงูุตูุงุญูุฉ'
        });
      } else if (openaiError.status === 429) {
        return NextResponse.json({
          valid: false,
          error: 'ุชุฌุงูุฒ ุญุฏ ุงูุงุณุชุฎุฏุงู',
          details: 'ุชู ุชุฌุงูุฒ ุญุฏ ุงุณุชุฎุฏุงู APIุ ูุฑุฌู ุงูุชุญูู ูู ุฑุตูุฏ ุงูุญุณุงุจ',
          message: 'ุชุฌุงูุฒ ุญุฏ ุงูุงุณุชุฎุฏุงู ุงููุณููุญ'
        });
      } else {
        return NextResponse.json({
          valid: false,
          error: 'ุฎุทุฃ ูู ุงูุงุชุตุงู ุจู OpenAI',
          details: openaiError.message || 'ุฎุทุฃ ุบูุฑ ูุนุฑูู',
          message: 'ูุดู ุงูุงุชุตุงู ุจุฎุฏูุฉ OpenAI'
        });
      }
    }
    
  } catch (error: any) {
    console.error('โ ุฎุทุฃ ูู ูุนุงูุฌุฉ ุทูุจ ุงุฎุชุจุงุฑ ุงูููุชุงุญ:', error);
    return NextResponse.json(
      { 
        valid: false,
        error: 'ุญุฏุซ ุฎุทุฃ ูู ูุนุงูุฌุฉ ุงูุทูุจ',
        details: error.message || 'ุฎุทุฃ ุบูุฑ ูุนุฑูู',
        message: 'ุฎุทุฃ ูู ุงููุธุงู'
      },
      { status: 500 }
    );
  }
}