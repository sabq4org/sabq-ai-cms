import { Metadata } from "next";
import PageClient from "./page-client";

// ISR: ╪е╪╣╪з╪п╪й ╪з┘Д╪к╪н┘В┘В ┘Г┘Д 60 ╪л╪з┘Ж┘К╪й ┘Д┘Д╪╡┘Б╪н╪й ╪з┘Д╪▒╪ж┘К╪│┘К╪й
export const revalidate = 60;

// Metadata ┘Д┘Д╪╡┘Б╪н╪й ╪з┘Д╪▒╪ж┘К╪│┘К╪й
export const metadata: Metadata = {
  title: "╪╡╪н┘К┘Б╪й ╪│╪и┘В ╪з┘Д╪з┘Д┘Г╪к╪▒┘И┘Ж┘К╪й AI - ╪з┘Д╪╡┘Б╪н╪й ╪з┘Д╪▒╪ж┘К╪│┘К╪й",
  description:
    "┘Е┘И┘В╪╣ ╪╡╪н┘К┘Б╪й ╪│╪и┘В ╪з┘Д╪е┘Д┘Г╪к╪▒┘И┘Ж┘К╪й ╪з┘Д╪▒╪│┘Е┘К - ╪в╪о╪▒ ╪з┘Д╪г╪о╪и╪з╪▒ ┘И╪з┘Д┘Е┘В╪з┘Д╪з╪к ┘Е┘Ж ╪з┘Д┘Е┘Е┘Д┘Г╪й ╪з┘Д╪╣╪▒╪и┘К╪й ╪з┘Д╪│╪╣┘И╪п┘К╪й ┘И╪з┘Д╪╣╪з┘Д┘Е ╪и╪к┘В┘Ж┘К╪й ╪з┘Д╪░┘Г╪з╪б ╪з┘Д╪з╪╡╪╖┘Ж╪з╪╣┘К",
  keywords: "╪│╪и┘В, ╪╡╪н┘К┘Б╪й ╪│╪и┘В, ╪г╪о╪и╪з╪▒ ╪з┘Д╪│╪╣┘И╪п┘К╪й, ╪г╪о╪и╪з╪▒ ╪╣╪▒╪и┘К╪й, ╪░┘Г╪з╪б ╪з╪╡╪╖┘Ж╪з╪╣┘К",
  authors: [{ name: "╪╡╪н┘К┘Б╪й ╪│╪и┘В ╪з┘Д╪е┘Д┘Г╪к╪▒┘И┘Ж┘К╪й" }],
  openGraph: {
    title: "╪╡╪н┘К┘Б╪й ╪│╪и┘В ╪з┘Д╪з┘Д┘Г╪к╪▒┘И┘Ж┘К╪й AI",
    description: "┘Е┘И┘В╪╣ ╪╡╪н┘К┘Б╪й ╪│╪и┘В ╪з┘Д╪е┘Д┘Г╪к╪▒┘И┘Ж┘К╪й ╪з┘Д╪▒╪│┘Е┘К - ╪в╪о╪▒ ╪з┘Д╪г╪о╪и╪з╪▒ ┘И╪з┘Д┘Е┘В╪з┘Д╪з╪к",
    siteName: "╪╡╪н┘К┘Б╪й ╪│╪и┘В ╪з┘Д╪з┘Д┘Г╪к╪▒┘И┘Ж┘К╪й AI",
    type: "website",
    locale: "ar_SA",
  },
  twitter: {
    card: "summary_large_image",
    site: "@sabqorg",
    creator: "@sabqorg",
  },
};

// Server Component ┘Д╪м┘Д╪и ╪з┘Д╪и┘К╪з┘Ж╪з╪к ┘Е╪╣ ┘Е╪╣╪з┘Д╪м╪й ┘Е╪н╪│┘Ж╪й ┘Д┘Д╪г╪о╪╖╪з╪б
function getBaseUrl() {
  if (process.env.NEXT_PUBLIC_SITE_URL) return process.env.NEXT_PUBLIC_SITE_URL;
  if (process.env.VERCEL_URL) return `https://${process.env.VERCEL_URL}`;
  return process.env.NODE_ENV === "production" ? "https://sabq.io" : "http://localhost:3000";
}
async function getArticles(limit = 16) {
  try {
    const baseUrl = getBaseUrl();

    // ╪е╪╢╪з┘Б╪й timeout ┘Д┘Д╪╖┘Д╪и
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 ╪л┘И╪з┘Ж┘К

    try {
      const res = await fetch(
        `${baseUrl}/api/news?status=published&limit=${limit}&sort=published_at&order=desc`,
        {
          next: { revalidate: 30 }, // ╪к┘В┘Д┘К┘Д ┘Е╪п╪й ╪з┘Д┘Г╪з╪┤ ╪е┘Д┘Й 30 ╪л╪з┘Ж┘К╪й
          headers: {
            "Content-Type": "application/json",
            "Cache-Control": "public, s-maxage=60, stale-while-revalidate=120",
          },
          signal: controller.signal,
        }
      );

      clearTimeout(timeoutId);

      if (!res.ok) {
        console.warn(`тЪая╕П API returned ${res.status}: ${res.statusText}`);
        return [];
      }

      const contentType = res.headers.get("content-type");
      if (!contentType || !contentType.includes("application/json")) {
        console.warn("тЪая╕П ╪з╪│╪к╪м╪з╪и╪й ╪║┘К╪▒ ╪╡╪з┘Д╪н╪й ┘Е┘Ж API ╪з┘Д┘Е┘В╪з┘Д╪з╪к");
        return [];
      }

      const json = await res.json();

      // ╪з┘Д╪к╪н┘В┘В ┘Е┘Ж ┘Ж╪м╪з╪н ╪з┘Д╪з╪│╪к╪м╪з╪и╪й (API ╪з┘Д╪м╪п┘К╪п)
      if (!json.success) {
        console.warn("тЪая╕П ┘Б╪┤┘Д API ┘Б┘К ╪е╪▒╪м╪з╪╣ ╪з┘Д╪и┘К╪з┘Ж╪з╪к:", json.error);
        return [];
      }

      // API ┘К╪▒╪м╪╣ ╪з┘Д╪и┘К╪з┘Ж╪з╪к ┘Б┘К json.articles
      const articles = json.articles ?? [];

      if (!Array.isArray(articles)) {
        console.warn("тЪая╕П ╪з┘Д╪и┘К╪з┘Ж╪з╪к ╪з┘Д┘Е╪│╪к┘Д┘Е╪й ┘Д┘К╪│╪к ┘Е╪╡┘Б┘И┘Б╪й");
        return [];
      }

      return articles;
    } catch (fetchError) {
      clearTimeout(timeoutId);

      if (fetchError instanceof Error && fetchError.name === "AbortError") {
        console.warn("тЪая╕П ╪з┘Ж╪к┘З╪к ┘Е┘З┘Д╪й ╪з┘Д╪╖┘Д╪и");
      } else {
        console.warn("тЪая╕П ╪о╪╖╪г ┘Б┘К ╪м┘Д╪и ╪з┘Д┘Е┘В╪з┘Д╪з╪к:", fetchError);
      }
      return [];
    }
  } catch (error) {
    console.warn("тЪая╕П ╪о╪╖╪г ┘Б┘К ╪е╪╣╪п╪з╪п ╪╖┘Д╪и ╪з┘Д┘Е┘В╪з┘Д╪з╪к:", error);
    return [];
  }
}

async function getCategories() {
  try {
    const baseUrl = getBaseUrl();

    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 10000);

    try {
      const res = await fetch(`${baseUrl}/api/categories?is_active=true`, {
        next: { revalidate: 600 },
        headers: {
          "Content-Type": "application/json",
          "Cache-Control": "public, s-maxage=600, stale-while-revalidate=900",
        },
        signal: controller.signal,
      });

      clearTimeout(timeoutId);

      if (!res.ok) {
        console.warn(`тЪая╕П ┘Б╪┤┘Д ╪м┘Д╪и ╪з┘Д╪к╪╡┘Ж┘К┘Б╪з╪к: ${res.status}`);
        return [];
      }

      const data = await res.json();
      const categories = data.categories || data.data || [];
      console.log("тЬЕ ╪з┘Д╪к╪╡┘Ж┘К┘Б╪з╪к ╪з┘Д┘Е┘П╪│╪к┘Д┘Е╪й:", categories.length);
      return categories;
    } catch (fetchError) {
      clearTimeout(timeoutId);
      console.warn("тЪая╕П ╪о╪╖╪г ┘Б┘К ╪м┘Д╪и ╪з┘Д╪к╪╡┘Ж┘К┘Б╪з╪к:", fetchError);
      return [];
    }
  } catch (error) {
    console.warn("тЪая╕П ╪о╪╖╪г ┘Б┘К ╪е╪╣╪п╪з╪п ╪╖┘Д╪и ╪з┘Д╪к╪╡┘Ж┘К┘Б╪з╪к:", error);
    return [];
  }
}

async function getNewsStats() {
  try {
    const baseUrl = getBaseUrl();

    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 10000);

    try {
      const res = await fetch(`${baseUrl}/api/news/stats`, {
        next: { revalidate: 300 },
        headers: {
          "Content-Type": "application/json",
          "Cache-Control": "public, s-maxage=300, stale-while-revalidate=600",
        },
        signal: controller.signal,
      });

      clearTimeout(timeoutId);

      if (!res.ok) {
        console.warn(`тЪая╕П ┘Б╪┤┘Д ╪м┘Д╪и ╪е╪н╪╡╪з╪ж┘К╪з╪к ╪з┘Д╪г╪о╪и╪з╪▒: ${res.status}`);
        return null;
      }

      return await res.json();
    } catch (fetchError) {
      clearTimeout(timeoutId);
      console.warn("тЪая╕П ╪о╪╖╪г ┘Б┘К ╪м┘Д╪и ╪е╪н╪╡╪з╪ж┘К╪з╪к ╪з┘Д╪г╪о╪и╪з╪▒:", fetchError);
      return null;
    }
  } catch (error) {
    console.warn("тЪая╕П ╪о╪╖╪г ┘Б┘К ╪е╪╣╪п╪з╪п ╪╖┘Д╪и ╪з┘Д╪е╪н╪╡╪з╪ж┘К╪з╪к:", error);
    return null;
  }
}

async function getDeepAnalyses() {
  try {
    const baseUrl = getBaseUrl();

    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 10000);

    try {
      const res = await fetch(
        `${baseUrl}/api/deep-analyses?limit=5&sortBy=analyzed_at&sortOrder=desc`,
        {
          next: { revalidate: 600 },
          headers: {
            "Content-Type": "application/json",
            "Cache-Control": "public, s-maxage=600, stale-while-revalidate=900",
          },
          signal: controller.signal,
        }
      );

      clearTimeout(timeoutId);

      if (!res.ok) {
        console.warn(`тЪая╕П ┘Б╪┤┘Д ╪м┘Д╪и ╪з┘Д╪к╪н┘Д┘К┘Д╪з╪к ╪з┘Д╪╣┘Е┘К┘В╪й: ${res.status}`);
        return [];
      }

      const data = await res.json();
      return data.analyses || [];
    } catch (fetchError) {
      clearTimeout(timeoutId);
      console.warn("тЪая╕П ╪о╪╖╪г ┘Б┘К ╪м┘Д╪и ╪з┘Д╪к╪н┘Д┘К┘Д╪з╪к ╪з┘Д╪╣┘Е┘К┘В╪й:", fetchError);
      return [];
    }
  } catch (error) {
    console.warn("тЪая╕П ╪о╪╖╪г ┘Б┘К ╪е╪╣╪п╪з╪п ╪╖┘Д╪и ╪з┘Д╪к╪н┘Д┘К┘Д╪з╪к:", error);
    return [];
  }
}

async function getFeaturedArticles() {
  try {
    const baseUrl = getBaseUrl();
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 8000);
    try {
      const res = await fetch(`${baseUrl}/api/featured-news-carousel`, {
        next: { revalidate: 60, tags: ["featured-news"] },
        headers: {
          "Content-Type": "application/json",
          "Cache-Control": "public, s-maxage=60, stale-while-revalidate=120",
        },
        signal: controller.signal,
      });
      clearTimeout(timeoutId);
      if (!res.ok) {
        console.warn(`тЪая╕П ┘Б╪┤┘Д ╪м┘Д╪и ╪з┘Д╪г╪о╪и╪з╪▒ ╪з┘Д┘Е┘Е┘К╪▓╪й: ${res.status}`);
        return [] as any[];
      }
      const data = await res.json();
      return (data.articles as any[]) || [];
    } catch (e) {
      clearTimeout(timeoutId);
      console.warn("тЪая╕П ╪о╪╖╪г ┘Б┘К ╪м┘Д╪и ╪з┘Д╪г╪о╪и╪з╪▒ ╪з┘Д┘Е┘Е┘К╪▓╪й:", e);
      return [] as any[];
    }
  } catch (error) {
    console.warn("тЪая╕П ╪о╪╖╪г ┘Б┘К ╪е╪╣╪п╪з╪п ╪╖┘Д╪и ╪з┘Д╪г╪о╪и╪з╪▒ ╪з┘Д┘Е┘Е┘К╪▓╪й:", error);
    return [] as any[];
  }
}

// Force dynamic for server-side features
// ╪к┘Е╪к ╪е╪▓╪з┘Д╪й force-dynamic ┘Д┘Д╪│┘Е╪з╪н ╪и┘А ISR

export default async function HomePage() {
  try {
    if (process.env.NODE_ENV !== "production") {
      console.log("ЁЯЪА ╪и╪п╪б ╪к╪н┘Е┘К┘Д ╪з┘Д╪╡┘Б╪н╪й ╪з┘Д╪▒╪ж┘К╪│┘К╪й...");
    }

    // ╪м┘Д╪и ╪м┘Е┘К╪╣ ╪з┘Д╪и┘К╪з┘Ж╪з╪к ╪и╪з┘Д╪к┘И╪з╪▓┘К
    const [
      articles = [],
      categories = [],
      newsStats = null,
      deepAnalyses = [],
      featured = [],
    ] = await Promise.all([
      getArticles(20).catch((err) => {
        console.warn("тЪая╕П ┘Б╪┤┘Д ╪м┘Д╪и ╪з┘Д┘Е┘В╪з┘Д╪з╪к:", err);
        return [];
      }),
      getCategories().catch((err) => {
        console.warn("тЪая╕П ┘Б╪┤┘Д ╪м┘Д╪и ╪з┘Д╪к╪╡┘Ж┘К┘Б╪з╪к:", err);
        return [];
      }),
      getNewsStats().catch((err) => {
        console.warn("тЪая╕П ┘Б╪┤┘Д ╪м┘Д╪и ╪з┘Д╪е╪н╪╡╪з╪ж┘К╪з╪к:", err);
        return null;
      }),
      getDeepAnalyses().catch((err) => {
        console.warn("тЪая╕П ┘Б╪┤┘Д ╪м┘Д╪и ╪з┘Д╪к╪н┘Д┘К┘Д╪з╪к:", err);
        return [];
      }),
      getFeaturedArticles().catch((err) => {
        console.warn("тЪая╕П ┘Б╪┤┘Д ╪м┘Д╪и ╪з┘Д╪г╪о╪и╪з╪▒ ╪з┘Д┘Е┘Е┘К╪▓╪й:", err);
        return [] as any[];
      }),
    ]);

    if (process.env.NODE_ENV !== "production") {
      console.log("тЬЕ ╪к┘Е ╪м┘Д╪и ╪з┘Д╪и┘К╪з┘Ж╪з╪к ╪и┘Ж╪м╪з╪н:", {
        articles: articles.length,
        categories: categories.length,
        stats: !!newsStats,
        deepAnalyses: deepAnalyses.length,
        featured: featured.length,
      });
    }

    return (
      <PageClient
        initialArticles={articles}
        initialCategories={categories}
        initialStats={newsStats}
        initialDeepAnalyses={deepAnalyses}
        initialFeaturedArticles={featured}
      />
    );
  } catch (error) {
    console.error("╪о╪╖╪г ┘Б┘К ╪к╪н┘Е┘К┘Д ╪з┘Д╪╡┘Б╪н╪й ╪з┘Д╪▒╪ж┘К╪│┘К╪й:", error);

    // ╪╡┘Б╪н╪й ╪о╪╖╪г ╪и╪│┘К╪╖╪й
    return (
      <div className="min-h-screen bg-red-50 flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-red-800 mb-4">
            ╪о╪╖╪г ┘Б┘К ╪к╪н┘Е┘К┘Д ╪з┘Д╪╡┘Б╪н╪й
          </h1>
          <p className="text-red-600 mb-4">
            ╪н╪п╪л ╪о╪╖╪г ╪║┘К╪▒ ┘Е╪к┘И┘В╪╣╪М ┘К╪▒╪м┘Й ╪з┘Д┘Е╪н╪з┘И┘Д╪й ┘Е╪▒╪й ╪г╪о╪▒┘Й
          </p>
          <button
            onClick={() => window.location.reload()}
            className="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700"
          >
            ╪е╪╣╪з╪п╪й ╪з┘Д┘Е╪н╪з┘И┘Д╪й
          </button>
        </div>
      </div>
    );
  }
}
