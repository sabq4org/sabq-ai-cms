"use client";

import { isEmergencyArticleSupported } from "@/app/emergency-articles";
import Footer from "@/components/Footer";
import ReporterLink from "@/components/ReporterLink";
import ArticleFeaturedImage from "@/components/article/ArticleFeaturedImage";
import OpinionArticleLayout from "@/components/article/OpinionArticleLayout";
import SafeDateDisplay from "@/components/article/SafeDateDisplay";
import DbConnectionError from "@/components/db-connection-error";
import MobileOpinionLayout from "@/components/mobile/MobileOpinionLayout";
import { useDarkModeContext } from "@/contexts/DarkModeContext";
import { useMediaQuery } from "@/hooks/useMediaQuery";
import { ArticleData } from "@/lib/article-api";
import {
  handlePrismaError,
  isPrismaConnectionError,
} from "@/lib/prisma-error-handler";
import "@/styles/mobile-article-layout.css";
import Link from "next/link";
import { useRouter } from "next/navigation";
import { useEffect, useRef, useState } from "react";

import AdBanner from "@/components/ads/AdBanner";
import { SmartInteractionButtons } from "@/components/article/SmartInteractionButtons";
import { useViewTracking } from "@/hooks/useViewTracking";
import {
  Award,
  BookOpen,
  Calendar,
  CheckCircle,
  Clock,
  Hash,
  Star,
} from "lucide-react";
// import { useUserInteractionTracking } from '@/hooks/useUserInteractionTracking';
import ArticleAISummary from "@/components/article/ArticleAISummary";
import ArticleStatsBlock from "@/components/article/ArticleStatsBlock";
import { ReadingProgressBar } from "@/components/article/ReadingProgressBar";
import SmartPersonalizedContent from "@/components/article/SmartPersonalizedContent";
import ArticleViews from "@/components/ui/ArticleViews";
import { useReporterProfile } from "@/lib/hooks/useReporterProfile";
import "@/styles/image-optimizations.css";
import "@/styles/mobile-article.css";
import "./article-styles.css";

interface ArticleClientComponentProps {
  initialArticle: ArticleData | null;
  articleId: string;
}

export default function ArticleClientComponent({
  initialArticle,
  articleId,
}: ArticleClientComponentProps) {
  const router = useRouter();
  const { darkMode } = useDarkModeContext();
  const isMobile = useMediaQuery("(max-width: 768px)");

  // ┘Е╪╣╪з┘Д╪м╪й metadata ╪е╪░╪з ┘Г╪з┘Ж╪к string
  const processArticle = (articleData: any) => {
    if (
      articleData &&
      articleData.metadata &&
      typeof articleData.metadata === "string"
    ) {
      try {
        articleData.metadata = JSON.parse(articleData.metadata);
      } catch (e) {
        // ╪к╪м╪з┘З┘Д ╪г╪о╪╖╪з╪б ╪к╪н┘Д┘К┘Д metadata ┘И╪к╪╣┘К┘К┘Ж ┘В┘К┘Е╪й ╪з┘Б╪к╪▒╪з╪╢┘К╪й
        console.warn("╪к╪н╪░┘К╪▒: ┘Б╪┤┘Д ┘Б┘К ╪к╪н┘Д┘К┘Д metadata╪М ╪з╪│╪к╪о╪п╪з┘Е ┘В┘К┘Е╪й ╪з┘Б╪к╪▒╪з╪╢┘К╪й");
        articleData.metadata = {};
      }
    }
    return articleData;
  };

  const [article, setArticle] = useState<ArticleData | null>(
    processArticle(initialArticle) || null
  );

  // ╪к╪н╪п┘К╪п ┘Е╪з ╪е╪░╪з ┘Г╪з┘Ж ╪з┘Д┘Е┘В╪з┘Д ┘Е┘В╪з┘Д ╪▒╪г┘К
  const isOpinionArticle =
    article &&
    (article.article_type === "opinion" ||
      article.article_type === "analysis" ||
      article.article_type === "editorial" ||
      article.article_type === "commentary" ||
      article.article_type === "column" ||
      article.category?.slug === "opinion" ||
      article.category?.name?.includes("╪▒╪г┘К") ||
      article.category?.name?.includes("╪к╪н┘Д┘К┘Д"));
  const [loading, setLoading] = useState(!initialArticle);
  const [isReading, setIsReading] = useState(false);
  const [showAudioPlayer, setShowAudioPlayer] = useState(false);
  const [isAudioPlaying, setIsAudioPlaying] = useState(false);
  const [audioUrl, setAudioUrl] = useState<string | null>(null);
  const [isLoadingAudio, setIsLoadingAudio] = useState(false);
  const [contentHtml, setContentHtml] = useState("");
  const audioRef = useRef<HTMLAudioElement>(null);

  // ╪м┘Д╪и ╪и╪▒┘И┘Б╪з┘К┘Д ╪з┘Д┘Е╪▒╪з╪│┘Д
  const {
    reporter,
    hasProfile,
    loading: reporterLoading,
  } = useReporterProfile(article?.author?.name || "");

  // ╪к╪к╪и╪╣ ╪з┘Д┘Е╪┤╪з┘З╪п╪з╪к
  const {
    elementRef: viewTrackingRef,
    hasViewed,
    isInView,
  } = useViewTracking({
    articleId: articleId,
    threshold: 0.5, // 50% ┘Е┘Ж ╪з┘Д┘Е┘В╪з┘Д ┘К╪м╪и ╪г┘Ж ┘К┘Г┘И┘Ж ┘Е╪▒╪ж┘К
    minTime: 5000, // 5 ╪л┘И╪з┘Ж┘К
    enabled: !!article, // ╪к┘Б╪╣┘К┘Д ┘Б┘В╪╖ ╪╣┘Ж╪п ┘И╪м┘И╪п ╪з┘Д┘Е┘В╪з┘Д
  });

  // ╪п╪з┘Д╪й ┘Д╪╣╪▒╪╢ ╪г┘К┘В┘И┘Ж╪й ╪з┘Д╪к╪н┘В┘В
  const getVerificationIcon = (badge: string) => {
    switch (badge) {
      case "expert":
        return <Award className="w-3 h-3 text-purple-600" />;
      case "senior":
        return <Star className="w-3 h-3 text-yellow-600" />;
      default:
        return <CheckCircle className="w-3 h-3 text-blue-600" />;
    }
  };

  // ╪м┘Д╪и ╪з┘Д┘Е┘В╪з┘Д ╪е╪░╪з ┘Д┘Е ┘К╪к┘Е ╪к┘Е╪▒┘К╪▒┘З - ┘Е╪╣ ╪н┘Д ╪╖╪з╪▒╪ж ┘Е╪н╪│┘Ж ┘Д┘Е╪┤┘Г┘Д╪й ╪з┘Д╪з╪к╪╡╪з┘Д ╪и┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к
  useEffect(() => {
    if (!initialArticle) {
      const fetchArticle = async () => {
        try {
          setLoading(true);

          // ╪з┘Д╪к╪н┘В┘В ┘Е┘Е╪з ╪е╪░╪з ┘Г╪з┘Ж ╪з┘Д┘Е┘В╪з┘Д ┘Е╪п╪╣┘И┘Е┘Л╪з ┘Б┘К ┘И╪╢╪╣ ╪з┘Д╪╖┘И╪з╪▒╪ж
          if (isEmergencyArticleSupported(articleId)) {
            console.log(
              "ЁЯЪи EMERGENCY MODE: ╪з╪│╪к╪о╪п╪з┘Е ╪и┘К╪з┘Ж╪з╪к ┘Е╪д┘В╪к╪й ┘Д┘Д┘Е┘В╪з┘Д",
              articleId
            );

            // ╪з╪│╪к╪о╪п╪з┘Е ┘Е╪│╪з╪▒ ╪з┘Д╪╖┘И╪з╪▒╪ж ╪з┘Д┘Е╪и╪з╪┤╪▒
            try {
              const emergencyResponse = await fetch(
                `/api/articles/${articleId}/emergency`,
                {
                  cache: "no-store",
                }
              );

              if (emergencyResponse.ok) {
                const emergencyData = await emergencyResponse.json();
                if (emergencyData.success) {
                  setArticle(processArticle(emergencyData));
                  setLoading(false);
                  return;
                }
              }
            } catch (emergencyError) {
              console.warn(
                "тЪая╕П ┘Б╪┤┘Д ┘Б┘К ╪м┘Д╪и ╪з┘Д┘Е┘В╪з┘Д ┘Е┘Ж ┘Е╪│╪з╪▒ ╪з┘Д╪╖┘И╪з╪▒╪ж:",
                emergencyError
              );
              handlePrismaError(emergencyError, "╪╖┘И╪з╪▒╪ж ╪з┘Д┘Е┘В╪з┘Д");
              // ┘К╪к╪з╪и╪╣ ┘Д┘Д┘Е╪н╪з┘И┘Д╪й ╪з┘Д╪╣╪з╪п┘К╪й ┘Б┘К ╪н╪з┘Д╪й ┘Б╪┤┘Д ┘Е╪│╪з╪▒ ╪з┘Д╪╖┘И╪з╪▒╪ж
            }
          }

          // ┘Е╪н╪з┘И┘Д╪й ╪м┘Д╪и ╪з┘Д┘Е┘В╪з┘Д ╪з┘Д╪╣╪з╪п┘К╪й ┘Е╪╣ timeout
          const controller = new AbortController();
          const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 ╪л┘И╪з┘Ж┘К

          const response = await fetch(`/api/articles/${articleId}`, {
            signal: controller.signal,
            headers: {
              "Cache-Control": "no-cache",
              Pragma: "no-cache",
            },
          });

          clearTimeout(timeoutId);

          if (response.ok) {
            const data = await response.json();
            setArticle(processArticle(data));
          } else if (response.status === 404) {
            console.warn("╪к╪н╪░┘К╪▒: ╪з┘Д┘Е┘В╪з┘Д ╪║┘К╪▒ ┘Е┘И╪м┘И╪п");
            // ┘К┘Е┘Г┘Ж ╪е╪╢╪з┘Б╪й ┘Е╪╣╪з┘Д╪м╪й ╪о╪з╪╡╪й ┘Д┘Д┘Е┘В╪з┘Д╪з╪к ╪з┘Д┘Е┘Б┘В┘И╪п╪й
            router.push("/404");
          } else {
            // ┘Е╪н╪з┘И┘Д╪й ╪з┘Д┘Г╪┤┘Б ╪╣┘Ж ╪о╪╖╪г ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к
            try {
              const errorData = await response.json();

              // ┘Б╪н╪╡ ┘Е╪к┘В╪п┘Е ┘Д╪г╪о╪╖╪з╪б ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к ╪и╪з╪│╪к╪о╪п╪з┘Е ╪з┘Д╪г╪п╪з╪й ╪з┘Д┘Е╪│╪з╪╣╪п╪й
              if (
                errorData?.error &&
                errorData?.details &&
                isPrismaConnectionError({ message: errorData.details })
              ) {
                console.error(
                  "╪о╪╖╪г ┘Б┘К ╪з╪к╪╡╪з┘Д ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к:",
                  errorData.details
                );
                handlePrismaError({ message: errorData.details }, "╪м┘Д╪и ╪з┘Д┘Е┘В╪з┘Д");
                setDbConnectionError(errorData.details);

                // ╪з┘Д┘Е╪н╪з┘И┘Д╪й ╪и╪з┘Д┘И╪╢╪╣ ╪з┘Д╪╖╪з╪▒╪ж ┘Б┘К ╪н╪з┘Д╪й ╪╣╪п┘Е ╪з┘Д┘Е╪н╪з┘И┘Д╪й ╪│╪з╪и┘В┘Л╪з
                if (!isEmergencyArticleSupported(articleId)) {
                  console.log("тЪая╕П ┘Е╪н╪з┘И┘Д╪й ╪╣╪▒╪╢ ╪з┘Д┘Е┘В╪з┘Д ┘Б┘К ╪з┘Д┘И╪╢╪╣ ╪з┘Д╪╣╪з┘Е");
                  // ╪к┘И╪м┘К┘З ╪з┘Д┘Е╪│╪к╪о╪п┘Е ┘Д╪╡┘Б╪н╪й ╪з┘Д╪╖┘И╪з╪▒╪ж ╪з┘Д╪╣╪з┘Е╪й
                }
              } else {
                console.warn(
                  "╪к╪н╪░┘К╪▒: ┘Б╪┤┘Д ┘Б┘К ╪к╪н┘Е┘К┘Д ╪з┘Д┘Е┘В╪з┘Д╪М ┘Г┘И╪п ╪з┘Д╪з╪│╪к╪м╪з╪и╪й:",
                  response.status,
                  errorData?.error || ""
                );
              }
            } catch (jsonError) {
              console.warn(
                "╪к╪н╪░┘К╪▒: ┘Б╪┤┘Д ┘Б┘К ╪к╪н┘Е┘К┘Д ╪з┘Д┘Е┘В╪з┘Д╪М ┘Г┘И╪п ╪з┘Д╪з╪│╪к╪м╪з╪и╪й:",
                response.status
              );
            }
          }
        } catch (error: any) {
          if (error.name === "AbortError") {
            console.warn("╪к╪н╪░┘К╪▒: ╪з┘Ж╪к┘З╪к ┘Е┘З┘Д╪й ╪к╪н┘Е┘К┘Д ╪з┘Д┘Е┘В╪з┘Д");
          } else if (isPrismaConnectionError(error)) {
            console.error("╪о╪╖╪г ┘Б┘К ╪з╪к╪╡╪з┘Д ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к:", error.message);
            handlePrismaError(error, "╪м┘Д╪и ╪з┘Д┘Е┘В╪з┘Д ┘Б┘К catch");
            setDbConnectionError(error.message);
          } else {
            console.warn(
              "╪к╪н╪░┘К╪▒: ╪о╪╖╪г ┘Б┘К ╪┤╪и┘Г╪й ╪г╪л┘Ж╪з╪б ╪к╪н┘Е┘К┘Д ╪з┘Д┘Е┘В╪з┘Д:",
              error?.message || error
            );
          }
        } finally {
          setLoading(false);
        }
      };

      fetchArticle();
    }
  }, [initialArticle, articleId, router]);

  // ┘Е╪╣╪з┘Д╪м╪й ╪з┘Д┘Е╪н╪к┘И┘Й ╪е┘Д┘Й HTML
  useEffect(() => {
    if (!article?.content) {
      setContentHtml("<p>╪з┘Д┘Е╪н╪к┘И┘Й ╪║┘К╪▒ ┘Е╪к┘И┘Б╪▒ ╪н╪з┘Д┘К╪з┘Л.</p>");
      return;
    }

    // ╪з╪│╪к╪о╪п╪з┘Е ╪з┘Д┘Е╪н╪к┘И┘Й ┘Г┘Е╪з ┘З┘И ╪е╪░╪з ┘Г╪з┘Ж HTML
    if (article.content.includes("<p>") || article.content.includes("<div>")) {
      setContentHtml(article.content);
    } else {
      // ╪к╪н┘И┘К┘Д ╪з┘Д┘Ж╪╡ ╪з┘Д╪╣╪з╪п┘К ╪е┘Д┘Й HTML ╪и╪│┘К╪╖
      const paragraphs = article.content.split("\n\n");
      const html = paragraphs.map((p) => `<p>${p}</p>`).join("");
      setContentHtml(html || "<p>╪з┘Д┘Е╪н╪к┘И┘Й ╪║┘К╪▒ ┘Е╪к┘И┘Б╪▒ ╪и╪┤┘Г┘Д ┘Г╪з┘Е┘Д.</p>");
    }
  }, [article?.content]);

  // ╪з┘Д╪к╪н┘В┘В ┘Е┘Ж ┘И╪м┘И╪п ╪о╪╖╪г ┘Е╪н╪п╪п ┘Б┘К ╪з╪к╪╡╪з┘Д ┘В╪з╪╣╪п╪й ╪з┘Д╪и┘К╪з┘Ж╪з╪к
  const [dbConnectionError, setDbConnectionError] = useState<string | null>(
    null
  );

  // ╪е╪░╪з ┘Д╪з ┘К┘И╪м╪п ┘Е┘В╪з┘Д ┘И╪м╪з╪▒┘К ╪з┘Д╪к╪н┘Е┘К┘Д
  if (dbConnectionError) {
    return (
      <DbConnectionError
        articleId={articleId}
        errorDetail={dbConnectionError}
        showAdminLink={true}
      />
    );
  }

  if (loading || !article) {
    return (
      <div
        style={{
          padding: "3rem",
          textAlign: "center",
          minHeight: "400px",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
        }}
      >
        <div>
          <div
            style={{
              width: "50px",
              height: "50px",
              border: "3px solid #e5e7eb",
              borderTop: "3px solid #2563eb",
              borderRadius: "50%",
              animation: "spin 1s linear infinite",
              margin: "0 auto 1rem",
            }}
          ></div>
          <p style={{ color: "#6b7280" }}>╪м╪з╪▒┘К ╪к╪н┘Е┘К┘Д ╪з┘Д┘Е┘В╪з┘Д...</p>
        </div>
      </div>
    );
  }

  // ┘Ж╪╕╪з┘Е ╪к╪к╪и╪╣ ╪з┘Д╪к┘Б╪з╪╣┘Д ╪з┘Д╪░┘Г┘К - ┘Е╪╣╪╖┘Д ┘Е╪д┘В╪к╪з┘Л ┘Д╪к╪м┘Ж╪и ╪о╪╖╪г AuthProvider
  // const interactionTracking = useUserInteractionTracking(articleId);

  // ┘Е╪╣╪з┘Д╪м╪й ╪з┘Д╪е╪╣╪м╪з╪и
  const handleLike = async () => {
    // interactionTracking.toggleLike();
  };

  // ┘Е╪╣╪з┘Д╪м╪й ╪з┘Д╪н┘Б╪╕
  const handleSave = async () => {
    // interactionTracking.toggleSave();
  };

  // ╪з┘Д╪к╪н┘Г┘Е ┘Б┘К ┘Е╪┤╪║┘Д ╪з┘Д╪╡┘И╪к
  const toggleAudioPlayer = () => {
    if (showAudioPlayer) {
      setShowAudioPlayer(false);
      if (audioRef.current) {
        audioRef.current.pause();
        setIsAudioPlaying(false);
      }
    } else {
      setShowAudioPlayer(true);
    }
  };

  const toggleAudioPlayback = () => {
    if (audioRef.current) {
      if (isAudioPlaying) {
        audioRef.current.pause();
      } else {
        audioRef.current.play();
      }
      setIsAudioPlaying(!isAudioPlaying);
    }
  };

  // ╪н╪│╪з╪и ┘И┘В╪к ╪з┘Д┘В╪▒╪з╪б╪й - ┘Е╪╣ ┘Е╪╣╪з┘Д╪м╪й ╪┤╪з┘Е┘Д╪й ┘Д┘Д╪н╪з┘Д╪з╪к ╪з┘Д╪о╪з╪╡╪й
  const calculateReadingTime = (content: string | null | undefined) => {
    // ┘Е╪╣╪з┘Д╪м╪й ╪з┘Д╪н╪з┘Д╪з╪к ╪з┘Д╪о╪з╪╡╪й
    if (!content) {
      return 1; // ┘В┘К┘Е╪й ╪з┘Б╪к╪▒╪з╪╢┘К╪й (╪п┘В┘К┘В╪й ┘И╪з╪н╪п╪й) ┘Д┘Д┘Е╪н╪к┘И┘Й ╪з┘Д┘Б╪з╪▒╪║
    }

    // ╪н╪│╪з╪и ┘И┘В╪к ╪з┘Д┘В╪▒╪з╪б╪й
    const wordsPerMinute = 200;
    const wordCount = content.split(/\s+/).filter(Boolean).length;
    return Math.max(1, Math.ceil(wordCount / wordsPerMinute));
  };

  // ╪з╪│╪к╪о╪▒╪з╪м ╪з┘Д╪╣┘Ж┘И╪з┘Ж ╪з┘Д┘Б╪▒╪╣┘К ┘Е┘Ж ╪з┘Д┘Е╪н╪к┘И┘Й ╪е╪░╪з ┘Д┘Е ┘К┘Г┘Ж ┘Е┘И╪м┘И╪п
  const getSubtitle = () => {
    // ╪г┘И┘Д┘И┘К╪й ┘Д┘Д╪╣┘Ж┘И╪з┘Ж ╪з┘Д┘Б╪▒╪╣┘К ╪з┘Д┘Е╪н╪п╪п ╪╡╪▒╪з╪н╪й
    if (article.subtitle) return article.subtitle;
    if (article.metadata?.subtitle) return article.metadata.subtitle;
    if (article.description) return article.description;

    // ╪е╪░╪з ┘Д┘Е ┘К┘И╪м╪п╪М ╪з╪│╪к╪о╪▒╪з╪м ┘Е┘Ж ╪и╪п╪з┘К╪й ╪з┘Д┘Е╪н╪к┘И┘Й
    if (article.content) {
      const firstParagraph = article.content
        .split("\n\n")[0] // ╪г┘И┘Д ┘Б┘В╪▒╪й
        .replace(/<[^>]*>/g, "") // ╪е╪▓╪з┘Д╪й HTML tags
        .trim();

      // ╪е╪░╪з ┘Г╪з┘Ж╪к ╪з┘Д┘Б┘В╪▒╪й ╪з┘Д╪г┘И┘Д┘Й ┘В╪╡┘К╪▒╪й ┘И┘Е┘Ж╪з╪│╪и╪й ┘Г╪╣┘Ж┘И╪з┘Ж ┘Б╪▒╪╣┘К
      if (firstParagraph.length > 20 && firstParagraph.length <= 200) {
        return firstParagraph;
      }
    }

    return null;
  };

  // ╪з╪│╪к╪о╪▒╪з╪м ╪з┘Д┘Г┘Д┘Е╪з╪к ╪з┘Д┘Е┘Б╪к╪з╪н┘К╪й
  const getKeywords = () => {
    if (article?.keywords && Array.isArray(article.keywords)) {
      return article.keywords;
    }
    if (article?.seo_keywords) {
      if (typeof article.seo_keywords === "string") {
        return article.seo_keywords
          .split(",")
          .map((k) => k.trim())
          .filter(Boolean);
      }
      if (Array.isArray(article.seo_keywords)) {
        return article.seo_keywords;
      }
    }
    return [];
  };

  const keywords = getKeywords();

  // ╪е╪░╪з ┘Г╪з┘Ж ┘Е┘В╪з┘Д ╪▒╪г┘К╪М ╪з╪│╪к╪о╪п┘Е ╪з┘Д╪к╪╡┘Е┘К┘Е ╪з┘Д┘Е╪о╪╡╪╡
  if (isOpinionArticle) {
    if (isMobile) {
      return <MobileOpinionLayout article={article} />;
    } else {
      return <OpinionArticleLayout article={article} />;
    }
  }

  return (
    <>
      {/* ╪┤╪▒┘К╪╖ ╪з┘Д╪к┘В╪п┘Е ┘Б┘К ╪з┘Д┘В╪▒╪з╪б╪й */}
      <ReadingProgressBar />

      <main className="min-h-screen bg-gray-50 dark:bg-gray-900 pt-0 sm:pt-[64px]">
        {/* ┘Е┘Ж╪╖┘В╪й ╪з┘Д┘Е╪н╪к┘И┘Й ╪з┘Д╪▒╪ж┘К╪│┘К╪й */}
        <div className="relative">
          <article
            ref={viewTrackingRef}
            className="max-w-5xl mx-auto py-4 sm:py-6 lg:py-8"
          >
            {/* ╪▒╪г╪│ ╪з┘Д┘Е┘В╪з┘Д ┘Е╪н╪│┘Ж ┘Д┘Д┘Е┘И╪и╪з┘К┘Д */}
            <header className="mb-2 sm:mb-4">
              {/* Desktop Header - ╪к╪н╪│┘К┘Ж ╪к┘И╪з╪▓┘Ж ╪з┘Д╪╣┘Ж╪з╪╡╪▒ ┘И╪е╪▓╪з┘Д╪й ╪з┘Д╪н╪п┘И╪п */}
              <div className="hidden sm:block px-6 lg:px-8 py-6 lg:py-8 bg-white/60 dark:bg-gray-800/60 backdrop-blur-sm rounded-xl border-0">
                {/* ╪з┘Д╪к╪╡┘Ж┘К┘Б - ┘Е╪н╪з╪░╪з╪й ┘Д┘Д┘К┘Е┘К┘Ж ┘Е╪╣ ╪к╪н╪│┘К┘Ж ╪з┘Д┘З╪з┘Е╪┤ */}
                {article.category && (
                  <div className="flex justify-end mb-5">
                    <Link
                      href={`/categories/${article.category.slug}`}
                      className="inline-flex items-center gap-1.5 sm:gap-2 px-3.5 sm:px-5 py-1.5 sm:py-2.5 rounded-full text-xs sm:text-sm font-medium bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 text-blue-700 dark:text-blue-300 backdrop-blur-sm border border-blue-200/50 dark:border-blue-700/50 hover:shadow-md hover:from-blue-100 hover:to-indigo-100 dark:hover:from-blue-800/30 dark:hover:to-indigo-800/30 transition-all hover:scale-105"
                    >
                      {article.category.icon && (
                        <span className="text-sm sm:text-base">
                          {article.category.icon}
                        </span>
                      )}
                      <span>{article.category.name}</span>
                    </Link>
                  </div>
                )}

                {/* ╪з┘Д╪╣┘Ж┘И╪з┘Ж - ╪к╪н╪│┘К┘Ж ╪з┘Д┘Е╪│╪з┘Б╪з╪к ┘И╪з┘Д┘З┘И╪з┘Е╪┤ */}
                <h1 className="text-3xl sm:text-4xl lg:text-5xl font-bold mb-5 text-gray-900 dark:text-white leading-tight text-right tracking-tight">
                  {article.title}
                </h1>

                {/* ╪з┘Д╪╣┘Ж┘И╪з┘Ж ╪з┘Д┘Б╪▒╪╣┘К - ╪к╪н╪│┘К┘Ж ╪з┘Д┘Е╪╕┘З╪▒ */}
                {getSubtitle() && (
                  <h2 className="text-base sm:text-lg lg:text-xl text-gray-600 dark:text-gray-400 mb-6 text-right leading-relaxed">
                    {getSubtitle()}
                  </h2>
                )}

                {/* ╪з┘Д┘Е╪╣┘Д┘И┘Е╪з╪к ╪з┘Д╪г╪│╪з╪│┘К╪й - Desktop ┘Е╪╣ ┘Е╪н╪з╪░╪з╪й ┘К┘Е┘К┘Ж ┘Г╪з┘Е┘Д╪й ┘И╪е╪▓╪з┘Д╪й ╪з┘Д╪н╪п┘И╪п */}
                <div className="flex flex-wrap items-center justify-end gap-3 sm:gap-5 text-xs sm:text-sm text-gray-500 dark:text-gray-400 mt-6 text-right border-0 article-meta-info">
                  {article.author && (
                    <div className="flex items-center gap-1.5 sm:gap-2 justify-end">
                      <ReporterLink
                        author={article.author as any}
                        size="sm"
                        showIcon={true}
                        showVerification={true}
                        className="truncate max-w-[120px] sm:max-w-none text-xs sm:text-sm text-right"
                      />
                    </div>
                  )}
                  <div className="flex items-center gap-1.5 sm:gap-2 justify-end text-right">
                    <Calendar className="w-3 h-3 sm:w-4 sm:h-4 flex-shrink-0" />
                    <span className="hidden sm:inline text-right">
                      <SafeDateDisplay
                        date={article.published_at || article.created_at || ""}
                        format="full"
                      />
                    </span>
                    <span className="sm:hidden text-right">
                      <SafeDateDisplay
                        date={article.published_at || article.created_at || ""}
                        format="relative"
                      />
                    </span>
                  </div>
                  <div className="flex items-center gap-1.5 sm:gap-2 justify-end text-right">
                    <Clock className="w-3 h-3 sm:w-4 sm:h-4 flex-shrink-0" />
                    <span className="text-right">
                      {article.reading_time ||
                        calculateReadingTime(article.content || "")}{" "}
                      ╪п
                    </span>
                  </div>
                  {article.views !== undefined && (
                    <ArticleViews
                      count={article.views}
                      className="text-xs sm:text-sm text-right"
                    />
                  )}
                </div>
              </div>

              {/* Mobile Header ┘Е╪н╪│┘Ж */}
              <div className="sm:hidden px-2 py-4 mobile-article-header">
                {/* ╪з┘Д╪╣┘Ж┘И╪з┘Ж ╪з┘Д╪▒╪ж┘К╪│┘К - ╪╣╪▒╪╢ ╪г┘Г╪и╪▒ ┘Е╪╣ ┘З┘И╪з┘Е╪┤ ╪г┘В┘Д */}
                <div className="px-1 mb-3">
                  <h1 className="text-2xl xs:text-[26px] font-bold leading-tight text-gray-900 dark:text-white mobile-article-title">
                    {article.title}
                  </h1>
                </div>

                {/* ╪з┘Д╪╣┘Ж┘И╪з┘Ж ╪з┘Д┘Б╪▒╪╣┘К - ╪к╪╡┘Е┘К┘Е ┘Е╪н╪│┘Ж */}
                {getSubtitle() && (
                  <div className="px-1 mb-4">
                    <h2 className="text-sm leading-relaxed text-gray-900 dark:text-gray-100 font-normal mobile-article-subtitle">
                      {getSubtitle()}
                    </h2>
                  </div>
                )}

                {/* ╪н╪з┘И┘К ┘Д┘Д╪к╪╡┘Ж┘К┘Б ┘И┘Е╪╣┘Д┘И┘Е╪з╪к ╪з┘Д┘Ж╪┤╪▒ - ╪к╪о╪╖┘К╪╖ ┘Е╪н╪│┘Ж */}
                <div className="flex items-start justify-between px-1 gap-3 mobile-article-meta">
                  {/* ╪з┘Д╪к╪╡┘Ж┘К┘Б ┘Б┘К ╪з┘Д┘К┘Е┘К┘Ж (RTL friendly) */}
                  <div className="flex-shrink-0 order-2">
                    {article.category && (
                      <Link
                        href={`/categories/${article.category.slug}`}
                        className="inline-flex items-center gap-1.5 px-3 py-1.5 rounded-full text-xs font-medium bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 text-blue-700 dark:text-blue-300 border border-blue-200/50 dark:border-blue-700/50 hover:shadow-sm transition-all mobile-article-category"
                      >
                        {article.category.icon && (
                          <span className="text-sm">
                            {article.category.icon}
                          </span>
                        )}
                        <span>{article.category.name}</span>
                      </Link>
                    )}
                  </div>

                  {/* ┘Е╪╣┘Д┘И┘Е╪з╪к ╪з┘Д┘Ж╪┤╪▒ ┘Б┘К ╪з┘Д┘К╪│╪з╪▒ - ┘Е╪н╪з╪░╪з╪й ┘Е╪╣ ╪з┘Д╪╡┘И╪▒╪й */}
                  <div className="flex flex-col items-start gap-1.5 text-xs text-gray-500 dark:text-gray-400 order-1 flex-1 max-w-[160px] mobile-article-metadata">
                    {/* ╪з┘Д┘Е╪▒╪з╪│┘Д ┘Б┘К ╪│╪╖╪▒ ┘Е┘Ж┘Б╪╡┘Д */}
                    {article.author && (
                      <div className="flex items-center gap-1.5">
                        <ReporterLink
                          author={article.author as any}
                          size="sm"
                          showIcon={true}
                          showVerification={true}
                          className="truncate max-w-[120px] text-xs"
                        />
                      </div>
                    )}

                    {/* ╪з┘Д╪к╪з╪▒┘К╪о ┘И┘И┘В╪к ╪з┘Д┘В╪▒╪з╪б╪й ┘И╪з┘Д┘Е╪┤╪з┘З╪п╪з╪к ┘Б┘К ╪│╪╖╪▒ ┘И╪з╪н╪п */}
                    <div className="flex items-center gap-2 flex-wrap">
                      <div className="flex items-center gap-1">
                        <Calendar className="w-3 h-3 flex-shrink-0 mobile-article-icon" />
                        <span>
                          <SafeDateDisplay
                            date={
                              article.published_at || article.created_at || ""
                            }
                            format="relative"
                          />
                        </span>
                      </div>
                      <span className="text-gray-300 dark:text-gray-600">
                        тАв
                      </span>
                      <div className="flex items-center gap-1">
                        <Clock className="w-3 h-3 flex-shrink-0 mobile-article-icon" />
                        <span>
                          {article.reading_time ||
                            calculateReadingTime(article.content || "")}{" "}
                          ╪п
                        </span>
                      </div>
                      {article.views !== undefined && (
                        <>
                          <span className="text-gray-300 dark:text-gray-600">
                            тАв
                          </span>
                          <ArticleViews
                            count={article.views}
                            className="text-xs"
                          />
                        </>
                      )}
                    </div>
                  </div>
                </div>
              </div>
            </header>

            {/* ╪е╪╣┘Д╪з┘Ж ╪г╪│┘Б┘Д ┘З┘К╪п╪▒ ╪з┘Д┘Е┘В╪з┘Д */}
            <AdBanner placement="article_detail_header" className="mb-6" />
          </article>
        </div>

        {/* ┘Е┘Ж╪╖┘В╪й ╪з┘Д┘Е╪н╪к┘И┘Й */}
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-2">
          <div className="bg-white dark:bg-gray-800 rounded-xl p-4 sm:p-6 lg:p-8">
            {/* ╪╡┘И╪▒╪й ╪з┘Д┘Е┘В╪з┘Д - ╪▒┘Б╪╣ ╪з┘Д╪╡┘И╪▒╪й ┘В┘Д┘К┘Д╪з┘Л ┘Е╪╣ ╪к╪н╪│┘К┘Ж ╪з┘Д┘Е╪│╪з┘Б╪з╪к */}
            {article.featured_image &&
              typeof article.featured_image === "string" &&
              article.featured_image.length > 0 &&
              !article.metadata?.emergency_mode && ( // ╪к╪м┘Ж╪и ╪╣╪▒╪╢ ╪з┘Д╪╡┘И╪▒╪й ┘Б┘К ┘И╪╢╪╣ ╪з┘Д╪╖┘И╪з╪▒╪ж
                <div className="w-full mb-4 mt-4">
                  <ArticleFeaturedImage
                    imageUrl={article.featured_image}
                    title={article.title}
                    category={article.category}
                  />
                </div>
              )}

            {/* ╪з┘Д┘Е┘Д╪о╪╡ ╪з┘Д╪░┘Г┘К ┘Е╪╣ ╪з┘Д╪к╪н┘И┘К┘Д ╪з┘Д╪╡┘И╪к┘К */}
            <div className="mb-6 sm:mb-8">
              <ArticleAISummary
                articleId={article.id}
                title={article.title || "┘Е┘В╪з┘Д ╪и╪п┘И┘Ж ╪╣┘Ж┘И╪з┘Ж"}
                content={article.content || ""}
                existingSummary={
                  article.ai_summary || article.summary || article.excerpt || ""
                }
                className="shadow-lg"
              />
            </div>

            {/* ╪┤╪▒┘К╪╖ ╪з┘Д╪к┘Б╪з╪╣┘Д ╪з┘Д╪░┘Г┘К */}
            <div className="mb-6 sm:mb-8">
              <SmartInteractionButtons
                articleId={article.id}
                initialStats={{
                  likes: article.likes || article.stats?.likes || 0,
                  saves: article.saves || article.stats?.saves || 0,
                  shares: article.shares || article.stats?.shares || 0,
                  comments: article.comments_count || 0,
                }}
                onComment={() => {
                  // ╪к┘Е ╪е╪▓╪з┘Д╪й ┘В╪│┘Е ╪з┘Д╪к╪╣┘Д┘К┘В╪з╪к
                  console.log("╪к┘Е ╪з┘Д┘Ж┘В╪▒ ╪╣┘Д┘Й ╪з┘Д╪к╪╣┘Д┘К┘В╪з╪к");
                }}
              />
            </div>

            {/* ╪з┘Д┘Г┘Д┘Е╪з╪к ╪з┘Д┘Е┘Б╪к╪з╪н┘К╪й */}
            {keywords.length > 0 && (
              <div className="mb-6 sm:mb-8">
                <div className="flex flex-wrap gap-1.5 sm:gap-2">
                  {keywords.map((keyword, index) => (
                    <Link
                      key={index}
                      href={`/tags/${encodeURIComponent(keyword)}`}
                      className="inline-flex items-center gap-1 px-2.5 sm:px-3 py-1 sm:py-1.5 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 text-xs sm:text-sm font-medium rounded-full hover:bg-blue-100 dark:hover:bg-blue-900/30 hover:text-blue-600 dark:hover:text-blue-400 transition-all hover:scale-105 hover:shadow-sm"
                    >
                      <Hash className="w-2.5 h-2.5 sm:w-3 sm:h-3" />
                      <span>{keyword}</span>
                    </Link>
                  ))}
                </div>
              </div>
            )}

            {/* ╪▓╪▒ ┘И╪╢╪╣ ╪з┘Д┘В╪▒╪з╪б╪й */}
            <div className="mb-6 sm:mb-8 flex justify-end">
              <button
                onClick={() => setIsReading(!isReading)}
                className={`flex items-center gap-2 px-4 py-2 rounded-lg transition-all ${
                  isReading
                    ? "bg-blue-500 text-white"
                    : "bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300"
                } hover:opacity-90`}
              >
                <BookOpen className="w-4 h-4" />
                <span className="text-sm font-medium">
                  {isReading ? "╪е┘К┘В╪з┘Б ┘И╪╢╪╣ ╪з┘Д┘В╪▒╪з╪б╪й" : "┘И╪╢╪╣ ╪з┘Д┘В╪▒╪з╪б╪й"}
                </span>
              </button>
            </div>

            {/* ┘Е╪н╪к┘И┘Й ╪з┘Д┘Е┘В╪з┘Д */}
            <div className="mb-12">
              <div
                className={`prose max-w-none dark:prose-invert arabic-article-content
                  prose-headings:text-gray-900 dark:prose-headings:text-white
                  prose-p:text-gray-700 dark:prose-p:text-gray-300
                  prose-p:leading-relaxed
                  prose-img:rounded-xl prose-img:shadow-xl
                  prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-a:no-underline hover:prose-a:underline
                  prose-strong:text-gray-900 dark:prose-strong:text-white
                  prose-blockquote:border-blue-500 dark:prose-blockquote:border-blue-400
                  prose-blockquote:bg-blue-50 dark:prose-blockquote:bg-blue-900/20
                  prose-blockquote:py-1 prose-blockquote:px-4 prose-blockquote:rounded-lg
                  ${isReading ? "prose-xl" : "prose-lg"}
                `}
                dangerouslySetInnerHTML={{ __html: contentHtml }}
              />
            </div>

            {/* ╪е╪╡┘Д╪з╪н ╪з┘Д╪к┘И╪м┘З ╪з┘Д╪╣╪▒╪и┘К ┘Д┘Д┘Е╪н╪к┘И┘Й */}
            <style jsx>{`
              .arabic-article-content p {
                text-align: right !important;
                direction: rtl !important;
              }

              .arabic-article-content * {
                text-align: right !important;
                direction: rtl !important;
              }

              .arabic-article-content h1,
              .arabic-article-content h2,
              .arabic-article-content h3,
              .arabic-article-content h4,
              .arabic-article-content h5,
              .arabic-article-content h6 {
                text-align: right !important;
                direction: rtl !important;
              }

              .arabic-article-content blockquote {
                text-align: right !important;
                direction: rtl !important;
                border-right: 4px solid #3b82f6 !important;
                border-left: none !important;
              }
            `}</style>
          </div>

          {/* ╪е╪н╪╡╪з╪ж┘К╪з╪к ╪з┘Д┘Е┘В╪з┘Д */}
          <div className="mt-8 sm:mt-12">
            <ArticleStatsBlock
              views={article.views || 0}
              likes={article.likes || article.stats?.likes || 0}
              saves={article.saves || article.stats?.saves || 0}
              shares={article.shares || article.stats?.shares || 0}
              category={
                article.category
                  ? {
                      name: article.category.name,
                      color: article.category.color,
                      icon: article.category.icon,
                    }
                  : undefined
              }
              growthRate={Math.floor(Math.random() * 60)} // ┘Ж╪│╪и╪й ┘Ж┘Е┘И ╪╣╪┤┘И╪з╪ж┘К╪й ┘Д┘Д╪╣╪▒╪╢
            />
          </div>

          {/* ╪з┘Д┘Е╪н╪к┘И┘Й ╪з┘Д┘Е╪о╪╡╪╡ ╪и╪░┘Г╪з╪б - ┘Ж╪╕╪з┘Е ╪з┘Д╪к┘И╪╡┘К╪з╪к ╪з┘Д╪┤╪о╪╡┘К */}
          <div className="mt-6 sm:mt-8">
            <SmartPersonalizedContent
              articleId={article.id}
              categoryId={article.category_id}
              categoryName={article.category?.name}
              tags={article.keywords || []}
              darkMode={darkMode}
              userId={undefined} // ┘К┘Е┘Г┘Ж ╪к┘Е╪▒┘К╪▒ ┘Е╪╣╪▒┘Б ╪з┘Д┘Е╪│╪к╪о╪п┘Е ╪╣┘Ж╪п ╪з┘Д╪к╪│╪м┘К┘Д
            />
          </div>
        </div>
      </main>
      <Footer />
    </>
  );
}
