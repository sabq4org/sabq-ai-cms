#!/usr/bin/env node

// ูุฑุงูุจ ุงุณุชูุฑุงุฑ ุฎุงุฏู ุงูุชุทููุฑ
const http = require('http');
const { spawn } = require('child_process');

function checkServer() {
  const req = http.request({
    hostname: 'localhost',
    port: 3000,
    path: '/',
    method: 'GET',
    timeout: 5000
  }, (res) => {
    console.log(`โ ุงูุฎุงุฏู ูุนูู ุจุดูู ุตุญูุญ - Status: ${res.statusCode}`);
  });

  req.on('error', (err) => {
    console.log(`โ ุฎุทุฃ ูู ุงูุฎุงุฏู: ${err.message}`);
    console.log('๐ ุฅุนุงุฏุฉ ุชุดุบูู ุงูุฎุงุฏู...');
    restartServer();
  });

  req.on('timeout', () => {
    console.log('โฐ ุงูุชูุช ูููุฉ ุงูุงุณุชุฌุงุจุฉ');
    req.destroy();
  });

  req.end();
}

function restartServer() {
  // ุฅููุงู ุงูุฎุงุฏู ุงูุญุงูู
  spawn('pkill', ['-f', 'next dev'], { stdio: 'inherit' });
  
  // ุงูุชุธุงุฑ ูููู ุซู ุฅุนุงุฏุฉ ุงูุชุดุบูู
  setTimeout(() => {
    console.log('๐ ุจุฏุก ุชุดุบูู ุฎุงุฏู ุฌุฏูุฏ...');
    const server = spawn('npm', ['run', 'dev'], { 
      stdio: 'inherit',
      env: { ...process.env, NODE_OPTIONS: '--max-old-space-size=4096' }
    });
    
    server.on('error', (err) => {
      console.error('โ ูุดู ูู ุชุดุบูู ุงูุฎุงุฏู:', err);
    });
  }, 2000);
}

// ูุญุต ุฏูุฑู ูู 30 ุซุงููุฉ
setInterval(checkServer, 30000);

// ูุญุต ููุฑู
checkServer();

console.log('๐ ุจุฏุก ูุฑุงูุจุฉ ุงูุฎุงุฏู...'); 