#!/usr/bin/env node
/**
 * ุชุดุฎูุต ุดุงูู ููุดุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
 */

const { exec } = require('child_process');
const { promisify } = require('util');
const execAsync = promisify(exec);

console.log('๐ ุชุดุฎูุต ุดุงูู ููุงุนุฏุฉ ุงูุจูุงูุงุช...\n');

// 1. ูุญุต ูุชุบูุฑุงุช ุงูุจูุฆุฉ
console.log('1๏ธโฃ ูุญุต ูุชุบูุฑุงุช ุงูุจูุฆุฉ:');
console.log(`   DATABASE_URL: ${process.env.DATABASE_URL ? 'โ ููุฌูุฏ' : 'โ ููููุฏ'}`);
console.log(`   DIRECT_URL: ${process.env.DIRECT_URL ? 'โ ููุฌูุฏ' : 'โ ููููุฏ'}`);

// 2. ูุญุต ุงูุฑุงุจุท
console.log('\n2๏ธโฃ ุชุญููู ุฑุงุจุท ูุงุนุฏุฉ ุงูุจูุงูุงุช:');
const dbUrl = process.env.DATABASE_URL;
if (dbUrl) {
  try {
    const url = new URL(dbUrl);
    console.log(`   - ุงููุถูู: ${url.hostname}`);
    console.log(`   - ุงููููุฐ: ${url.port}`);
    console.log(`   - ุงุณู ูุงุนุฏุฉ ุงูุจูุงูุงุช: ${url.pathname.slice(1)}`);
    console.log(`   - ุงููุณุชุฎุฏู: ${url.username}`);
    console.log(`   - SSL: ${url.searchParams.get('sslmode')}`);
  } catch (error) {
    console.log(`   โ ุฎุทุฃ ูู ุชุญููู ุงูุฑุงุจุท: ${error.message}`);
  }
}

// 3. ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจุงูุดุจูุฉ
console.log('\n3๏ธโฃ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจุงูุดุจูุฉ:');
const testNetwork = async () => {
  try {
    const { stdout } = await execAsync('ping -c 3 primary.sabqdb--7mcgps947hwt.addon.code.run');
    console.log('   โ ุงูุงุชุตุงู ุจุงูุดุจูุฉ ูุฌุญ');
  } catch (error) {
    console.log('   โ ูุดู ุงูุงุชุตุงู ุจุงูุดุจูุฉ');
    console.log(`   ุชูุงุตูู: ${error.message}`);
  }
};

// 4. ุงุฎุชุจุงุฑ ุงููููุฐ
console.log('\n4๏ธโฃ ุงุฎุชุจุงุฑ ุงููููุฐ 5432:');
const testPort = async () => {
  try {
    const { stdout } = await execAsync('nc -zv primary.sabqdb--7mcgps947hwt.addon.code.run 5432');
    console.log('   โ ุงููููุฐ 5432 ูุชุงุญ');
  } catch (error) {
    console.log('   โ ุงููููุฐ 5432 ุบูุฑ ูุชุงุญ');
    console.log(`   ุชูุงุตูู: ${error.message}`);
  }
};

// 5. ุชูุตูุงุช ุงูุญู
console.log('\n๐ง ุชูุตูุงุช ุงูุญู:');
console.log('   1. ุชุญูู ูู ุญุงูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู ููุญุฉ Northflank');
console.log('   2. ุชุฃูุฏ ูู ุฃู ุงูุฎุงุฏู ูุนูู');
console.log('   3. ุชุญูู ูู ุฅุนุฏุงุฏุงุช ุงูุดุจูุฉ ูุงูู Firewall');
console.log('   4. ุฌุฑุจ ุงุณุชุฎุฏุงู Supabase ูุจุฏูู ูุคูุช');
console.log('   5. ุชุญูู ูู ุตุญุฉ ุจูุงูุงุช ุงูุงุชุตุงู');

// ุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช
async function runDiagnostics() {
  await testNetwork();
  await testPort();

  console.log('\n๐ ุงูุฎูุงุตุฉ:');
  console.log('   - ุฅุฐุง ูุงูุช ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ุชูุดูุ ูุฅู ูุงุนุฏุฉ Northflank ุบูุฑ ูุชุงุญุฉ ุญุงููุงู');
  console.log('   - ุงุณุชุฎุฏู Supabase ูุจุฏูู ุญุชู ูุชู ุญู ุงููุดููุฉ');
}

runDiagnostics().catch(console.error);
