generator client {
  provider      = "prisma-client-js"
  output        = "../lib/generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                 String   @id
  email              String   @unique
  password_hash      String?
  name               String?
  avatar             String?
  role               String
  is_admin           Boolean
  is_verified        Boolean
  verification_token String?
  reset_token        String?
  reset_token_expiry DateTime? @db.Timestamp(6)
  created_at         DateTime  @db.Timestamp(6)
  updated_at         DateTime  @db.Timestamp(6)
  
  // علاقات
  articles           articles[]
  comments           comments[]
  loyalty_points     loyalty_points[]
  activity_logs      activity_logs[]
  interactions       interactions[]
}

model categories {
  id            String   @id
  name          String
  slug          String
  description   String?
  display_order Int
  is_active     Boolean
  color         String?  @db.VarChar(50)
  icon          String?  @db.VarChar(50)
  metadata      Json?
  name_en       String?
  parent_id     String?
  created_at    DateTime @db.Timestamp(6)
  updated_at    DateTime @db.Timestamp(6)
  
  // علاقات
  articles      articles[]
}

model articles {
  id                String    @id
  title             String    @db.VarChar(500)
  slug              String    @db.VarChar(500)
  content           String
  excerpt           String?
  author_id         String
  category_id       String?
  status            String
  featured          Boolean
  breaking          Boolean
  featured_image    String?
  published_at      DateTime? @db.Timestamp(6)
  scheduled_for     DateTime? @db.Timestamp(6)
  views             Int
  reading_time      Int?
  seo_title         String?
  seo_description   String?
  seo_keywords      String?
  social_image      String?
  allow_comments    Boolean
  metadata          Json?
  created_at        DateTime  @db.Timestamp(6)
  updated_at        DateTime  @db.Timestamp(6)
  audio_summary_url String?
  likes             Int
  saves             Int
  shares            Int
  
  // علاقات
  author            users             @relation(fields: [author_id], references: [id])
  category          categories?       @relation(fields: [category_id], references: [id])
  comments          comments[]
  deep_analyses     deep_analyses[]
  interactions      interactions[]
  @@map("articles")
}

model comments {
  id         String   @id
  article_id String
  user_id    String?
  parent_id  String?
  content    String
  status     String
  likes      Int
  metadata   Json?
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
  
  // علاقات
  article    articles? @relation(fields: [article_id], references: [id])
  user       users?    @relation(fields: [user_id], references: [id])
  parent     comments? @relation("CommentReplies", fields: [parent_id], references: [id])
  replies    comments[] @relation("CommentReplies")
}

model loyalty_points {
  id             String   @id
  user_id        String
  points         Int
  action         String   @db.VarChar(100)
  reference_id   String?
  reference_type String?
  metadata       Json?
  created_at     DateTime @default(now()) @db.Timestamp(6)
  
  // علاقات
  user           users    @relation(fields: [user_id], references: [id])
}

model deep_analyses {
  id                  String   @id
  article_id          String
  ai_summary          String?
  key_topics          Json?
  tags                Json?
  sentiment           String?
  readability_score   Decimal? @db.Decimal
  engagement_score    Int?
  suggested_headlines Json?
  related_articles    Json?
  metadata            Json?
  analyzed_at         DateTime @db.Timestamp(6)
  updated_at          DateTime @db.Timestamp(6)
  
  // علاقات
  article             articles @relation(fields: [article_id], references: [id])
}

model activity_logs {
  id          String   @id
  user_id     String?
  action      String
  entity_type String?
  entity_id   String?
  old_value   Json?
  new_value   Json?
  metadata    Json?
  ip_address  String?  @db.VarChar(45)
  user_agent  String?
  created_at  DateTime @db.Timestamp(6)
  
  // علاقات
  user        users?   @relation(fields: [user_id], references: [id])
}

model roles {
  id           String   @id
  name         String   @db.VarChar(100)
  slug         String?
  display_name String?
  description  String?
  permissions  Json?
  is_system    Boolean
  created_at   DateTime @db.Timestamp(6)
  updated_at   DateTime @db.Timestamp(6)
}

model user_preferences {
  id         String   @id
  user_id    String
  key        String
  value      Json
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model user_roles {
  id         String    @id
  user_id    String
  role_id    String
  granted_by String?
  granted_at DateTime  @db.Timestamp(6)
  expires_at DateTime? @db.Timestamp(6)
}

model keywords {
  id         String   @id
  name       String
  slug       String
  count      Int
  created_at DateTime @db.Timestamp(6)
}

model messages {
  id            String    @id
  from_user_id  String?
  to_user_id    String?
  email         String
  subject       String?   @db.VarChar(500)
  message       String
  status        String
  replied_at    DateTime? @db.Timestamp(6)
  reply_content String?
  metadata      Json?
  created_at    DateTime  @db.Timestamp(6)
}

model timeline_events {
  id             String   @id
  event_type     String   @db.VarChar(50)
  entity_type    String   @db.VarChar(50)
  entity_id      String?
  title          String   @db.VarChar(500)
  description    String?
  icon           String?  @db.VarChar(50)
  url            String?  @db.VarChar(500)
  user_id        String?
  author_name    String?  @db.VarChar(255)
  author_avatar  String?
  category_name  String?  @db.VarChar(255)
  category_color String?  @db.VarChar(50)
  metadata       Json?
  is_important   Boolean
  created_at     DateTime @db.Timestamp(6)
}

model team_members {
  id            String   @id
  name          String   @db.VarChar(255)
  role          String   @db.VarChar(100)
  department    String?  @db.VarChar(100)
  bio           String?
  avatar        String?
  email         String?  @db.VarChar(255)
  phone         String?  @db.VarChar(50)
  social_links  Json?
  is_active     Boolean
  display_order Int
  created_at    DateTime @db.Timestamp(6)
  updated_at    DateTime @db.Timestamp(6)
}

model smart_blocks {
  id            String    @id
  name          String    @db.VarChar(255)
  type          String    @db.VarChar(50)
  config        Json
  ai_config     Json?
  display_rules Json?
  is_active     Boolean
  last_updated  DateTime? @db.Timestamp(6)
  performance   Json?
  created_at    DateTime  @db.Timestamp(6)
  updated_at    DateTime  @db.Timestamp(6)
}

model home_blocks_config {
  id            String   @id
  block_type    String   @db.VarChar(50)
  title         String   @db.VarChar(255)
  subtitle      String?  @db.VarChar(255)
  settings      Json
  display_order Int
  is_active     Boolean
  created_at    DateTime @db.Timestamp(6)
  updated_at    DateTime @db.Timestamp(6)
}

model site_settings {
  id         String   @id
  section    String   @db.VarChar(50)
  data       Json
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
}

model templates {
  id           String   @id
  name         String   @db.VarChar(255)
  slug         String   @db.VarChar(255)
  description  String?
  category     String   @db.VarChar(50)
  content      Json
  variables    Json?
  preview_data Json?
  is_active    Boolean
  usage_count  Int
  created_by   String?
  created_at   DateTime @db.Timestamp(6)
  updated_at   DateTime @db.Timestamp(6)
}

model was_news {
  id               String   @id @default(uuid())
  news_NUM         Int
  news_DT          DateTime @db.Timestamp(6)
  news_basket_CD   Int
  news_class_CD    Int
  news_priority_CD Int
  is_Report        Boolean
  title_TXT        String
  story_TXT        String?
  media            Json?
  royalType        Int?
  keywords         Json?
  related_news_CD  Int?
  is_imported      Boolean
  imported_to_id   String?
  created_at       DateTime @db.Timestamp(6)
  updated_at       DateTime @db.Timestamp(6)
}

model user_reading_sessions {
  id               String    @id @db.VarChar(36)
  user_id          String    @db.VarChar(36)
  article_id       String    @db.VarChar(36)
  started_at       DateTime? @db.Timestamptz(6)
  ended_at         DateTime? @db.Timestamptz(6)
  duration_seconds Int?
  read_percentage  Float?
  scroll_depth     Float?
  device_type      String?   @db.VarChar(50)
  time_of_day      Int?
  created_at       DateTime? @db.Timestamptz(6)
}

model user_insights {
  id                      String    @id @db.VarChar(36)
  user_id                 String    @db.VarChar(36)
  total_reads             Int?
  total_saved             Int?
  total_interactions      Int?
  avg_read_time           Float?
  preferred_reading_time  String?   @db.VarChar(50)
  reader_type             String?   @db.VarChar(50)
  diversity_score         Float?
  preferred_categories    Json?
  preferred_article_types Json?
  avg_article_length      Int?
  weekly_reads            Int?
  weekly_streak           Int?
  last_read_date          DateTime? @db.Timestamptz(6)
  calculated_at           DateTime? @db.Timestamptz(6)
  updated_at              DateTime? @updatedAt @db.Timestamptz(6)
}

model user_similar_readers {
  id                String    @id @db.VarChar(36)
  user_id           String    @db.VarChar(36)
  similar_user_id   String    @db.VarChar(36)
  similarity_score  Float?
  common_categories Json?
  calculated_at     DateTime? @db.Timestamptz(6)
}

// جدول رموز التحقق من البريد الإلكتروني
model email_verification_codes {
  id         String   @id
  email      String   @db.VarChar(255)
  code       String   @db.VarChar(6)
  user_id    String?
  expires_at DateTime
  used_at    DateTime?
  created_at DateTime @default(now())

  @@index([email])
  @@index([code])
  @@index([expires_at])
}

model interactions {
  id         String            @id @db.VarChar(36)
  user_id    String            @db.VarChar(36)
  article_id String            @db.VarChar(36)
  type       interactions_type
  created_at DateTime          @default(now()) @db.Timestamptz(6)

  // Relations
  article    articles          @relation(fields: [article_id], references: [id])
  user       users             @relation(fields: [user_id], references: [id])

  @@unique([user_id, article_id, type])
  @@index([article_id])
  @@index([user_id])
}

enum interactions_type {
  like
  save
  share
  comment
  view
} 