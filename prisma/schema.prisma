generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "rhel-openssl-1.0.x", "rhel-openssl-3.0.x"]
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model EmailJob {
  id            String          @id
  template_id   String?
  scheduled_at  DateTime?
  started_at    DateTime?
  completed_at  DateTime?
  status        EmailJob_status @default(queued)
  target_filter Json?
  metadata      Json?
  stats         Json?
  created_at    DateTime        @default(now())
  updated_at    DateTime

  @@index([status, scheduled_at])
}

model EmailLog {
  id              String          @id
  job_id          String?
  subscriber_id   String
  provider_msg_id String?
  message_id      String?
  status          EmailLog_status @default(pending)
  error           String?
  opened_at       DateTime?
  clicked_at      DateTime?
  unsubscribed_at DateTime?
  meta            Json?
  event_at        DateTime        @default(now())

  @@index([status])
  @@index([subscriber_id])
}

model EmailProviderConfig {
  id              String                   @id
  type            EmailProviderConfig_type @default(smtp)
  sender_name     String
  sender_email    String
  api_key         String?
  host            String?
  port            Int?
  username        String?
  password        String?
  footer_html     String?
  unsubscribe_url String?
  created_at      DateTime                 @default(now())
  updated_at      DateTime
}

model EmailTemplate {
  id           String   @id
  name         String   @db.VarChar(255)
  subject      String   @db.VarChar(500)
  html_content String
  text_content String?
  metadata     Json?
  created_at   DateTime @default(now())
  updated_at   DateTime
}

model Subscriber {
  id          String            @id
  email       String            @unique
  name        String?           @db.VarChar(255)
  status      Subscriber_status @default(active)
  preferences Json?
  metadata    Json?
  created_at  DateTime          @default(now())
  updated_at  DateTime
}

model activity_logs {
  id          String   @id
  user_id     String?
  action      String
  entity_type String?
  entity_id   String?
  old_value   Json?
  new_value   Json?
  metadata    Json?
  ip_address  String?  @db.VarChar(45)
  user_agent  String?
  created_at  DateTime @default(now())
}

model analytics_data {
  id           String   @id
  date         DateTime @db.Date
  metric_name  String   @db.VarChar(100)
  metric_value Decimal  @db.Decimal(15, 2)
  dimensions   Json?
  metadata     Json?
  created_at   DateTime @default(now())

  @@unique([date, metric_name])
  @@index([date])
  @@index([metric_name])
}

model article_keywords {
  id         String   @id
  article_id String
  keyword_id String
  created_at DateTime @default(now())

  @@unique([article_id, keyword_id])
  @@index([article_id])
  @@index([keyword_id])
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model articles {
  id                String              @id
  title             String              @db.VarChar(500)
  slug              String              @db.VarChar(500)
  content           String
  excerpt           String?
  author_id         String
  category_id       String?
  status            String              @default("draft")
  featured          Boolean             @default(false)
  breaking          Boolean             @default(false)
  featured_image    String?
  published_at      DateTime?
  scheduled_for     DateTime?
  views             Int                 @default(0)
  reading_time      Int?
  seo_title         String?
  seo_description   String?
  seo_keywords      String?
  social_image      String?
  allow_comments    Boolean             @default(true)
  metadata          Json?
  created_at        DateTime            @default(now())
  updated_at        DateTime
  audio_summary_url String?
  likes             Int                 @default(0)
  saves             Int                 @default(0)
  shares            Int                 @default(0)

  // New fields for enhanced article system
  article_author_id String?
  summary           String?             // ملخص تلقائي
  ai_quotes         String[]            // اقتباسات ذكية
  tags              String[]            // كلمات مفتاحية
  article_type      String              @default("opinion") // نوع المقال
  is_opinion_leader Boolean             @default(false) // قائد الرأي اليوم

  // Existing relationships
  categories        categories?         @relation(fields: [category_id], references: [id])
  interactions      interactions[]

  // Author relationship (existing)
  author            users?              @relation("ArticleAuthor", fields: [author_id], references: [id])

  // New article author relationship
  article_author    article_authors?    @relation(fields: [article_author_id], references: [id])

  // AI system relationships
  ml_predictions    MLPredictions[]
  sentiment_analyses SentimentAnalysis[]
  article_quotes    article_quotes[]

  @@index([article_author_id])
  @@index([article_type])
  @@index([tags])
}

model audio_episodes {
  id                String         @id
  program_id        String
  episode_number    Int?
  title             String
  content           String
  audio_url         String?
  duration          Int?
  voice_model       String         @default("bradford")
  scheduled_at      DateTime?
  published_at      DateTime?
  status            String         @default("draft")
  generation_status String         @default("pending")
  views             Int            @default(0)
  metadata          Json?
  created_at        DateTime       @default(now())
  updated_at        DateTime
  created_by        String?
  users             users?         @relation(fields: [created_by], references: [id])
  audio_programs    audio_programs @relation(fields: [program_id], references: [id], onDelete: Cascade)

  @@index([program_id])
  @@index([scheduled_at])
  @@index([status])
}

model audio_newsletters {
  id           String   @id
  title        String
  content      String
  audioUrl     String
  duration     Int
  voice_id     String
  voice_name   String
  language     String   @default("ar")
  category     String?
  is_published Boolean  @default(false)
  is_featured  Boolean  @default(false)
  is_main_page Boolean  @default(false) // إضافة حقل جديد للصفحة الرئيسية
  play_count   Int      @default(0)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)

  @@index([created_at])
  @@index([is_featured])
  @@index([is_published])
  @@index([is_main_page]) // إضافة index للحقل الجديد
}

model audio_programs {
  id                 String           @id
  name               String
  description        String?
  short_description  String?
  logo_url           String?
  thumbnail_url      String?
  preferred_duration Int?
  voice_model        String           @default("bradford")
  display_position   String           @default("header")
  display_order      Int              @default(0)
  status             String           @default("active")
  slug               String           @unique
  settings           Json?
  created_at         DateTime         @default(now())
  updated_at         DateTime
  created_by         String?
  audio_episodes     audio_episodes[]
  users              users?           @relation(fields: [created_by], references: [id])

  @@index([slug])
  @@index([status])
}

model audio_scheduled_jobs {
  id              String    @id
  episode_id      String
  job_type        String
  scheduled_for   DateTime
  status          String    @default("pending")
  attempts        Int       @default(0)
  last_attempt_at DateTime?
  error_message   String?
  completed_at    DateTime?
  created_at      DateTime  @default(now())

  @@index([episode_id])
  @@index([scheduled_for])
  @@index([status])
}

model categories {
  id            String     @id
  name          String
  slug          String     @unique
  description   String?
  display_order Int        @default(0)
  is_active     Boolean    @default(true)
  color         String?    @db.VarChar(50)
  icon          String?    @db.VarChar(50)
  metadata      Json?
  name_en       String?
  parent_id     String?
  created_at    DateTime   @default(now())
  updated_at    DateTime
  articles      articles[]
  muqtarab_corners MuqtarabCorner[]
  user_interests   user_interests[]
}

model comments {
  id         String   @id
  article_id String
  user_id    String?
  parent_id  String?
  content    String
  status     String   @default("pending")
  likes      Int      @default(0)
  metadata   Json?
  created_at DateTime @default(now())
  updated_at DateTime
}

model daily_doses {
  id               String             @id
  period           daily_doses_period
  title            String             @db.VarChar(500)  // العنوان الرئيسي
  subtitle         String             @db.VarChar(500)  // العنوان الفرعي
  date             DateTime           @db.Date
  status           daily_doses_status @default(draft)
  publishedAt      DateTime?
  views            Int                @default(0)
  metadata         Json?

  // إضافات الجرعات الذكية
  topics           String[]           @default([])      // مواضيع الجرعة
  source_articles  String[]           @default([])      // معرفات المقالات المستخدمة
  generated_by_ai  Boolean            @default(false)   // مولدة بالذكاء الاصطناعي
  ai_prompt_used   String?                              // البرومبت المستخدم
  user_id          String?                              // للجرعات المخصصة
  is_global        Boolean            @default(true)    // جرعة عامة
  interaction_count Int               @default(0)       // عدد التفاعلات
  share_count      Int                @default(0)       // عدد المشاركات
  created_by       String?                              // المحرر
  editor_notes     String?                              // ملاحظات المحرر

  createdAt        DateTime           @default(now())
  updatedAt        DateTime

  // العلاقات
  feedback         smart_dose_feedback[]
  user             users?             @relation("UserDoses", fields: [user_id], references: [id], onDelete: Cascade)
  creator          users?             @relation("DoseCreator", fields: [created_by], references: [id])

  @@unique([date, period])
  @@unique([date, period, user_id]) // جرعة واحدة لكل فترة يومياً لكل مستخدم
  @@index([date])
  @@index([period])
  @@index([status])
  @@index([user_id, period])
  @@index([is_global, period])
}

model deep_analyses {
  id                  String   @id
  article_id          String
  ai_summary          String?
  key_topics          Json?
  tags                Json?
  sentiment           String?
  readability_score   Decimal? @db.Decimal(5, 2)
  engagement_score    Int?
  suggested_headlines Json?
  related_articles    Json?
  metadata            Json?
  analyzed_at         DateTime @default(now())
  updated_at          DateTime
}

model dose_contents {
  id           String                    @id
  doseId       String
  articleId    String?
  contentType  dose_contents_contentType
  title        String                    @db.VarChar(500)
  summary      String
  audioUrl     String?
  imageUrl     String?
  displayOrder Int                       @default(0)
  metadata     Json?
  createdAt    DateTime                  @default(now())

  @@index([articleId])
  @@index([doseId])
}

model email_verification_codes {
  id         String    @id
  email      String    @db.VarChar(255)
  code       String    @db.VarChar(6)
  user_id    String?
  expires_at DateTime
  used_at    DateTime?
  created_at DateTime  @default(now())

  @@index([code])
  @@index([email])
  @@index([expires_at])
}

model forum_badges {
  id           String    @id
  name         String    @db.VarChar(255)
  name_ar      String    @db.VarChar(255)
  description  String?
  icon         String?   @db.VarChar(50)
  color        String?   @db.VarChar(50)
  requirements Json?
  points       Int?      @default(0)
  is_active    Boolean?  @default(true)
  created_at   DateTime? @default(now())
  updated_at   DateTime? @default(now())
}

model forum_categories {
  id            String    @id
  name          String    @db.VarChar(255)
  name_ar       String    @db.VarChar(255)
  slug          String    @unique(map: "slug") @db.VarChar(255)
  description   String?
  icon          String?   @db.VarChar(50)
  color         String?   @db.VarChar(50)
  display_order Int?      @default(0)
  is_active     Boolean?  @default(true)
  created_at    DateTime? @default(now())
  updated_at    DateTime? @default(now())

  @@index([display_order])
  @@index([slug])
}

model forum_follows {
  id          String                    @id
  user_id     String
  target_type forum_follows_target_type
  target_id   String
  created_at  DateTime?                 @default(now())

  @@unique([user_id, target_type, target_id])
  @@index([target_type, target_id])
  @@index([user_id])
}

model forum_notifications {
  id          String    @id
  user_id     String
  type        String    @db.VarChar(50)
  target_type String?   @db.VarChar(50)
  target_id   String?
  data        Json?
  is_read     Boolean?  @default(false)
  created_at  DateTime? @default(now())

  @@index([created_at])
  @@index([user_id, is_read])
}

model forum_replies {
  id          String                @id
  topic_id    String
  parent_id   String?
  author_id   String
  content     String
  is_accepted Boolean?              @default(false)
  status      forum_replies_status? @default(active)
  edited_at   DateTime?
  edited_by   String?
  created_at  DateTime?             @default(now())
  updated_at  DateTime?             @default(now())

  @@index([author_id])
  @@index([created_at])
  @@index([parent_id])
  @@index([topic_id])
}

model forum_reports {
  id          String                    @id
  reporter_id String
  target_type forum_reports_target_type
  target_id   String
  reason      String                    @db.VarChar(255)
  description String?
  status      forum_reports_status?     @default(pending)
  resolved_by String?
  resolved_at DateTime?
  created_at  DateTime?                 @default(now())

  @@index([reporter_id])
  @@index([status])
  @@index([target_type, target_id])
}

model forum_reputation {
  id          String    @id
  user_id     String
  points      Int?      @default(0)
  action_type String    @db.VarChar(50)
  target_type String?   @db.VarChar(50)
  target_id   String?
  description String?
  created_at  DateTime? @default(now())

  @@index([created_at])
  @@index([user_id])
}

model forum_topics {
  id            String               @id
  title         String               @db.VarChar(500)
  content       String
  author_id     String
  category_id   String
  is_pinned     Boolean?             @default(false)
  is_locked     Boolean?             @default(false)
  is_featured   Boolean?             @default(false)
  status        forum_topics_status? @default(active)
  views         Int?                 @default(0)
  last_reply_at DateTime?
  last_reply_by String?
  created_at    DateTime?            @default(now())
  updated_at    DateTime?            @default(now())

  @@index([author_id])
  @@index([category_id])
  @@index([last_reply_at])
  @@index([status, created_at])
}

model forum_user_badges {
  id        String    @id
  user_id   String
  badge_id  String
  earned_at DateTime? @default(now())

  @@unique([user_id, badge_id])
  @@index([badge_id])
  @@index([user_id])
}

model forum_votes {
  id          String                  @id
  user_id     String
  target_type forum_votes_target_type
  target_id   String
  vote_type   forum_votes_vote_type
  created_at  DateTime?               @default(now())

  @@unique([user_id, target_type, target_id])
  @@index([target_type, target_id])
  @@index([user_id])
}

model home_blocks_config {
  id            String   @id
  block_type    String   @db.VarChar(50)
  title         String   @db.VarChar(255)
  subtitle      String?  @db.VarChar(255)
  settings      Json
  display_order Int      @default(0)
  is_active     Boolean  @default(true)
  created_at    DateTime @default(now())
  updated_at    DateTime
}

model interactions {
  id         String            @id
  user_id    String
  article_id String
  type       interactions_type
  created_at DateTime          @default(now())
  articles   articles          @relation(fields: [article_id], references: [id])
  users      users             @relation(fields: [user_id], references: [id])

  @@unique([user_id, article_id, type])
  @@index([article_id, type, created_at(sort: Desc)], map: "idx_interactions_article_type")
  @@index([article_id])
  @@index([user_id])
}

model keywords {
  id         String   @id
  name       String
  slug       String
  count      Int      @default(0)
  created_at DateTime @default(now())
}

model loyalty_points {
  id             String   @id
  user_id        String
  points         Int
  action         String   @db.VarChar(100)
  reference_id   String?
  reference_type String?
  metadata       Json?
  created_at     DateTime @default(now())
}

model messages {
  id            String    @id
  from_user_id  String?
  to_user_id    String?
  email         String
  subject       String?   @db.VarChar(500)
  message       String
  status        String    @default("unread")
  replied_at    DateTime?
  reply_content String?
  metadata      Json?
  created_at    DateTime  @default(now())
}

model opinion_articles {
  id              String                @id
  title           String
  content         String
  excerpt         String?
  authorId        String
  category        String
  status          OpinionArticle_status @default(draft)
  isActive        Boolean               @default(true)
  views           Int                   @default(0)
  likes           Int                   @default(0)
  shares          Int                   @default(0)
  saves           Int                   @default(0)
  readingTime     Int?
  featuredImage   String?
  audioUrl        String?
  seoKeywords     String[]
  publishedAt     DateTime?
  metadata        Json?
  createdAt       DateTime              @default(now())
  updatedAt       DateTime
  opinion_authors opinion_authors       @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@index([authorId])
  @@index([category])
  @@index([publishedAt])
  @@index([status, isActive])
}

model opinion_authors {
  id               String             @id
  name             String
  email            String?            @unique
  title            String?
  avatarUrl        String?
  bio              String?
  category         String?
  twitterUrl       String?
  linkedinUrl      String?
  websiteUrl       String?
  isActive         Boolean            @default(true)
  displayOrder     Int?
  metadata         Json?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  opinion_articles opinion_articles[]
}

model password_reset_tokens {
  id         String    @id
  user_id    String
  token      String    @unique @db.VarChar(255)
  expires_at DateTime
  used_at    DateTime?
  created_at DateTime  @default(now())

  @@index([expires_at])
  @@index([token])
  @@index([user_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model roles {
  id           String   @id
  name         String   @unique @db.VarChar(100)
  slug         String?
  display_name String?
  description  String?
  permissions  Json?
  is_system    Boolean  @default(false)
  created_at   DateTime @default(now())
  updated_at   DateTime
}

model site_settings {
  id         String   @id
  section    String   @db.VarChar(50)
  data       Json
  created_at DateTime @default(now())
  updated_at DateTime
}

model smart_blocks {
  id            String    @id
  name          String    @db.VarChar(255)
  type          String    @db.VarChar(50)
  config        Json
  ai_config     Json?
  display_rules Json?
  is_active     Boolean   @default(true)
  last_updated  DateTime?
  performance   Json?
  created_at    DateTime  @default(now())
  updated_at    DateTime
}

model team_members {
  id            String   @id
  name          String   @db.VarChar(255)
  role          String   @db.VarChar(100)
  department    String?  @db.VarChar(100)
  bio           String?
  avatar        String?
  email         String?  @db.VarChar(255)
  phone         String?  @db.VarChar(50)
  social_links  Json?
  is_active     Boolean  @default(true)
  display_order Int      @default(0)
  created_at    DateTime @default(now())
  updated_at    DateTime
}

model template_previews {
  id          String   @id
  template_id String
  title       String   @db.VarChar(500)
  content     String
  metadata    Json?
  created_at  DateTime @default(now())

  @@index([template_id])
}

model templates {
  id           String   @id
  name         String   @db.VarChar(255)
  slug         String   @db.VarChar(255)
  description  String?
  category     String   @db.VarChar(50)
  content      Json
  variables    Json?
  preview_data Json?
  is_active    Boolean  @default(true)
  usage_count  Int      @default(0)
  created_by   String?
  created_at   DateTime @default(now())
  updated_at   DateTime
}

model timeline_events {
  id             String   @id
  event_type     String   @db.VarChar(50)
  entity_type    String   @db.VarChar(50)
  entity_id      String?
  title          String   @db.VarChar(500)
  description    String?
  icon           String?  @db.VarChar(50)
  url            String?  @db.VarChar(500)
  user_id        String?
  author_name    String?  @db.VarChar(255)
  author_avatar  String?
  category_name  String?  @db.VarChar(255)
  category_color String?  @db.VarChar(50)
  metadata       Json?
  is_important   Boolean  @default(false)
  created_at     DateTime @default(now())
}

model user_insights {
  id                      String    @id @db.VarChar(36)
  user_id                 String    @unique @db.VarChar(36)
  total_reads             Int?      @default(0)
  total_saved             Int?      @default(0)
  total_interactions      Int?      @default(0)
  avg_read_time           Float?
  preferred_reading_time  String?   @db.VarChar(50)
  reader_type             String?   @db.VarChar(50)
  diversity_score         Float?
  preferred_categories    Json?
  preferred_article_types Json?
  avg_article_length      Int?
  weekly_reads            Int?      @default(0)
  weekly_streak           Int?      @default(0)
  last_read_date          DateTime? @db.Timestamptz(6)
  calculated_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at              DateTime? @default(now()) @db.Timestamptz(6)
}

model user_preferences {
  id         String   @id
  user_id    String
  key        String
  value      Json
  created_at DateTime @default(now())
  updated_at DateTime

  @@unique([user_id, key])
  @@index([user_id])
}

model user_reading_sessions {
  id               String    @id @db.VarChar(36)
  user_id          String    @db.VarChar(36)
  article_id       String    @db.VarChar(36)
  started_at       DateTime? @default(now()) @db.Timestamptz(6)
  ended_at         DateTime? @db.Timestamptz(6)
  duration_seconds Int?
  read_percentage  Float?
  scroll_depth     Float?
  device_type      String?   @db.VarChar(50)
  time_of_day      Int?
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
}

model user_roles {
  id         String    @id
  user_id    String
  role_id    String
  granted_by String?
  granted_at DateTime  @default(now())
  expires_at DateTime?
}

model user_similar_readers {
  id                String    @id @db.VarChar(36)
  user_id           String    @db.VarChar(36)
  similar_user_id   String    @db.VarChar(36)
  similarity_score  Float?
  common_categories Json?
  calculated_at     DateTime? @default(now()) @db.Timestamptz(6)

  @@unique([user_id, similar_user_id])
}

model users {
  id                   String                 @id
  email                String                 @unique
  password_hash        String?
  name                 String?
  avatar               String?
  role                 String                 @default("user")
  is_admin             Boolean                @default(false)
  is_verified          Boolean                @default(false)
  verification_token   String?
  reset_token          String?
  reset_token_expiry   DateTime?
  created_at           DateTime               @default(now())
  updated_at           DateTime

  // Existing relationships
  audio_episodes       audio_episodes[]
  audio_programs       audio_programs[]
  interactions         interactions[]

  // Articles authored by this user
  authored_articles    articles[]             @relation("ArticleAuthor")

  // Reporter profile relationship
  reporter_profile     reporters?

  // New AI system relationships
  user_settings        UserSettings[]
  ml_predictions       MLPredictions[]
  sentiment_analyses   SentimentAnalysis[]
  smart_notifications  SmartNotifications[]
  user_recommendations UserRecommendations[]
  search_queries       SearchQueries[]

  // Muqtarab relationships
  muqtarab_corners     MuqtarabCorner[]
  muqtarab_articles    MuqtarabArticle[]
  muqtarab_interactions MuqtarabInteraction[]
  muqtarab_analytics   MuqtarabAnalytics[]
  muqtarab_followers   MuqtarabFollower[]
  muqtarab_comments    MuqtarabComment[]

  // Smart Doses relationships
  user_doses           daily_doses[]          @relation("UserDoses")
  created_doses        daily_doses[]          @relation("DoseCreator")
  dose_feedback        smart_dose_feedback[]  @relation("DoseFeedbackUser")
  dose_templates       smart_dose_templates[] @relation("DoseTemplateCreator")

  // User interests relationship
  interests            user_interests[]

  @@index([email], map: "idx_users_email")
  @@index([role], map: "idx_users_role")
  @@index([email])
  @@index([role])
}

// ==============================================================
// نموذج بروفايل المراسل الذكي
// ==============================================================

model reporters {
  id                    String   @id @default(cuid())
  user_id               String   @unique

  // معلومات الهوية
  full_name             String
  slug                  String   @unique  // للـ URL
  title                 String?            // مثل "مراسل ميداني", "محرر اقتصادي"
  bio                   String?           // النبذة المهنية
  avatar_url            String?

  // التحقق والمكانة
  is_verified           Boolean  @default(false)
  verification_badge    String?  @default("verified") // "verified", "expert", "senior"

  // التخصصات والتغطية
  specializations       Json?    // ["اقتصاد", "سياسة", "رياضة"]
  coverage_areas        Json?    // ["الرياض", "المنطقة الشرقية", "دولي"]
  languages             Json?    @default("[\"ar\"]") // ["ar", "en"]

  // روابط التواصل
  twitter_url           String?
  linkedin_url          String?
  website_url           String?
  email_public          String?  // بريد عام للتواصل

  // إحصائيات الأداء
  total_articles        Int      @default(0)
  total_views           Int      @default(0)
  total_likes           Int      @default(0)
  total_shares          Int      @default(0)
  avg_reading_time      Float?
  engagement_rate       Float    @default(0.0)

  // تحليل ذكي
  writing_style         Json?    // تحليل أسلوب الكتابة
  popular_topics        Json?    // أكثر المواضيع كتابة
  publication_pattern   Json?    // نمط النشر (أوقات، أيام)
  reader_demographics   Json?    // تحليل الجمهور

  // إعدادات العرض
  is_active             Boolean  @default(true)
  show_stats            Boolean  @default(true)
  show_contact          Boolean  @default(false)
  display_order         Int?

  // التواريخ
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  // العلاقات
  user                  users    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("reporters")
  @@index([slug])
  @@index([is_active])
  @@index([is_verified])
  @@index([total_articles])
}

model was_news {
  id               String   @id
  news_NUM         Int      @unique
  news_DT          DateTime
  news_basket_CD   Int
  news_class_CD    Int
  news_priority_CD Int
  is_Report        Boolean  @default(false)
  title_TXT        String
  story_TXT        String?
  media            Json?
  royalType        Int?
  keywords         Json?
  related_news_CD  Int?
  is_imported      Boolean  @default(false)
  imported_to_id   String?
  created_at       DateTime @default(now())
  updated_at       DateTime @default(now())

  @@index([created_at])
  @@index([is_imported])
  @@index([news_DT])
  @@index([news_basket_CD])
}

enum EmailJob_status {
  queued
  sending
  completed
  cancelled
  failed
}

enum EmailLog_status {
  pending
  sent
  delivered
  bounced
  opened
  clicked
  unsubscribed
  failed
}

enum EmailProviderConfig_type {
  smtp
  sendgrid
  mailgun
  ses
}

enum OpinionArticle_status {
  draft
  published
  archived
}

enum Subscriber_status {
  active
  inactive
  unsubscribed
}

enum daily_doses_period {
  morning
  afternoon
  evening
  night
}

enum daily_doses_status {
  draft
  published
  scheduled
  archived
}

enum dose_contents_contentType {
  article
  weather
  quote
  tip
  audio
  analysis
}

enum forum_follows_target_type {
  topic
  user
  category
}

enum forum_replies_status {
  active
  pending
  hidden
  deleted
}

enum forum_reports_status {
  pending
  resolved
  dismissed
}

enum forum_reports_target_type {
  topic
  reply
}

enum forum_topics_status {
  active
  pending
  hidden
  deleted
}

enum forum_votes_target_type {
  topic
  reply
}

enum forum_votes_vote_type {
  like
  dislike
}

enum interactions_type {
  like
  save
  share
  comment
  view
  reading_session
}

// ==============================================
// 🧠 نماذج الأنظمة المتقدمة - سبق الذكية
// ==============================================

// ⚙️ الإعدادات المتقدمة
model SystemSettings {
  id                String   @id @default(cuid())
  module            String   // 'general', 'typography', 'theme', 'ai'
  category          String   // فئة فرعية للإعداد
  key               String   // مفتاح الإعداد
  value             Json     // قيمة الإعداد (مرنة)
  data_type         String   // نوع البيانات: string, number, boolean, json
  description       String?  // وصف الإعداد
  is_public         Boolean  @default(false) // هل يمكن للمستخدمين رؤيته
  is_user_editable  Boolean  @default(false) // هل يمكن للمستخدمين تعديله
  default_value     Json?    // القيمة الافتراضية
  validation_rules  Json?    // قواعد التحقق
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  @@unique([module, category, key])
  @@index([module, category])
}

// 🎨 إعدادات المستخدم الشخصية
model UserSettings {
  id                String   @id @default(cuid())
  user_id           String
  module            String
  key               String
  value             Json
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  users             users    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, module, key])
  @@index([user_id, module])
}

// 🧪 نماذج التعلم الآلي
model MLModels {
  id                String           @id @default(cuid())
  name              String           @unique
  type              MLModelType      // نوع النموذج
  version           String
  description       String?
  status            MLModelStatus    @default(training)
  config            Json             // تكوين النموذج
  hyperparameters   Json?            // المعاملات الفائقة
  training_data     Json?            // معلومات بيانات التدريب
  performance_metrics Json?          // مقاييس الأداء
  model_path        String?          // مسار ملف النموذج
  api_endpoint      String?          // نقطة نهاية API
  is_active         Boolean          @default(false)
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt

  // العلاقات
  training_jobs     MLTrainingJobs[]
  predictions       MLPredictions[]
}

model MLTrainingJobs {
  id                String            @id @default(cuid())
  model_id          String
  status            TrainingStatus    @default(queued)
  dataset_config    Json              // تكوين مجموعة البيانات
  training_config   Json              // تكوين التدريب
  progress          Float             @default(0)
  metrics           Json?             // مقاييس التدريب
  error_log         String?
  started_at        DateTime?
  completed_at      DateTime?
  created_at        DateTime          @default(now())

  model             MLModels          @relation(fields: [model_id], references: [id], onDelete: Cascade)

  @@index([model_id, status])
}

model MLPredictions {
  id                String           @id @default(cuid())
  model_id          String
  input_data        Json             // البيانات المدخلة
  prediction        Json             // النتيجة المتوقعة
  confidence_score  Float?           // مستوى الثقة
  processing_time   Int?             // وقت المعالجة بالميلي ثانية
  user_id           String?          // المستخدم المرتبط
  article_id        String?          // المقال المرتبط
  created_at        DateTime         @default(now())

  model             MLModels         @relation(fields: [model_id], references: [id], onDelete: Cascade)
  user              users?           @relation(fields: [user_id], references: [id], onDelete: SetNull)
  article           articles?        @relation(fields: [article_id], references: [id], onDelete: SetNull)

  @@index([model_id, created_at])
  @@index([user_id, created_at])
}

// 💭 تحليل المشاعر
model SentimentAnalysis {
  id                String           @id @default(cuid())
  content_id        String           // معرف المحتوى (مقال، تعليق، إلخ)
  content_type      String           // نوع المحتوى
  text_content      String           // النص المحلل
  sentiment_score   Float            // نتيجة المشاعر (-1 إلى 1)
  sentiment_label   SentimentLabel   // تصنيف المشاعر
  confidence        Float            // مستوى الثقة
  emotions          Json?            // المشاعر التفصيلية
  keywords          String[]         // الكلمات المفتاحية المؤثرة
  language          String           @default("ar")
  model_version     String           // إصدار نموذج التحليل
  processed_at      DateTime         @default(now())

  // User relationships (optional)
  user_id           String?
  user              users?           @relation(fields: [user_id], references: [id], onDelete: SetNull)

  // Article relationships (optional)
  article_id        String?
  article           articles?        @relation(fields: [article_id], references: [id], onDelete: SetNull)

  @@index([content_type, sentiment_label])
  @@index([processed_at])
  @@index([user_id])
  @@index([article_id])
}

// 🔔 نظام الإشعارات المتقدم
model SmartNotifications {
  id                String              @id @default(cuid())
  user_id           String?
  title             String
  message           String
  type              NotificationType
  priority          NotificationPriority @default(medium)
  category          String?             // فئة الإشعار
  data              Json?               // بيانات إضافية
  scheduled_at      DateTime?           // وقت الإرسال المجدول
  sent_at           DateTime?
  read_at           DateTime?
  clicked_at        DateTime?
  status            NotificationStatus  @default(pending)
  delivery_channels String[]            // قنوات التوصيل
  ai_optimized      Boolean            @default(false) // محسن بالذكاء الاصطناعي
  personalization_score Float?          // نتيجة التخصيص
  created_at        DateTime           @default(now())

  user              users?             @relation(fields: [user_id], references: [id], onDelete: SetNull)

  @@index([user_id, status])
  @@index([scheduled_at, status])
  @@index([type, priority])
}

// ⚡ مراقبة الأداء
model PerformanceMetrics {
  id                String           @id @default(cuid())
  metric_type       String           // نوع المقياس
  metric_name       String           // اسم المقياس
  value             Float            // القيمة
  unit              String?          // الوحدة
  context           Json?            // سياق إضافي
  timestamp         DateTime         @default(now())
  tags              String[]         // علامات للتصفية

  @@index([metric_type, timestamp])
  @@index([metric_name, timestamp])
}

// 🎯 نظام التوصيات
model RecommendationModels {
  id                String           @id @default(cuid())
  name              String           @unique
  type              RecommendationType
  algorithm         String           // خوارزمية التوصية
  config            Json             // تكوين النموذج
  is_active         Boolean          @default(false)
  performance_score Float?           // نتيجة الأداء
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt

  recommendations   UserRecommendations[]
}

model UserRecommendations {
  id                String              @id @default(cuid())
  user_id           String
  model_id          String
  recommended_items Json                // العناصر الموصى بها
  confidence_scores Json                // نتائج الثقة
  reason            String?             // سبب التوصية
  clicked_items     String[]            // العناصر التي تم النقر عليها
  feedback_score    Float?              // تقييم المستخدم
  created_at        DateTime            @default(now())
  expires_at        DateTime?           // انتهاء صلاحية التوصية

  user              users               @relation(fields: [user_id], references: [id], onDelete: Cascade)
  model             RecommendationModels @relation(fields: [model_id], references: [id], onDelete: Cascade)

  @@index([user_id, created_at])
  @@index([model_id, created_at])
}

// 🔍 البحث الذكي
model SearchQueries {
  id                String           @id @default(cuid())
  user_id           String?
  query             String
  query_vector      Json?            // تمثيل vectorial للاستعلام
  filters           Json?            // فلاتر البحث
  results_count     Int              @default(0)
  clicked_results   String[]         // النتائج التي تم النقر عليها
  search_time_ms    Int?             // وقت البحث
  result_quality    Float?           // جودة النتائج
  session_id        String?          // معرف الجلسة
  ip_address        String?
  user_agent        String?
  created_at        DateTime         @default(now())

  user              users?           @relation(fields: [user_id], references: [id], onDelete: SetNull)

  @@index([user_id, created_at])
  @@index([query, created_at])
}

// 📊 التحليلات المتقدمة
model AdvancedAnalytics {
  id                String           @id @default(cuid())
  metric_category   String           // فئة المقياس
  metric_name       String           // اسم المقياس
  dimensions        Json             // الأبعاد (تصنيفات، مستخدمين، إلخ)
  measures          Json             // القياسات (عدد، مجموع، متوسط، إلخ)
  time_period       String           // الفترة الزمنية
  aggregation_level String           // مستوى التجميع
  filters           Json?            // فلاتر مطبقة
  raw_data          Json?            // البيانات الخام
  computed_at       DateTime         @default(now())

  @@index([metric_category, time_period])
  @@index([metric_name, computed_at])
}

// 🌐 البيانات الخارجية
model ExternalDataSources {
  id                String           @id @default(cuid())
  name              String           @unique
  type              String           // RSS, API, WebScraping
  url               String
  config            Json             // تكوين المصدر
  last_sync         DateTime?
  sync_frequency    String           // تكرار المزامنة
  is_active         Boolean          @default(true)
  error_count       Int              @default(0)
  success_count     Int              @default(0)
  created_at        DateTime         @default(now())
  updated_at        DateTime         @updatedAt

  imported_content  ExternalContent[]
}

model ExternalContent {
  id                String              @id @default(cuid())
  source_id         String
  external_id       String              // معرف في المصدر الخارجي
  title             String
  content           String?
  summary           String?
  url               String?
  published_at      DateTime?
  category          String?
  tags              String[]
  metadata          Json?
  import_status     ImportStatus        @default(pending)
  processed_at      DateTime?
  created_at        DateTime            @default(now())

  source            ExternalDataSources @relation(fields: [source_id], references: [id], onDelete: Cascade)

  @@unique([source_id, external_id])
  @@index([source_id, import_status])
}

// ==============================================
// 🔧 التعدادات (Enums) للأنظمة الجديدة
// ==============================================

enum MLModelType {
  classification
  regression
  clustering
  recommendation
  nlp
  computer_vision
  time_series
  neural_network
  transformer
}

enum MLModelStatus {
  training
  trained
  deployed
  failed
  deprecated
}

enum TrainingStatus {
  queued
  running
  completed
  failed
  cancelled
}

enum SentimentLabel {
  very_negative
  negative
  neutral
  positive
  very_positive
}

enum NotificationType {
  breaking_news
  article_recommendation
  system_alert
  user_engagement
  performance_warning
  content_moderation
  ai_insight
}

enum NotificationPriority {
  low
  medium
  high
  urgent
}

enum NotificationStatus {
  pending
  scheduled
  sent
  delivered
  read
  failed
}

enum RecommendationType {
  content_based
  collaborative_filtering
  hybrid
  deep_learning
  knowledge_based
}

enum ImportStatus {
  pending
  processing
  completed
  failed
  duplicate
  rejected
}

// ==============================================================
// نماذج نظام الكيانات الذكية والروابط المتقدمة
// ==============================================================

// جدول أنواع الكيانات
model SmartEntityTypes {
  id          String @id
  name        String @unique // person, organization, location, etc.
  name_ar     String
  icon        String // إيموجي أو أيقونة
  color       String // لون hex للتمييز البصري
  description String?
  is_active   Boolean @default(true)

  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  // Relations
  entities    SmartEntities[]

  @@map("smart_entity_types")
}

// جدول الكيانات الذكية
model SmartEntities {
  id               String @id @default(cuid())

  // معلومات أساسية
  name             String
  name_ar          String?
  name_en          String?
  entity_type_id   String
  description      String?
  short_bio        String?

  // تقييم الأهمية
  importance_score Int     @default(5) // 1-10
  is_active        Boolean @default(true)
  is_verified      Boolean @default(false)

  // أسماء بديلة ومرادفات
  aliases          Json?   // ["اسم بديل 1", "اسم بديل 2"]

  // روابط ومعلومات خارجية
  official_website String?
  wikipedia_url    String?
  social_media     Json?   // {twitter: "", linkedin: "", instagram: ""}

  // معلومات زمنية
  birth_date       DateTime?
  start_date       DateTime? // تاريخ بداية المشروع/المنصب
  end_date         DateTime? // تاريخ النهاية

  // موقع جغرافي
  location         String?
  country          String?  @default("SA")
  region           String?

  // معلومات SEO
  slug             String?  @unique
  seo_keywords     String?

  // الشعبية والتفاعل
  mention_count    Int      @default(0) // عدد مرات الذكر في المقالات
  click_count      Int      @default(0) // عدد النقرات على الروابط
  last_mentioned   DateTime?

  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  // Relations
  entity_type      SmartEntityTypes @relation(fields: [entity_type_id], references: [id])
  entity_links_source EntityLinks[] @relation("SourceEntity")
  entity_links_target EntityLinks[] @relation("TargetEntity")
  smart_links      SmartArticleLinks[]

  @@map("smart_entities")
  @@index([entity_type_id])
  @@index([importance_score])
  @@index([mention_count])
}

// جدول الروابط بين الكيانات (علاقات)
model EntityLinks {
  id                String   @id @default(cuid())
  source_entity_id  String
  target_entity_id  String
  relationship_type String   // works_at, member_of, located_in, part_of, etc.
  relationship_ar   String?  // يعمل في، عضو في، يقع في، جزء من
  strength          Int      @default(1) // قوة العلاقة 1-10
  is_active         Boolean  @default(true)

  source_entity     SmartEntities @relation("SourceEntity", fields: [source_entity_id], references: [id])
  target_entity     SmartEntities @relation("TargetEntity", fields: [target_entity_id], references: [id])

  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  @@map("entity_links")
  @@unique([source_entity_id, target_entity_id, relationship_type])
}

// جدول الروابط الذكية في المقالات
model SmartArticleLinks {
  id              String   @id @default(cuid())
  article_id      String   // معرف المقال
  entity_id       String

  // معلومات الرابط في النص
  matched_text    String   // النص الذي تم ربطه
  context_before  String?  // السياق قبل الكلمة
  context_after   String?  // السياق بعد الكلمة
  position        Int      // موقع الرابط في النص
  confidence      Float    @default(1.0) // مستوى الثقة في الربط

  // نوع الرابط
  link_type       String   // entity, tooltip, modal, external
  target_url      String?  // الرابط المستهدف
  tooltip_content String?  // محتوى tooltip

  // حالة الرابط
  is_approved     Boolean  @default(false) // موافقة المحرر
  is_active       Boolean  @default(true)
  auto_generated  Boolean  @default(true)  // تم إنشاؤه تلقائياً

  // إحصائيات
  clicks          Int      @default(0)
  impressions     Int      @default(0)
  last_clicked    DateTime?

  entity          SmartEntities @relation(fields: [entity_id], references: [id])

  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("smart_article_links")
  @@index([article_id])
  @@index([entity_id])
  @@index([is_approved])
}

// جدول المصطلحات والتعاريف
model SmartTerms {
  id              String   @id @default(cuid())

  term_ar         String?
  term_en         String?

  definition      String   // التعريف المختصر
  detailed_def    String?  // التعريف المفصل
  example         String?  // مثال على الاستخدام

  category        String?  // اقتصادي، سياسي، تقني، طبي
  difficulty      String   @default("medium") // easy, medium, hard

  // مرادفات
  synonyms        Json?    // ["الناتج المحلي", "GDP", "إجمالي الناتج المحلي"]

  // روابط خارجية
  reference_url   String?
  wikipedia_url   String?

  usage_count     Int      @default(0)
  is_active       Boolean  @default(true)

  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("smart_terms")
  @@index([category])
  @@index([usage_count])
}

// جدول تتبع أداء الروابط الذكية
model LinkAnalytics {
  id              String   @id @default(cuid())
  link_id         String?  // معرف الرابط الذكي
  article_id      String
  entity_id       String?

  // نوع الحدث
  event_type      String   // click, impression, hover, copy

  // معلومات المستخدم (مجهولة)
  user_agent      String?
  ip_hash         String?  // hash للـ IP
  session_id      String?

  // معلومات السياق
  referrer        String?
  time_on_page    Int?     // بالثواني
  scroll_depth    Float?   // 0.0 - 1.0

  // معلومات الجهاز
  device_type     String?  // mobile, desktop, tablet
  browser_type    String?

  timestamp       DateTime @default(now())

  @@map("link_analytics")
  @@index([article_id])
  @@index([entity_id])
  @@index([event_type])
  @@index([timestamp])
}

// 🎯 ============ وحدة مُقترَب (Muqtarab) ============ //

// جدول الزوايا الرئيسي
model MuqtarabCorner {
  id            String   @id @default(cuid())
  name          String   // اسم الزاوية
  slug          String   @unique // رابط مخصص
  author_name   String   // اسم الكاتب المسؤول
  author_bio    String?  // نبذة عن الكاتب
  cover_image   String?  // صورة الغلاف
  description   String?  // وصف الزاوية

  // التصنيف
  category_id   String?
  category      categories? @relation(fields: [category_id], references: [id])

  // إعدادات الذكاء الاصطناعي
  ai_enabled    Boolean  @default(true)

  // حالة الزاوية
  is_active     Boolean  @default(true)
  is_featured   Boolean  @default(false)

  // معلومات الإنشاء
  created_by    String?
  creator       users?   @relation(fields: [created_by], references: [id])

  // التواريخ
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // العلاقات
  articles      MuqtarabArticle[]
  analytics     MuqtarabAnalytics[]
  followers     MuqtarabFollower[]

  @@map("muqtarab_corners")
  @@index([slug])
  @@index([is_active])
  @@index([created_by])
  @@index([category_id])
}

// جدول المقالات/المواضيع
model MuqtarabArticle {
  id                    String   @id @default(cuid())

  // ربط بالزاوية
  corner_id             String
  corner                MuqtarabCorner @relation(fields: [corner_id], references: [id], onDelete: Cascade)

  // محتوى المقال
  title                 String   // العنوان
  slug                  String   @unique // رابط المقال
  content               String   @db.Text // المحتوى الكامل
  excerpt               String?  // مقتطف
  cover_image           String?  // صورة الغلاف

  // معلومات المؤلف
  author_name           String?  // يمكن أن يكون مختلف عن كاتب الزاوية
  author_bio            String?
  author_avatar         String?

  // الكلمات المفتاحية
  tags                  String[] // كلمات مفتاحية للتوافق مع تفضيلات المستخدم

  // إعدادات المقال
  is_featured           Boolean  @default(false)
  read_time             Int?     // وقت القراءة المتوقع بالدقائق

  // الجدولة والنشر
  publish_at            DateTime?
  status                String   @default("draft") // draft, published, archived, scheduled

  // تحليلات الذكاء الاصطناعي
  ai_sentiment          String?  // ساخر، تأملي، عاطفي، تحليلي، إلهامي
  ai_compatibility_score Int?    @default(0) // نسبة ملاءمة 0-100
  ai_summary            String?  // ملخص تلقائي
  ai_keywords           String[] // كلمات مفتاحية مستخرجة بالـ AI
  ai_mood               String?  // حالة النص العامة

  // إحصائيات أساسية
  view_count            Int      @default(0)
  like_count            Int      @default(0)
  share_count           Int      @default(0)
  comment_count         Int      @default(0)

  // معلومات الإنشاء
  created_by            String?
  creator               users?   @relation(fields: [created_by], references: [id])

  // التواريخ
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  // العلاقات
  analytics             MuqtarabAnalytics[]
  interactions          MuqtarabInteraction[]
  comments              MuqtarabComment[]

  @@map("muqtarab_articles")
  @@index([corner_id])
  @@index([slug])
  @@index([status])
  @@index([publish_at])
  @@index([is_featured])
  @@index([ai_sentiment])
  @@index([created_by])
  @@index([created_at])
}

// جدول تفاعلات المستخدمين
model MuqtarabInteraction {
  id            String   @id @default(cuid())

  // ربط بالمقال والمستخدم
  article_id    String
  article       MuqtarabArticle @relation(fields: [article_id], references: [id], onDelete: Cascade)

  user_id       String?
  user          users?   @relation(fields: [user_id], references: [id])

  // نوع التفاعل
  interaction_type String // like, save, share, comment, follow_corner

  // بيانات إضافية
  metadata      Json?    // لحفظ بيانات إضافية حسب نوع التفاعل

  // معلومات الجلسة (للمستخدمين غير المسجلين)
  session_id    String?
  ip_hash       String?

  created_at    DateTime @default(now())

  @@map("muqtarab_interactions")
  @@index([article_id])
  @@index([user_id])
  @@index([interaction_type])
  @@index([session_id])
  @@unique([article_id, user_id, interaction_type])
}

// جدول تحليلات القراءة المتقدمة
model MuqtarabAnalytics {
  id                String   @id @default(cuid())

  // ربط بالمقال والزاوية
  article_id        String?
  article           MuqtarabArticle? @relation(fields: [article_id], references: [id], onDelete: Cascade)

  corner_id         String?
  corner            MuqtarabCorner? @relation(fields: [corner_id], references: [id], onDelete: Cascade)

  // معلومات المستخدم
  user_id           String?
  user              users?   @relation(fields: [user_id], references: [id])

  // بيانات الجلسة
  session_id        String?
  ip_hash           String?

  // إحصائيات القراءة
  view_duration     Int?     // مدة المشاهدة بالثواني
  scroll_depth      Float?   // عمق التمرير (0.0 - 1.0)
  completion_rate   Float?   // نسبة إكمال القراءة

  // مصدر الوصول
  referrer_source   String?  // social, search, direct, internal
  referrer_url      String?
  utm_source        String?
  utm_medium        String?
  utm_campaign      String?

  // معلومات الجهاز
  device_type       String?  // mobile, desktop, tablet
  browser_type      String?
  operating_system  String?
  screen_resolution String?

  // الموقع الجغرافي (تقريبي)
  country_code      String?
  city              String?

  // تحليلات سلوكية
  bounce_rate       Boolean  @default(false) // هل غادر مباشرة؟
  return_visitor    Boolean  @default(false) // زائر عائد؟

  // وقت الزيارة
  visit_hour        Int?     // ساعة الزيارة (0-23)
  visit_day         Int?     // يوم الأسبوع (1-7)

  created_at        DateTime @default(now())

  @@map("muqtarab_analytics")
  @@index([article_id])
  @@index([corner_id])
  @@index([user_id])
  @@index([session_id])
  @@index([referrer_source])
  @@index([device_type])
  @@index([created_at])
}

// جدول متابعة الزوايا
model MuqtarabFollower {
  id         String   @id @default(cuid())

  // ربط بالزاوية والمستخدم
  corner_id  String
  corner     MuqtarabCorner @relation(fields: [corner_id], references: [id], onDelete: Cascade)

  user_id    String
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  // إعدادات الإشعارات
  notifications_enabled Boolean @default(true)
  email_notifications   Boolean @default(false)

  created_at DateTime @default(now())

  @@map("muqtarab_followers")
  @@unique([corner_id, user_id])
  @@index([corner_id])
  @@index([user_id])
}

// جدول التعليقات (إضافي للمستقبل)
model MuqtarabComment {
  id         String   @id @default(cuid())

  // ربط بالمقال
  article_id String
  article    MuqtarabArticle @relation(fields: [article_id], references: [id], onDelete: Cascade)

  // معلومات المعلق
  user_id    String?
  user       users?   @relation(fields: [user_id], references: [id])

  // للزوار غير المسجلين
  guest_name  String?
  guest_email String?

  // محتوى التعليق
  content    String   @db.Text

  // حالة التعليق
  is_approved Boolean @default(false)
  is_hidden   Boolean @default(false)

  // رد على تعليق آخر
  parent_id  String?
  parent     MuqtarabComment? @relation("CommentReplies", fields: [parent_id], references: [id])
  replies    MuqtarabComment[] @relation("CommentReplies")

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("muqtarab_comments")
  @@index([article_id])
  @@index([user_id])
  @@index([is_approved])
  @@index([created_at])
}

// ========== نظام الكتّاب وقادة الرأي ==========

model article_authors {
  id               String             @id
  full_name        String             @db.VarChar(255)
  slug             String             @unique @db.VarChar(255)
  title            String?            @db.VarChar(200) // خبير، دكتور، محلل
  bio              String?
  email            String?            @db.VarChar(255)
  avatar_url       String?
  social_links     Json?              @default("{}")
  is_active        Boolean            @default(true)
  role             String             @default("writer") @db.VarChar(50)
  specializations  String[]           // المجالات التي يكتب فيها
  total_articles   Int                @default(0)
  total_views      Int                @default(0)
  total_likes      Int                @default(0)
  total_shares     Int                @default(0)
  ai_score         Float              @default(0.0) // نقاط الذكاء الاصطناعي
  last_article_at  DateTime?
  created_at       DateTime           @default(now())
  updated_at       DateTime           @updatedAt

  // Relationships
  articles         articles[]
  author_analytics author_analytics[]

  @@index([slug])
  @@index([is_active])
}

model article_quotes {
  id             String   @id
  article_id     String
  quote_text     String
  quote_order    Int      @default(0)
  ai_confidence  Float    @default(0.0)
  is_featured    Boolean  @default(false)
  created_at     DateTime @default(now())

  // Relationships
  article        articles @relation(fields: [article_id], references: [id], onDelete: Cascade)

  @@index([article_id])
}

model author_analytics {
  id               String          @id
  author_id        String
  date             DateTime        @db.Date
  articles_published Int           @default(0)
  total_views      Int             @default(0)
  total_likes      Int             @default(0)
  total_shares     Int             @default(0)
  engagement_rate  Float           @default(0.0)
  reading_time_avg Float           @default(0.0)
  created_at       DateTime        @default(now())
  updated_at       DateTime        @updatedAt

  // Relationships
  author           article_authors @relation(fields: [author_id], references: [id], onDelete: Cascade)

  @@unique([author_id, date])
  @@index([author_id, date])
}

// ============================================================
// 🧠 وحدة الجرعات الذكية (Smart Daily Doses) - جداول إضافية
// ============================================================

enum DoseReaction {
  like      // 👍
  dislike   // 👎
  neutral   // بدون تفاعل
  shared    // مشاركة
  saved     // حفظ
}

// جدول تفاعل المستخدمين مع الجرعات
model smart_dose_feedback {
  id            String        @id @default(cuid())

  // المستخدم والجرعة
  user_id       String
  user          users         @relation("DoseFeedbackUser", fields: [user_id], references: [id], onDelete: Cascade)
  dose_id       String
  dose          daily_doses   @relation(fields: [dose_id], references: [id], onDelete: Cascade)

  // نوع التفاعل
  reaction      DoseReaction  @default(neutral)
  shared        Boolean       @default(false)
  saved         Boolean       @default(false)

  // الوقت والسلوك
  time_spent    Int?          // بالثواني
  read_percentage Float?      // نسبة القراءة (0-1)

  // البيانات الإضافية
  comment       String?       // تعليق اختياري
  platform      String?       // منصة المشاركة

  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt

  @@unique([user_id, dose_id]) // تفاعل واحد لكل مستخدم مع كل جرعة
  @@index([dose_id, reaction])
  @@index([user_id, created_at])
}

// قوالب الجرعات الجاهزة
model smart_dose_templates {
  id              String               @id @default(cuid())

  // التصنيف
  period          daily_doses_period
  template_name   String               // "صباح النشاط", "موجز منتصف اليوم"

  // المحتوى
  main_text       String               // العنوان الرئيسي
  sub_text        String               // العنوان الفرعي

  // الاستخدام
  usage_count     Int                  @default(0)
  is_active       Boolean              @default(true)
  priority        Int                  @default(1) // أولوية الظهور

  // التحرير
  created_by      String
  creator         users                @relation("DoseTemplateCreator", fields: [created_by], references: [id])

  created_at      DateTime             @default(now())
  updated_at      DateTime             @updatedAt

  @@index([period, is_active])
  @@index([priority, period])
}

// جدول اهتمامات المستخدمين
model user_interests {
  id          Int       @id @default(autoincrement())
  user_id     String
  category_id String
  is_active   Boolean   @default(true)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  // العلاقات
  user        users      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  category    categories @relation(fields: [category_id], references: [id], onDelete: Cascade)

  @@unique([user_id, category_id])
  @@index([user_id])
  @@index([category_id])
  @@index([is_active])
}
