const fs = require('fs');
const path = require('path');

async function fixUploadDirectories() {
  console.log('๐ง ุฅุตูุงุญ ูุฌูุฏุงุช ุงูุฑูุน ูุงูุตูุงุญูุงุช...\n');
  
  try {
    const baseUploadDir = path.join(process.cwd(), 'public', 'uploads');
    
    // ุงููุฌูุฏุงุช ุงููุทููุจุฉ
    const requiredDirs = [
      'avatar',
      'articles', 
      'featured',
      'authors',
      'general',
      'uploads',
      'images'
    ];
    
    console.log(`๐ ุงููุฌูุฏ ุงูุฃุณุงุณู: ${baseUploadDir}`);
    
    // ุฅูุดุงุก ุงููุฌูุฏ ุงูุฃุณุงุณู ุฅุฐุง ูู ููู ููุฌูุฏุงู
    if (!fs.existsSync(baseUploadDir)) {
      console.log('๐ ุฅูุดุงุก ุงููุฌูุฏ ุงูุฃุณุงุณู uploads...');
      fs.mkdirSync(baseUploadDir, { recursive: true });
      console.log('โ ุชู ุฅูุดุงุก ุงููุฌูุฏ ุงูุฃุณุงุณู');
    } else {
      console.log('โ ุงููุฌูุฏ ุงูุฃุณุงุณู ููุฌูุฏ');
    }
    
    // ุฅูุดุงุก ุงููุฌูุฏุงุช ุงููุฑุนูุฉ
    console.log('\n๐ ูุญุต ูุฅูุดุงุก ุงููุฌูุฏุงุช ุงููุฑุนูุฉ:');
    
    for (const dirName of requiredDirs) {
      const fullPath = path.join(baseUploadDir, dirName);
      
      if (!fs.existsSync(fullPath)) {
        console.log(`   ๐ ุฅูุดุงุก ูุฌูุฏ: ${dirName}`);
        fs.mkdirSync(fullPath, { recursive: true });
        console.log(`   โ ุชู ุฅูุดุงุก: ${fullPath}`);
      } else {
        console.log(`   โ ููุฌูุฏ: ${dirName}`);
      }
      
      // ูุญุต ุงูุตูุงุญูุงุช
      try {
        fs.accessSync(fullPath, fs.constants.W_OK);
        console.log(`   โ ุตูุงุญูุฉ ุงููุชุงุจุฉ: ${dirName}`);
      } catch (error) {
        console.log(`   โ ูุง ุชูุฌุฏ ุตูุงุญูุฉ ูุชุงุจุฉ: ${dirName}`);
        
        // ูุญุงููุฉ ุฅุตูุงุญ ุงูุตูุงุญูุงุช
        try {
          fs.chmodSync(fullPath, 0o755);
          console.log(`   ๐ง ุชู ุฅุตูุงุญ ุตูุงุญูุงุช: ${dirName}`);
        } catch (chmodError) {
          console.log(`   โ ูุดู ุฅุตูุงุญ ุตูุงุญูุงุช: ${dirName} - ${chmodError.message}`);
        }
      }
    }
    
    // ูุญุต ุงููุณุงุญุฉ ุงููุชุงุญุฉ
    console.log('\n๐พ ูุญุต ุงููุณุงุญุฉ ุงููุชุงุญุฉ:');
    try {
      const stats = fs.statSync(baseUploadDir);
      console.log(`   ๐ ูุนูููุงุช ุงููุฌูุฏ:`, {
        isDirectory: stats.isDirectory(),
        mode: stats.mode.toString(8),
        size: stats.size
      });
    } catch (error) {
      console.log(`   โ ุฎุทุฃ ูู ูุญุต ุงููุณุงุญุฉ: ${error.message}`);
    }
    
    // ุงุฎุชุจุงุฑ ูุชุงุจุฉ ููู ุชุฌุฑูุจู
    console.log('\n๐งช ุงุฎุชุจุงุฑ ูุชุงุจุฉ ููู ุชุฌุฑูุจู:');
    
    for (const dirName of ['avatar', 'featured', 'articles']) {
      const testDir = path.join(baseUploadDir, dirName);
      const testFile = path.join(testDir, 'test-write.txt');
      
      try {
        fs.writeFileSync(testFile, `Test write at ${new Date().toISOString()}`);
        console.log(`   โ ูุฌุญ ุงุฎุชุจุงุฑ ุงููุชุงุจุฉ: ${dirName}`);
        
        // ุญุฐู ุงูููู ุงูุชุฌุฑูุจู
        fs.unlinkSync(testFile);
        console.log(`   ๐๏ธ ุชู ุญุฐู ุงูููู ุงูุชุฌุฑูุจู: ${dirName}`);
        
      } catch (error) {
        console.log(`   โ ูุดู ุงุฎุชุจุงุฑ ุงููุชุงุจุฉ ูู ${dirName}: ${error.message}`);
      }
    }
    
    // ุฅูุดุงุก ููู .gitkeep ูููุฌูุฏุงุช ุงููุงุฑุบุฉ
    console.log('\n๐ ุฅูุดุงุก ูููุงุช .gitkeep:');
    
    for (const dirName of requiredDirs) {
      const dirPath = path.join(baseUploadDir, dirName);
      const gitkeepPath = path.join(dirPath, '.gitkeep');
      
      // ูุญุต ุฅุฐุง ูุงู ุงููุฌูุฏ ูุงุฑุบ (ูุง ูุญุชูู ูููุงุช ุนุฏุง .gitkeep)
      const files = fs.readdirSync(dirPath).filter(f => f !== '.gitkeep');
      
      if (files.length === 0 && !fs.existsSync(gitkeepPath)) {
        try {
          fs.writeFileSync(gitkeepPath, '# Keep this directory in git\n');
          console.log(`   โ ุชู ุฅูุดุงุก .gitkeep ูู: ${dirName}`);
        } catch (error) {
          console.log(`   โ ูุดู ุฅูุดุงุก .gitkeep ูู ${dirName}: ${error.message}`);
        }
      } else if (files.length > 0) {
        console.log(`   ๐ ${dirName} ูุญุชูู ุนูู ${files.length} ููู`);
      } else {
        console.log(`   โ .gitkeep ููุฌูุฏ ูู: ${dirName}`);
      }
    }
    
    // ุชูุฑูุฑ ููุงุฆู
    console.log('\n๐ ุชูุฑูุฑ ููุงุฆู:');
    console.log(`   ๐ ุงููุฌูุฏ ุงูุฃุณุงุณู: ${baseUploadDir}`);
    console.log(`   ๐ ุนุฏุฏ ุงููุฌูุฏุงุช ุงููุฑุนูุฉ: ${requiredDirs.length}`);
    
    const totalFiles = requiredDirs.reduce((total, dirName) => {
      const dirPath = path.join(baseUploadDir, dirName);
      if (fs.existsSync(dirPath)) {
        const files = fs.readdirSync(dirPath);
        console.log(`   ๐ ${dirName}: ${files.length} ููู`);
        return total + files.length;
      }
      return total;
    }, 0);
    
    console.log(`   ๐ ุฅุฌูุงูู ุงููููุงุช: ${totalFiles}`);
    
    console.log('\nโ ุชู ุงูุงูุชูุงุก ูู ุฅุตูุงุญ ูุฌูุฏุงุช ุงูุฑูุน');
    
    // ูุตุงุฆุญ
    console.log('\n๐ก ูุตุงุฆุญ ููุงุณุชุฎุฏุงู:');
    console.log('   1. ุชุฃูุฏ ูู ุชุดุบูู ุงูุณูุฑูุฑ ูู ุงููุฌูุฏ ุงูุตุญูุญ');
    console.log('   2. ูู ุจูุฆุฉ ุงูุฅูุชุงุฌุ ุชุฃูุฏ ูู ุตูุงุญูุงุช ุงูุฎุงุฏู');
    console.log('   3. ุฑุงูุจ ูุณุงุญุฉ ุงููุฑุต ุงูุตูุจ ุจุงูุชุธุงู');
    console.log('   4. ูู ุจุนูู backup ุฏูุฑู ูููููุงุช ุงููุฑููุนุฉ');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุตูุงุญ ูุฌูุฏุงุช ุงูุฑูุน:', error);
  }
}

// ุชุดุบูู ุงูุณูุฑูุจุช
fixUploadDirectories()
  .then(() => {
    console.log('\n๐ ุชู ุงูุงูุชูุงุก ูู ุฅุตูุงุญ ูุฌูุฏุงุช ุงูุฑูุน');
    process.exit(0);
  })
  .catch((error) => {
    console.error('โ ุฎุทุฃ ูู ุชุดุบูู ุงูุณูุฑูุจุช:', error);
    process.exit(1);
  });