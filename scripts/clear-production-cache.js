#!/usr/bin/env node

/**
 * ุณูุฑูุจุช ูุณุญ ูุงุด ุงูุฅูุชุงุฌ
 * ูุณุชุฎุฏู ููุณุญ ุงููุงุด ูู ุงููููุน ุงููุงูู ููุฑุงู
 */

const fetch = require('node-fetch').default || require('node-fetch');

async function clearProductionCache() {
  console.log('๐ ุจุฏุก ูุณุญ ูุงุด ุงูุฅูุชุงุฌ...\n');

  // URLs ุงูุฅูุชุงุฌ ุงููุญุชููุฉ
  const productionUrls = [
    'https://sabq-ai-cms.vercel.app', // Vercel
    'https://sabq.me',                // Domain ูุฎุตุต
    'https://sabq.ai',                // Domain ุจุฏูู
    'https://your-production-url.com' // ุบููุฑ ูุฐุง ููุฑุงุจุท ุงูุตุญูุญ
  ];

  const token = process.env.CACHE_CLEAR_SECRET || 'sabq-cache-clear-2025';

  for (const baseUrl of productionUrls) {
    try {
      console.log(`๐ ูุญุงููุฉ ูุณุญ ุงููุงุด ูู: ${baseUrl}`);
      
      const response = await fetch(`${baseUrl}/api/cache/production-clear`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify({
          type: 'all',
          url: '/'
        })
      });

      if (response.ok) {
        const result = await response.json();
        console.log('โ ูุฌุญ ูุณุญ ุงููุงุด ูู:', baseUrl);
        console.log('๐ ุงูุฅุฌุฑุงุกุงุช ุงููููุฐุฉ:', result.actions);
        console.log('โฐ ุงูููุช:', result.timestamp);
        console.log('');
        break; // ูุฌุญุ ุชููู ุนู ุงููุญุงููุฉ
      } else {
        console.log(`โ ูุดู ูู ${baseUrl}: ${response.status} ${response.statusText}`);
      }
    } catch (error) {
      console.log(`โ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจู ${baseUrl}:`, error.message);
    }
  }

  console.log('\n๐ฏ **ููููุฉ ุงูุงุฎุชุจุงุฑ:**');
  console.log('1. ุงูุชุญ ุงููููุน ูู ูุงูุฐุฉ ุชุตูุญ ุฎุงุตุฉ');
  console.log('2. ุงุถุบุท Ctrl+F5 ููุชุญุฏูุซ ุงููุณุฑู');
  console.log('3. ุชุญูู ูู ุธููุฑ ุงูุฎุจุฑ ุงูุฌุฏูุฏ');
  console.log('\n๐ **ุฅุฐุง ูู ูุธูุฑ ุงูุฎุจุฑ:**');
  console.log('- ุฃุถู ?v=' + Date.now() + ' ูู ููุงูุฉ ุงูุฑุงุจุท');
  console.log('- ุฃู ุงุณุชุฎุฏู ูุถุน ุงูุชุทููุฑ ูููุทูุฑูู');
}

// ุฅุถุงูุฉ ุทุฑู ูุฎุชููุฉ ููุงุณุชุฎุฏุงู
async function clearSpecificUrl(url) {
  console.log(`๐ฏ ูุณุญ ูุงุด ุฑุงุจุท ูุญุฏุฏ: ${url}`);
  
  const baseUrl = 'https://sabq.me'; // ุบููุฑ ููุฑุงุจุท ุงูุตุญูุญ
  const token = process.env.CACHE_CLEAR_SECRET || 'sabq-cache-clear-2025';

  try {
    const response = await fetch(`${baseUrl}/api/cache/production-clear`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${token}`
      },
      body: JSON.stringify({
        type: 'specific',
        url: url
      })
    });

    const result = await response.json();
    console.log('โ ูุชูุฌุฉ ูุณุญ ุงููุงุด:', result);
  } catch (error) {
    console.error('โ ุฎุทุฃ:', error);
  }
}

// ูุนุงูุฌุฉ arguments ูู command line
const args = process.argv.slice(2);

if (args.length > 0) {
  if (args[0] === '--url' && args[1]) {
    clearSpecificUrl(args[1]);
  } else if (args[0] === '--help') {
    console.log(`
๐ ุงุณุชุฎุฏุงู ุณูุฑูุจุช ูุณุญ ูุงุด ุงูุฅูุชุงุฌ:

ุงูุงุณุชุฎุฏุงูุงุช:
  node scripts/clear-production-cache.js           # ูุณุญ ูุงูู ุงููุงุด
  node scripts/clear-production-cache.js --url /   # ูุณุญ ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ
  node scripts/clear-production-cache.js --help    # ุนุฑุถ ูุฐู ุงููุณุงุนุฏุฉ

ุฃูุซูุฉ:
  # ูุณุญ ูุงูู ุงููุงุด
  npm run clear:production

  # ูุณุญ ูุงุด ููุงู ูุญุฏุฏ
  node scripts/clear-production-cache.js --url /article/my-article-slug

  # ูุณุญ ูุน token ูุฎุตุต
  CACHE_CLEAR_SECRET=your-token node scripts/clear-production-cache.js
    `);
  } else {
    console.log('โ ุงุณุชุฎุฏุงู ุฎุงุทุฆ. ุงุณุชุฎุฏู --help ูููุณุงุนุฏุฉ');
  }
} else {
  clearProductionCache()
    .then(() => {
      console.log('\nโ ุงูุชูู ูุณุญ ูุงุด ุงูุฅูุชุงุฌ');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\nโ ูุดู ูุณุญ ูุงุด ุงูุฅูุชุงุฌ:', error);
      process.exit(1);
    });
} 