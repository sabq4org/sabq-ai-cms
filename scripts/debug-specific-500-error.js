/**
 * ุชุดุฎูุต ูุญุฏุฏ ูุฎุทุฃ 500 ูู API articles
 */

const fs = require('fs').promises;

console.log('๐ ุชุดุฎูุต ูุญุฏุฏ ูุฎุทุฃ 500 ูู API articles...\n');

async function debugSpecific500() {
  try {
    console.log('๐ 1. ูุญุงูุงุฉ ุงูุจูุงูุงุช ุงูุชู ูุฑุณููุง ุงููุณุชุฎุฏู...');
    
    // ุจูุงูุงุช ูููุฐุฌูุฉ ูู form ุฅูุดุงุก ุงูููุงู
    const testArticleData = {
      title: 'ุงุฎุชุจุงุฑ ุชุดุฎูุต ุฎุทุฃ 500',
      content: 'ูุญุชูู ุชุฌุฑูุจู ุทููู ูุงุฎุชุจุงุฑ API. ูุฐุง ูุญุชูู ูุญุชูู ุนูู ุฃูุซุฑ ูู 10 ุฃุญุฑู ูุชูุฑูุฑ validation.',
      excerpt: 'ูุจุฐุฉ ุชุฌุฑูุจูุฉ',
      // ูุฐู ุงูููู ูุฏ ุชููู ุงูุณุจุจ:
      author_id: 'real-author-id-from-frontend', // ุณูุญุชุงุฌ ููู ุญููููุฉ
      category_id: 'real-category-id-from-frontend',
      status: 'published',
      featured: false,
      breaking: false,
      featured_image: null,
      seo_title: 'ุนููุงู SEO',
      seo_description: 'ูุตู SEO',
      seo_keywords: null,
      metadata: {
        subtitle: 'ุนููุงู ูุฑุนู',
        type: 'local',
        image_caption: null,
        keywords: [],
        gallery: [],
        external_link: null
      }
    };
    
    console.log('๐ 2. ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช ููููู ุงูุญููููุฉ...');
    
    // ุชุญููู Prisma
    const { PrismaClient } = require('@prisma/client');
    const prisma = new PrismaClient();
    
    try {
      // ุฌูุจ ุฃูู ุชุตููู ูุดุท
      const firstCategory = await prisma.categories.findFirst({
        where: { is_active: true },
        select: { id: true, name: true }
      });
      
      // ุฌูุจ ุฃูู ูุคูู ูุดุท
      const firstAuthor = await prisma.article_authors.findFirst({
        where: { is_active: true },
        select: { id: true, full_name: true, email: true }
      });
      
      // ุฅุฐุง ูู ูุฌุฏ ูู article_authorsุ ูุฌุฑุจ users
      let author = firstAuthor;
      if (!author) {
        const userAuthor = await prisma.users.findFirst({
          select: { id: true, name: true, email: true }
        });
        if (userAuthor) {
          author = { 
            id: userAuthor.id, 
            full_name: userAuthor.name, 
            email: userAuthor.email 
          };
        }
      }
      
      console.log('๐ ุงูุจูุงูุงุช ุงูุญููููุฉ ุงูููุฌูุฏุฉ:');
      console.log(`   ๐ ุงูุชุตููู: ${firstCategory ? `${firstCategory.name} (${firstCategory.id})` : 'ูุง ููุฌุฏ'}`);
      console.log(`   ๐ค ุงููุคูู: ${author ? `${author.full_name} (${author.id})` : 'ูุง ููุฌุฏ'}`);
      
      if (!firstCategory) {
        console.error('โ ูุดููุฉ: ูุง ุชูุฌุฏ ุชุตูููุงุช ูุดุทุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช!');
        console.log('๐ก ุญู: ุฅูุดุงุก ุชุตููู ูุดุท ุฃู ุชูุนูู ุชุตูููุงุช ููุฌูุฏุฉ');
      }
      
      if (!author) {
        console.error('โ ูุดููุฉ: ูุง ุชูุฌุฏ ูุคูููู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช!');
        console.log('๐ก ุญู: ุฅูุดุงุก ูุคูู ูู article_authors ุฃู users');
      }
      
      if (firstCategory && author) {
        console.log('\n๐ 3. ุงุฎุชุจุงุฑ ูุน ุจูุงูุงุช ุญููููุฉ...');
        
        // ุชุญุฏูุซ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ
        testArticleData.category_id = firstCategory.id;
        testArticleData.author_id = author.id;
        
        console.log('๐ ุฅุฑุณุงู ุงุฎุชุจุงุฑ ุฅูู API...');
        
        // ุงุฎุชุจุงุฑ API ูุน ุจูุงูุงุช ุญููููุฉ
        const response = await fetch('https://www.sabq.io/api/articles', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'User-Agent': 'Debug-Script-500-Test'
          },
          body: JSON.stringify(testArticleData)
        });
        
        console.log(`๐ก ุงุณุชุฌุงุจุฉ API: ${response.status} ${response.statusText}`);
        
        if (response.ok) {
          const result = await response.json();
          console.log('โ ูุฌุญ! ุงููุดููุฉ ูุงูุช ูู ุงูุจูุงูุงุช ุงููุฑุณูุฉ');
          console.log('๐ ุงููุชูุฌุฉ:', {
            id: result.article?.id,
            title: result.article?.title,
            status: result.article?.status
          });
        } else {
          console.log('โ ูุง ุฒุงู ูุดู - ุงููุดููุฉ ุฃุนูู');
          
          // ุชุญููู ุชูุตููู ููุฎุทุฃ
          const contentType = response.headers.get('content-type');
          console.log(`๐ ููุน ุงููุญุชูู: ${contentType}`);
          
          if (contentType && contentType.includes('application/json')) {
            try {
              const errorData = await response.json();
              console.log('๐ ุชูุงุตูู ุงูุฎุทุฃ (JSON):', errorData);
            } catch (e) {
              console.log('โ ูุดู ูู ูุฑุงุกุฉ JSON ุฑุบู Content-Type');
            }
          } else {
            const errorText = await response.text();
            console.log('๐ ูุญุชูู ุงูุฎุทุฃ (HTML):', errorText.substring(0, 500) + '...');
            
            // ูุญุต ุฃุฎุทุงุก ุดุงุฆุนุฉ ูู HTML
            if (errorText.includes('Internal Server Error')) {
              console.log('๐ ุฎุทุฃ ุฎุงุฏู ุฏุงุฎูู - ูุดููุฉ ูู ุงูููุฏ ุฃู ูุงุนุฏุฉ ุงูุจูุงูุงุช');
            }
            if (errorText.includes('timeout')) {
              console.log('๐ ูุดููุฉ timeout - ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจุทูุฆุฉ');
            }
            if (errorText.includes('connection')) {
              console.log('๐ ูุดููุฉ ุงุชุตุงู - ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ูุชุงุญุฉ');
            }
            if (errorText.includes('prisma')) {
              console.log('๐ ูุดููุฉ Prisma - ุฎุทุฃ ูู ORM ุฃู schema');
            }
          }
        }
      }
      
    } finally {
      await prisma.$disconnect();
    }
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุชุดุฎูุต:', error);
  }
}

// ุชุดุบูู ุงูุชุดุฎูุต
debugSpecific500()
  .then(() => {
    console.log('\nโ ุงูุชูู ุงูุชุดุฎูุต ุงููุญุฏุฏ');
    console.log('\n๐ก ุฎุทูุงุช ุชุดุฎูุต ุฅุถุงููุฉ:');
    console.log('1. ุชุญูู ูู logs ุงูุฎุงุฏู (Vercel/AWS)');
    console.log('2. ุชุฃูุฏ ูู ุตุญุฉ DATABASE_URL ูู ุงูุฅูุชุงุฌ');
    console.log('3. ูุญุต schema.prisma ููุงุจู database structure');
    console.log('4. ุชุญูู ูู ุฃู ุฌููุน tables ููุฌูุฏุฉ ููุชุงุญุฉ');
  })
  .catch(error => {
    console.error('โ ูุดู ุงูุชุดุฎูุต:', error);
  });