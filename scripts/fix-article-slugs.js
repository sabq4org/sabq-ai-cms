const { PrismaClient } = require("@prisma/client");

// ุชููุฆุฉ Prisma client
const prisma = new PrismaClient({
  log: ["query", "info", "warn", "error"],
});

async function fixArticleSlugs() {
  try {
    console.log("๐ ุจุฏุก ุชุญููู slugs ุงูููุงูุงุช ุฅูู ุงูุฅูุฌููุฒูุฉ...");

    // ุฌูุจ ุฌููุน ุงูููุงูุงุช ุงูุชู ุชุญุชูู ุนูู ุฃุญุฑู ุนุฑุจูุฉ ูู ุงูู slug
    const articles = await prisma.muqtarabArticle.findMany({
      select: {
        id: true,
        slug: true,
        title: true,
      },
    });

    console.log(`๐ ุชู ุงูุนุซูุฑ ุนูู ${articles.length} ููุงูุฉ`);

    for (const article of articles) {
      // ูุญุต ุฅุฐุง ูุงู ุงูู slug ูุญุชูู ุนูู ุฃุญุฑู ุนุฑุจูุฉ
      const hasArabic = /[\u0600-\u06FF]/.test(article.slug);

      if (hasArabic) {
        // ุฅูุดุงุก slug ุฅูุฌููุฒู ุฌุฏูุฏ
        const newSlug = generateUniqueSlug(article.title, article.id);

        console.log(
          `๐ ุชุญุฏูุซ ููุงู "${article.title}": ${article.slug} โ ${newSlug}`
        );

        await prisma.muqtarabArticle.update({
          where: { id: article.id },
          data: { slug: newSlug },
        });
      }
    }

    console.log("โ ุชู ุชุญููู ุฌููุน slugs ุงูููุงูุงุช ุจูุฌุงุญ!");
  } catch (error) {
    console.error("โ ุฎุทุฃ ูู ุชุญููู slugs ุงูููุงูุงุช:", error);
  } finally {
    await prisma.$disconnect();
  }
}

function generateUniqueSlug(title, id) {
  // ุฎุฑูุทุฉ ุชุญููู ุงููููุงุช ุงูุนุฑุจูุฉ ุฅูู ุงูุฅูุฌููุฒูุฉ
  const translations = {
    ุฐูุงุก: "intelligence",
    ุงุตุทูุงุนู: "artificial",
    ุชูููุฉ: "tech",
    ุชุนูู: "learning",
    ุขูุฉ: "machine",
    ุงูุขูุฉ: "machine",
    ุดุจูุงุช: "networks",
    ุนุตุจูุฉ: "neural",
    ูุนุงูุฌุฉ: "processing",
    ูุบุฉ: "language",
    ุฑุคูุฉ: "vision",
    ุญุงุณูุจูุฉ: "computer",
    ุฃูู: "security",
    ุณูุจุฑุงูู: "cyber",
    ุจูุงูุงุช: "data",
    ุนููู: "science",
    ุชุทููุฑ: "development",
    ุจุฑูุฌุฉ: "programming",
    ุชุทุจููุงุช: "apps",
    ููุงูุน: "websites",
    ููุจ: "web",
    ููุงู: "article",
    ุฏููู: "guide",
    ููููุฉ: "how-to",
    ุทุฑููุฉ: "method",
    ุฃูุถู: "best",
    ุฌุฏูุฏ: "new",
    ูููุฒ: "featured",
    ุดุฑุญ: "explanation",
    ุชุญููู: "analysis",
    ูุตุงุฆุญ: "tips",
    ุฎุทูุงุช: "steps",
  };

  let englishSlug = title.toLowerCase();

  // ุชุญููู ุงููููุงุช ุงูุนุฑุจูุฉ
  Object.keys(translations).forEach((arabic) => {
    const english = translations[arabic];
    englishSlug = englishSlug.replace(new RegExp(arabic, "g"), english);
  });

  // ุฅุฒุงูุฉ ุงูุฃุญุฑู ุบูุฑ ุงููุทููุจุฉ ูุชุญููู ุงููุณุงูุงุช ุฅูู ุดุฑุทุงุช
  englishSlug = englishSlug
    .replace(/[^\w\s-]/g, "") // ุฅุฒุงูุฉ ุงูุฑููุฒ
    .replace(/\s+/g, "-") // ุชุญููู ุงููุณุงูุงุช ุฅูู ุดุฑุทุงุช
    .replace(/-+/g, "-") // ุฅุฒุงูุฉ ุงูุดุฑุทุงุช ุงููุชูุฑุฑุฉ
    .replace(/^-|-$/g, ""); // ุฅุฒุงูุฉ ุงูุดุฑุทุงุช ูู ุงูุจุฏุงูุฉ ูุงูููุงูุฉ

  // ุฅุฐุง ูุงู ุงููุงุชุฌ ูุงุฑุบ ุฃู ูุตูุฑุ ุงุณุชุฎุฏู ุงููุนุฑู
  if (!englishSlug || englishSlug.length < 3) {
    englishSlug = `article-${id.slice(-8)}`;
  }

  return englishSlug;
}

// ุชุดุบูู ุงูุณูุฑูุจุช
if (require.main === module) {
  fixArticleSlugs();
}

module.exports = { fixArticleSlugs, generateUniqueSlug };
