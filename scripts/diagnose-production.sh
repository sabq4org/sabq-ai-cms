#!/bin/bash

echo "๐ ุชุดุฎูุต ูุดุงูู ุงูุฅูุชุงุฌ"
echo "======================="

# ุฃููุงู ููุชูุถูุญ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 1. ูุนูููุงุช ุงููุธุงู
echo -e "\n๐ ูุนูููุงุช ุงููุธุงู:"
echo "- ูุธุงู ุงูุชุดุบูู: $(uname -a)"
echo "- Node.js: $(node -v)"
echo "- npm: $(npm -v)"
echo "- ุงููุฌูุฏ ุงูุญุงูู: $(pwd)"

# 2. ูุญุต ุงูุนูููุงุช
echo -e "\n๐ ุงูุนูููุงุช ุงููุดุทุฉ:"
if command -v pm2 &> /dev/null; then
    pm2 list
else
    ps aux | grep node | grep -v grep
fi

# 3. ูุญุต ุงูููุงูุฐ
echo -e "\n๐ ุงูููุงูุฐ ุงููุณุชุฎุฏูุฉ:"
netstat -tlnp 2>/dev/null | grep :3000 || lsof -i :3000 2>/dev/null || echo "ูุง ูููู ูุญุต ุงููููุฐ 3000"

# 4. ูุญุต ุงููููุงุช ุงููุทููุจุฉ
echo -e "\n๐ ูุญุต ุงููููุงุช ุงููุทููุจุฉ:"
FILES_TO_CHECK=(
    ".env"
    "package.json"
    "prisma/schema.prisma"
    ".next/BUILD_ID"
    "node_modules/.prisma/client/index.js"
)

for file in "${FILES_TO_CHECK[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}โ${NC} $file - ููุฌูุฏ"
    else
        echo -e "${RED}โ${NC} $file - ููููุฏ"
    fi
done

# 5. ูุญุต ุงูุณุฌูุงุช
echo -e "\n๐ ุขุฎุฑ ุฃุฎุทุงุก ูู ุงูุณุฌูุงุช:"
if command -v pm2 &> /dev/null; then
    echo "ูู PM2:"
    pm2 logs --err --lines 10 --nostream
fi

# ูุญุต ุณุฌูุงุช ุงููุธุงู
if [ -f "/var/log/nginx/error.log" ]; then
    echo -e "\nูู Nginx:"
    sudo tail -n 10 /var/log/nginx/error.log 2>/dev/null || echo "ูุง ูููู ูุฑุงุกุฉ ุณุฌูุงุช Nginx"
fi

# 6. ุงุฎุชุจุงุฑ API ูุน ุชูุงุตูู ุงูุฃุฎุทุงุก
echo -e "\n๐ ุงุฎุชุจุงุฑ API endpoints:"

# Health check
echo -n "- /api/health: "
HEALTH_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" http://localhost:3000/api/health)
HTTP_CODE=$(echo "$HEALTH_RESPONSE" | grep HTTP_CODE | cut -d: -f2)
BODY=$(echo "$HEALTH_RESPONSE" | grep -v HTTP_CODE)

if [ "$HTTP_CODE" = "200" ]; then
    echo -e "${GREEN}โ ูุนูู${NC}"
else
    echo -e "${RED}โ ูุดู (HTTP $HTTP_CODE)${NC}"
    echo "   ุงูุงุณุชุฌุงุจุฉ: $BODY"
fi

# Categories API
echo -n "- /api/categories: "
CATEGORIES_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" http://localhost:3000/api/categories)
HTTP_CODE=$(echo "$CATEGORIES_RESPONSE" | grep HTTP_CODE | cut -d: -f2)
BODY=$(echo "$CATEGORIES_RESPONSE" | grep -v HTTP_CODE)

if [ "$HTTP_CODE" = "200" ]; then
    echo -e "${GREEN}โ ูุนูู${NC}"
else
    echo -e "${RED}โ ูุดู (HTTP $HTTP_CODE)${NC}"
    echo "   ุงูุงุณุชุฌุงุจุฉ: $BODY"
fi

# 7. ุงูุชุฑุงุญุงุช ุงูุฅุตูุงุญ
echo -e "\n๐ก ุงูุชุฑุงุญุงุช ุงูุฅุตูุงุญ:"

if [ ! -f ".env" ]; then
    echo -e "${YELLOW}1. ุฃูุดุฆ ููู .env ูุน ุงููุชุบูุฑุงุช ุงููุทููุจุฉ${NC}"
    echo "   ุดุบูู: ./scripts/create-production-env.sh"
fi

if [ ! -f "node_modules/.prisma/client/index.js" ]; then
    echo -e "${YELLOW}2. ูููุฏ Prisma Client${NC}"
    echo "   ุดุบูู: npx prisma generate"
fi

if [ ! -f ".next/BUILD_ID" ]; then
    echo -e "${YELLOW}3. ุงุจูู ุงูุชุทุจูู${NC}"
    echo "   ุดุบูู: npm run build"
fi

# 8. ูุนูููุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช
echo -e "\n๐๏ธ ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช:"
if [ -f ".env" ]; then
    DB_URL=$(grep DATABASE_URL .env | cut -d'=' -f2 | sed 's/"//g' | sed 's/:[^:]*@/:****@/')
    echo "DATABASE_URL: $DB_URL"
    
    # ูุญุงููุฉ ุงูุงุชุตุงู
    node -e "
    const { PrismaClient } = require('@prisma/client');
    const prisma = new PrismaClient();
    prisma.\$connect()
        .then(() => {
            console.log('โ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ูุฌุญ');
            return prisma.\$disconnect();
        })
        .catch(err => {
            console.error('โ ูุดู ุงูุงุชุตุงู:', err.message);
            process.exit(1);
        });
    " 2>&1
else
    echo -e "${RED}โ ููู .env ุบูุฑ ููุฌูุฏ${NC}"
fi

echo -e "\nโจ ุงูุชูู ุงูุชุดุฎูุต!" 