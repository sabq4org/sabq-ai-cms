#!/usr/bin/env tsx

import fs from 'fs'
import path from 'path'

async function fixUuidIssues() {
  console.log('๐ง ุฅุตูุงุญ ูุดุงูู uuid ูู Prisma Schema...\n')
  
  const schemaPath = path.join(process.cwd(), 'prisma', 'schema.prisma')
  
  try {
    // ูุฑุงุกุฉ ุงูููู ุงูุญุงูู
    let schemaContent = fs.readFileSync(schemaPath, 'utf8')
    
    console.log('๐ ูุฑุงุกุฉ Prisma Schema...')
    
    // ุฅุตูุงุญ ุฌููุน ูุดุงูู uuid()
    console.log('๐ ุฅุตูุงุญ ุฏุงูุฉ uuid()...')
    
    // ุงุณุชุจุฏุงู uuid() ุจู cuid()
    const uuidMatches = schemaContent.match(/@default\(uuid\(\)\)/g)
    if (uuidMatches) {
      schemaContent = schemaContent.replace(/@default\(uuid\(\)\)/g, '@default(cuid())')
      console.log(`โ ุชู ุฅุตูุงุญ ${uuidMatches.length} ูู uuid() ุฅูู cuid()`)
    }
    
    // ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ
    const backupPath = path.join(process.cwd(), 'prisma', 'schema-uuid-fixed-backup.prisma')
    fs.writeFileSync(backupPath, fs.readFileSync(schemaPath, 'utf8'), 'utf8')
    console.log(`๐ฆ ุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ: ${backupPath}`)
    
    // ุญูุธ ุงูุชุญุฏูุซุงุช
    fs.writeFileSync(schemaPath, schemaContent, 'utf8')
    console.log('๐พ ุชู ุญูุธ ุงูุชุญุฏูุซุงุช')
    
    console.log('\nโ ุชู ุฅุตูุงุญ ูุดุงูู uuid ุจูุฌุงุญ!')
    console.log('\n๐ ุงูุชุบููุฑุงุช ุงููุทุจูุฉ:')
    console.log('- ุงุณุชุจุฏุงู uuid() ุจู cuid()')
    console.log('- cuid() ูุชูุงูู ูุน PostgreSQL')
    
    return true
    
  } catch (error) {
    console.error('โ ูุดู ูู ุฅุตูุงุญ ูุดุงูู uuid:', error)
    throw error
  }
}

// ุชุดุบูู ุงูุฅุตูุงุญ ุฅุฐุง ุชู ุชุดุบูู ุงูุณูุฑูุจุช ูุจุงุดุฑุฉ
if (require.main === module) {
  fixUuidIssues()
    .then(() => {
      console.log('\n๐ ุชู ุฅุตูุงุญ ูุดุงูู uuid ุจูุฌุงุญ!')
      console.log('\n๐ ุงูุฎุทูุฉ ุงูุชุงููุฉ:')
      console.log('npx prisma generate')
      console.log('npx prisma db push')
      process.exit(0)
    })
    .catch(error => {
      console.error('โ ูุดู ูู ุฅุตูุงุญ ูุดุงูู uuid:', error)
      process.exit(1)
    })
}

export { fixUuidIssues } 