const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function generateCleanupSummary() {
  console.log('๐ ุชูุฑูุฑ ููุงุฆู ุจุนุฏ ุชูุธูู ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ\n');
  
  try {
    // ุฅุญุตุงุฆูุงุช ุดุงููุฉ
    const [
      articlesCount,
      publishedArticlesCount,
      draftArticlesCount,
      teamMembersCount,
      keywordsCount,
      categoriesCount,
      reportersCount,
      interactionsCount
    ] = await Promise.all([
      prisma.articles.count(),
      prisma.articles.count({ where: { status: 'published' } }),
      prisma.articles.count({ where: { status: 'draft' } }),
      prisma.team_members.count(),
      prisma.keywords.count(),
      prisma.categories.count(),
      prisma.reporters.count(),
      prisma.interactions.count()
    ]);
    
    console.log('๐ฐ **ุงูููุงูุงุช:**');
    console.log(`   - ุฅุฌูุงูู ุงูููุงูุงุช: ${articlesCount}`);
    console.log(`   - ุงูููุงูุงุช ุงูููุดูุฑุฉ: ${publishedArticlesCount}`);
    console.log(`   - ุงููุณูุฏุงุช: ${draftArticlesCount}`);
    
    console.log('\n๐ฅ **ุงููุฑูู:**');
    console.log(`   - ุฃุนุถุงุก ุงููุฑูู: ${teamMembersCount}`);
    console.log(`   - ุงููุฑุงุณููู: ${reportersCount}`);
    
    console.log('\n๐ง **ุงูุจูุงูุงุช ุงููุณุงุนุฏุฉ:**');
    console.log(`   - ุงูุชุตูููุงุช: ${categoriesCount}`);
    console.log(`   - ุงููููุงุช ุงูููุชุงุญูุฉ: ${keywordsCount}`);
    console.log(`   - ุงูุชูุงุนูุงุช: ${interactionsCount}`);
    
    // ุนุฑุถ ุฃุญุฏุซ ุงูููุงูุงุช ุงููุชุจููุฉ
    console.log('\n๐ **ุฃุญุฏุซ ุงูููุงูุงุช ุงููุชุจููุฉ:**');
    const recentArticles = await prisma.articles.findMany({
      take: 5,
      orderBy: { created_at: 'desc' },
      select: { id: true, title: true, status: true, created_at: true }
    });
    
    recentArticles.forEach((article, index) => {
      console.log(`   ${index + 1}. ${article.title} (${article.status})`);
    });
    
    // ุนุฑุถ ุฃุนุถุงุก ุงููุฑูู ุงููุชุจููู
    console.log('\n๐ค **ุฃุนุถุงุก ุงููุฑูู ุงููุชุจููู:**');
    const remainingTeamMembers = await prisma.team_members.findMany({
      select: { id: true, name: true, email: true, role: true },
      orderBy: { created_at: 'asc' }
    });
    
    remainingTeamMembers.forEach((member, index) => {
      console.log(`   ${index + 1}. ${member.name} (${member.role || 'ุบูุฑ ูุญุฏุฏ'}) - ${member.email}`);
    });
    
    console.log('\nโ **ููุฎุต ุงูุชูุธูู:**');
    console.log('   - ุชู ุญุฐู ุฌููุน ุงูููุงูุงุช ุงูุชุฌุฑูุจูุฉ');
    console.log('   - ุชู ุญุฐู ุฃุนุถุงุก ุงููุฑูู ุงูููุถุงููู ููุชุฌุฑุจุฉ');
    console.log('   - ุชู ุงูุงุญุชูุงุธ ุจุงูุจูุงูุงุช ุงูุฃุณุงุณูุฉ ูุงูุญููููุฉ');
    console.log('   - ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุธููุฉ ูุฌุงูุฒุฉ ููุงุณุชุฎุฏุงู ุงููุนูู');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุชูุฑูุฑ:', error);
  } finally {
    await prisma.$disconnect();
  }
}

generateCleanupSummary();