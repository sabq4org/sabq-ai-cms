name: 🚀 CI/CD Pipeline - Sabq AI CMS

on:
  push:
    branches: [ main, clean-main, develop ]
  pull_request:
    branches: [ main, clean-main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8'

jobs:
  # 🧪 Quality Assurance
  quality-check:
    name: 📋 Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔍 ESLint check
        run: npm run lint

      - name: 🎨 Type checking
        run: npx tsc --noEmit

      - name: 🧹 Check for unused imports
        run: npx ts-prune

      - name: 📊 Bundle analysis
        run: npm run build:analyze

  # 🧪 Unit Tests
  unit-tests:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🧪 Run unit tests
        run: npm run test:coverage

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: 📈 Coverage check
        run: |
          COVERAGE=$(node -e "console.log(JSON.parse(require('fs').readFileSync('./coverage/coverage-summary.json')).total.lines.pct)")
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 90" | bc -l) )); then
            echo "❌ Coverage below 90%"
            exit 1
          fi
          echo "✅ Coverage above 90%"

  # 🎭 E2E Tests
  e2e-tests:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    needs: [quality-check, unit-tests]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: 🏗️ Build application
        run: npm run build

      - name: 🚀 Start application
        run: npm start &

      - name: ⏳ Wait for application
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: 🎭 Run E2E tests
        run: npx playwright test

      - name: 📸 Upload E2E test results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  # ⚡ Performance Tests
  performance-tests:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    needs: [unit-tests]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build

      - name: 🚀 Start application
        run: npm start &

      - name: ⏳ Wait for application
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: ⚡ Run load tests
        run: npx artillery run performance/load-test.yml

      - name: 📊 Upload performance results
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: test-results/performance-report.json

  # 🔒 Security Tests
  security-tests:
    name: 🔒 Security Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🔍 Snyk security scan
        run: npx snyk test --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 🔒 OWASP ZAP baseline scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'http://localhost:3000'

      - name: 🕵️ CodeQL analysis
        uses: github/codeql-action/analyze@v2
        with:
          languages: javascript

  # 🏗️ Build and Test
  build:
    name: 🏗️ Build & Deploy
    runs-on: ubuntu-latest
    needs: [quality-check, unit-tests, e2e-tests, security-tests]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/clean-main'
    
    strategy:
      matrix:
        environment: [staging, production]
        exclude:
          - environment: production
        include:
          - environment: production
            if: github.ref == 'refs/heads/main'
    
    environment: ${{ matrix.environment }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build:production
        env:
          NEXT_PUBLIC_ENV: ${{ matrix.environment }}

      - name: 🐳 Build Docker image
        run: |
          docker build -t sabq-ai-cms:${{ github.sha }} .
          docker tag sabq-ai-cms:${{ github.sha }} sabq-ai-cms:latest

      - name: 🔐 Login to container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Push Docker image
        run: |
          docker tag sabq-ai-cms:${{ github.sha }} ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker tag sabq-ai-cms:${{ github.sha }} ghcr.io/${{ github.repository }}:${{ matrix.environment }}
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
          docker push ghcr.io/${{ github.repository }}:${{ matrix.environment }}

  # 🚀 Deploy to Vercel
  deploy-vercel:
    name: 🚀 Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/clean-main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

      - name: 🎉 Deployment success notification
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "🌐 Production URL: https://sabq-ai-cms.vercel.app"

  # 🏥 Health Checks
  health-check:
    name: 🏥 Post-Deploy Health Check
    runs-on: ubuntu-latest
    needs: [deploy-vercel]
    if: always()
    
    steps:
      - name: 🏥 Check application health
        run: |
          sleep 30 # Wait for deployment to be ready
          
          # Check homepage
          curl -f https://sabq-ai-cms.vercel.app/ || exit 1
          
          # Check API health
          curl -f https://sabq-ai-cms.vercel.app/api/health || exit 1
          
          echo "✅ Health checks passed!"

      - name: 🔄 Run post-deploy smoke tests
        run: |
          # Basic functionality tests
          curl -f https://sabq-ai-cms.vercel.app/api/recommendations || echo "⚠️ Recommendations API issue"
          curl -f https://sabq-ai-cms.vercel.app/api/categories || echo "⚠️ Categories API issue"

  # 📊 Performance Monitoring
  performance-monitoring:
    name: 📊 Performance Monitoring
    runs-on: ubuntu-latest
    needs: [health-check]
    if: always()
    
    steps:
      - name: 📊 Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          uploadArtifacts: true
          temporaryPublicStorage: true
          urls: |
            https://sabq-ai-cms.vercel.app/
            https://sabq-ai-cms.vercel.app/news
            https://sabq-ai-cms.vercel.app/technology

      - name: 📈 WebPageTest
        uses: WPO-Foundation/webpagetest-github-action@v1
        with:
          apikey: ${{ secrets.WPT_API_KEY }}
          urls: 'https://sabq-ai-cms.vercel.app/'

  # 🧹 Cleanup
  cleanup:
    name: 🧹 Cleanup
    runs-on: ubuntu-latest
    needs: [performance-monitoring]
    if: always()
    
    steps:
      - name: 🧹 Clean up old Docker images
        run: |
          # Keep only last 5 images
          docker image prune -af --filter "until=168h"

      - name: 📊 Generate deployment report
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "📊 Performance metrics collected"
          echo "🔒 Security scans passed"
          echo "✅ All tests passed"

  # 📧 Notifications
  notify:
    name: 📧 Notifications
    runs-on: ubuntu-latest
    needs: [cleanup]
    if: always()
    
    steps:
      - name: 📧 Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        if: always()

      - name: 📧 Teams notification
        uses: aliencube/microsoft-teams-actions@v0.8.0
        with:
          webhook_uri: ${{ secrets.TEAMS_WEBHOOK }}
          title: 'Sabq AI CMS Deployment'
          summary: 'Deployment ${{ job.status }}'
          text: 'Deployment to production ${{ job.status }}'
        if: always()

# 🎯 Workflow concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
